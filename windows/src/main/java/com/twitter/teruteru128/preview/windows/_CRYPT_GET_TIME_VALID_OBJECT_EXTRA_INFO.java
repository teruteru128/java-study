// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
 *     DWORD cbSize;
 *     int iDeltaCrlIndicator;
 *     LPFILETIME pftCacheResync;
 *     LPFILETIME pLastSyncTime;
 *     LPFILETIME pMaxAgeTime;
 *     PCERT_REVOCATION_CHAIN_PARA pChainPara;
 *     PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
 * };
 * }
 */
public class _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2201.const$1;
    }
    public static VarHandle cbSize$VH() {
        return constants$2201.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$2201.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$2201.const$2.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$2201.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$2201.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iDeltaCrlIndicator$VH() {
        return constants$2201.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int iDeltaCrlIndicator;
     * }
     */
    public static int iDeltaCrlIndicator$get(MemorySegment seg) {
        return (int)constants$2201.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int iDeltaCrlIndicator;
     * }
     */
    public static void iDeltaCrlIndicator$set(MemorySegment seg, int x) {
        constants$2201.const$3.set(seg, x);
    }
    public static int iDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (int)constants$2201.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void iDeltaCrlIndicator$set(MemorySegment seg, long index, int x) {
        constants$2201.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pftCacheResync$VH() {
        return constants$2201.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pftCacheResync;
     * }
     */
    public static MemorySegment pftCacheResync$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2201.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pftCacheResync;
     * }
     */
    public static void pftCacheResync$set(MemorySegment seg, MemorySegment x) {
        constants$2201.const$4.set(seg, x);
    }
    public static MemorySegment pftCacheResync$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2201.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pftCacheResync$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2201.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pLastSyncTime$VH() {
        return constants$2201.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pLastSyncTime;
     * }
     */
    public static MemorySegment pLastSyncTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2201.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pLastSyncTime;
     * }
     */
    public static void pLastSyncTime$set(MemorySegment seg, MemorySegment x) {
        constants$2201.const$5.set(seg, x);
    }
    public static MemorySegment pLastSyncTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2201.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pLastSyncTime$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2201.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMaxAgeTime$VH() {
        return constants$2202.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pMaxAgeTime;
     * }
     */
    public static MemorySegment pMaxAgeTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pMaxAgeTime;
     * }
     */
    public static void pMaxAgeTime$set(MemorySegment seg, MemorySegment x) {
        constants$2202.const$0.set(seg, x);
    }
    public static MemorySegment pMaxAgeTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pMaxAgeTime$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2202.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pChainPara$VH() {
        return constants$2202.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_REVOCATION_CHAIN_PARA pChainPara;
     * }
     */
    public static MemorySegment pChainPara$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_REVOCATION_CHAIN_PARA pChainPara;
     * }
     */
    public static void pChainPara$set(MemorySegment seg, MemorySegment x) {
        constants$2202.const$1.set(seg, x);
    }
    public static MemorySegment pChainPara$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pChainPara$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2202.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDeltaCrlIndicator$VH() {
        return constants$2202.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
     * }
     */
    public static MemorySegment pDeltaCrlIndicator$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
     * }
     */
    public static void pDeltaCrlIndicator$set(MemorySegment seg, MemorySegment x) {
        constants$2202.const$2.set(seg, x);
    }
    public static MemorySegment pDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2202.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pDeltaCrlIndicator$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2202.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


