// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*CS_TAG_GETTING_ROUTINE)(void* hBinding,int fServerSide,unsigned long* pulSendingTag,unsigned long* pulDesiredReceivingTag,unsigned long* pulReceivingTag,unsigned long* pStatus);
 * }
 */
public interface CS_TAG_GETTING_ROUTINE {

    void apply(java.lang.foreign.MemorySegment hBinding, int fServerSide, java.lang.foreign.MemorySegment pulSendingTag, java.lang.foreign.MemorySegment pulDesiredReceivingTag, java.lang.foreign.MemorySegment pulReceivingTag, java.lang.foreign.MemorySegment pStatus);
    static MemorySegment allocate(CS_TAG_GETTING_ROUTINE fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2285.const$3, fi, constants$2285.const$2, scope);
    }
    static CS_TAG_GETTING_ROUTINE ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _hBinding, int _fServerSide, java.lang.foreign.MemorySegment _pulSendingTag, java.lang.foreign.MemorySegment _pulDesiredReceivingTag, java.lang.foreign.MemorySegment _pulReceivingTag, java.lang.foreign.MemorySegment _pStatus) -> {
            try {
                constants$2285.const$4.invokeExact(symbol, _hBinding, _fServerSide, _pulSendingTag, _pulDesiredReceivingTag, _pulReceivingTag, _pStatus);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


