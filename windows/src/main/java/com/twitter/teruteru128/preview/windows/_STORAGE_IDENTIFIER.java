// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_IDENTIFIER {
 *     STORAGE_IDENTIFIER_CODE_SET CodeSet;
 *     STORAGE_IDENTIFIER_TYPE Type;
 *     WORD IdentifierSize;
 *     WORD NextOffset;
 *     STORAGE_ASSOCIATION_TYPE Association;
 *     BYTE Identifier[1];
 * };
 * }
 */
public class _STORAGE_IDENTIFIER {

    public static MemoryLayout $LAYOUT() {
        return constants$2394.const$3;
    }
    public static VarHandle CodeSet$VH() {
        return constants$2394.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_IDENTIFIER_CODE_SET CodeSet;
     * }
     */
    public static int CodeSet$get(MemorySegment seg) {
        return (int)constants$2394.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_IDENTIFIER_CODE_SET CodeSet;
     * }
     */
    public static void CodeSet$set(MemorySegment seg, int x) {
        constants$2394.const$4.set(seg, x);
    }
    public static int CodeSet$get(MemorySegment seg, long index) {
        return (int)constants$2394.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void CodeSet$set(MemorySegment seg, long index, int x) {
        constants$2394.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Type$VH() {
        return constants$2394.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_IDENTIFIER_TYPE Type;
     * }
     */
    public static int Type$get(MemorySegment seg) {
        return (int)constants$2394.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_IDENTIFIER_TYPE Type;
     * }
     */
    public static void Type$set(MemorySegment seg, int x) {
        constants$2394.const$5.set(seg, x);
    }
    public static int Type$get(MemorySegment seg, long index) {
        return (int)constants$2394.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Type$set(MemorySegment seg, long index, int x) {
        constants$2394.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IdentifierSize$VH() {
        return constants$2395.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD IdentifierSize;
     * }
     */
    public static short IdentifierSize$get(MemorySegment seg) {
        return (short)constants$2395.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD IdentifierSize;
     * }
     */
    public static void IdentifierSize$set(MemorySegment seg, short x) {
        constants$2395.const$0.set(seg, x);
    }
    public static short IdentifierSize$get(MemorySegment seg, long index) {
        return (short)constants$2395.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void IdentifierSize$set(MemorySegment seg, long index, short x) {
        constants$2395.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NextOffset$VH() {
        return constants$2395.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD NextOffset;
     * }
     */
    public static short NextOffset$get(MemorySegment seg) {
        return (short)constants$2395.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD NextOffset;
     * }
     */
    public static void NextOffset$set(MemorySegment seg, short x) {
        constants$2395.const$1.set(seg, x);
    }
    public static short NextOffset$get(MemorySegment seg, long index) {
        return (short)constants$2395.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void NextOffset$set(MemorySegment seg, long index, short x) {
        constants$2395.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Association$VH() {
        return constants$2395.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_ASSOCIATION_TYPE Association;
     * }
     */
    public static int Association$get(MemorySegment seg) {
        return (int)constants$2395.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_ASSOCIATION_TYPE Association;
     * }
     */
    public static void Association$set(MemorySegment seg, int x) {
        constants$2395.const$2.set(seg, x);
    }
    public static int Association$get(MemorySegment seg, long index) {
        return (int)constants$2395.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Association$set(MemorySegment seg, long index, int x) {
        constants$2395.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Identifier$slice(MemorySegment seg) {
        return seg.asSlice(16, 1);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


