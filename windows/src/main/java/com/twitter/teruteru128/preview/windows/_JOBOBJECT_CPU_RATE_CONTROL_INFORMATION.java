// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {
 *     DWORD ControlFlags;
 *     union {
 *         DWORD CpuRate;
 *         DWORD Weight;
 *         struct {
 *             WORD MinRate;
 *             WORD MaxRate;
 *         };
 *     };
 * };
 * }
 */
public class _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {

    public static MemoryLayout $LAYOUT() {
        return constants$217.const$0;
    }
    public static VarHandle ControlFlags$VH() {
        return constants$217.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ControlFlags;
     * }
     */
    public static int ControlFlags$get(MemorySegment seg) {
        return (int)constants$217.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ControlFlags;
     * }
     */
    public static void ControlFlags$set(MemorySegment seg, int x) {
        constants$217.const$1.set(seg, x);
    }
    public static int ControlFlags$get(MemorySegment seg, long index) {
        return (int)constants$217.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ControlFlags$set(MemorySegment seg, long index, int x) {
        constants$217.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CpuRate$VH() {
        return constants$217.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD CpuRate;
     * }
     */
    public static int CpuRate$get(MemorySegment seg) {
        return (int)constants$217.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD CpuRate;
     * }
     */
    public static void CpuRate$set(MemorySegment seg, int x) {
        constants$217.const$2.set(seg, x);
    }
    public static int CpuRate$get(MemorySegment seg, long index) {
        return (int)constants$217.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void CpuRate$set(MemorySegment seg, long index, int x) {
        constants$217.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Weight$VH() {
        return constants$217.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Weight;
     * }
     */
    public static int Weight$get(MemorySegment seg) {
        return (int)constants$217.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Weight;
     * }
     */
    public static void Weight$set(MemorySegment seg, int x) {
        constants$217.const$3.set(seg, x);
    }
    public static int Weight$get(MemorySegment seg, long index) {
        return (int)constants$217.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Weight$set(MemorySegment seg, long index, int x) {
        constants$217.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MinRate$VH() {
        return constants$217.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD MinRate;
     * }
     */
    public static short MinRate$get(MemorySegment seg) {
        return (short)constants$217.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD MinRate;
     * }
     */
    public static void MinRate$set(MemorySegment seg, short x) {
        constants$217.const$4.set(seg, x);
    }
    public static short MinRate$get(MemorySegment seg, long index) {
        return (short)constants$217.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MinRate$set(MemorySegment seg, long index, short x) {
        constants$217.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MaxRate$VH() {
        return constants$217.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD MaxRate;
     * }
     */
    public static short MaxRate$get(MemorySegment seg) {
        return (short)constants$217.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD MaxRate;
     * }
     */
    public static void MaxRate$set(MemorySegment seg, short x) {
        constants$217.const$5.set(seg, x);
    }
    public static short MaxRate$get(MemorySegment seg, long index) {
        return (short)constants$217.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxRate$set(MemorySegment seg, long index, short x) {
        constants$217.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


