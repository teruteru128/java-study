// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*RPC_OBJECT_INQ_FN)(UUID* ObjectUuid,UUID* TypeUuid,RPC_STATUS* Status);
 * }
 */
public interface RPC_OBJECT_INQ_FN {

    void apply(java.lang.foreign.MemorySegment pszObjectOid, java.lang.foreign.MemorySegment pObject, java.lang.foreign.MemorySegment pvFreeContext);
    static MemorySegment allocate(RPC_OBJECT_INQ_FN fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1714.const$3, fi, constants$508.const$5, scope);
    }
    static RPC_OBJECT_INQ_FN ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _pszObjectOid, java.lang.foreign.MemorySegment _pObject, java.lang.foreign.MemorySegment _pvFreeContext) -> {
            try {
                constants$534.const$5.invokeExact(symbol, _pszObjectOid, _pObject, _pvFreeContext);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


