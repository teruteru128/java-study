// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMCI_SEQ_SET_PARMS {
 *     DWORD_PTR dwCallback;
 *     DWORD dwTimeFormat;
 *     DWORD dwAudio;
 *     DWORD dwTempo;
 *     DWORD dwPort;
 *     DWORD dwSlave;
 *     DWORD dwMaster;
 *     DWORD dwOffset;
 * };
 * }
 */
public class tagMCI_SEQ_SET_PARMS {

    public static MemoryLayout $LAYOUT() {
        return constants$1577.const$0;
    }
    public static VarHandle dwCallback$VH() {
        return constants$1577.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD_PTR dwCallback;
     * }
     */
    public static long dwCallback$get(MemorySegment seg) {
        return (long)constants$1577.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD_PTR dwCallback;
     * }
     */
    public static void dwCallback$set(MemorySegment seg, long x) {
        constants$1577.const$1.set(seg, x);
    }
    public static long dwCallback$get(MemorySegment seg, long index) {
        return (long)constants$1577.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCallback$set(MemorySegment seg, long index, long x) {
        constants$1577.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTimeFormat$VH() {
        return constants$1577.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTimeFormat;
     * }
     */
    public static int dwTimeFormat$get(MemorySegment seg) {
        return (int)constants$1577.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTimeFormat;
     * }
     */
    public static void dwTimeFormat$set(MemorySegment seg, int x) {
        constants$1577.const$2.set(seg, x);
    }
    public static int dwTimeFormat$get(MemorySegment seg, long index) {
        return (int)constants$1577.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTimeFormat$set(MemorySegment seg, long index, int x) {
        constants$1577.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwAudio$VH() {
        return constants$1577.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAudio;
     * }
     */
    public static int dwAudio$get(MemorySegment seg) {
        return (int)constants$1577.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAudio;
     * }
     */
    public static void dwAudio$set(MemorySegment seg, int x) {
        constants$1577.const$3.set(seg, x);
    }
    public static int dwAudio$get(MemorySegment seg, long index) {
        return (int)constants$1577.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAudio$set(MemorySegment seg, long index, int x) {
        constants$1577.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTempo$VH() {
        return constants$1577.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTempo;
     * }
     */
    public static int dwTempo$get(MemorySegment seg) {
        return (int)constants$1577.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTempo;
     * }
     */
    public static void dwTempo$set(MemorySegment seg, int x) {
        constants$1577.const$4.set(seg, x);
    }
    public static int dwTempo$get(MemorySegment seg, long index) {
        return (int)constants$1577.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTempo$set(MemorySegment seg, long index, int x) {
        constants$1577.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPort$VH() {
        return constants$1577.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPort;
     * }
     */
    public static int dwPort$get(MemorySegment seg) {
        return (int)constants$1577.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPort;
     * }
     */
    public static void dwPort$set(MemorySegment seg, int x) {
        constants$1577.const$5.set(seg, x);
    }
    public static int dwPort$get(MemorySegment seg, long index) {
        return (int)constants$1577.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPort$set(MemorySegment seg, long index, int x) {
        constants$1577.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwSlave$VH() {
        return constants$1578.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSlave;
     * }
     */
    public static int dwSlave$get(MemorySegment seg) {
        return (int)constants$1578.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSlave;
     * }
     */
    public static void dwSlave$set(MemorySegment seg, int x) {
        constants$1578.const$0.set(seg, x);
    }
    public static int dwSlave$get(MemorySegment seg, long index) {
        return (int)constants$1578.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSlave$set(MemorySegment seg, long index, int x) {
        constants$1578.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMaster$VH() {
        return constants$1578.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMaster;
     * }
     */
    public static int dwMaster$get(MemorySegment seg) {
        return (int)constants$1578.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMaster;
     * }
     */
    public static void dwMaster$set(MemorySegment seg, int x) {
        constants$1578.const$1.set(seg, x);
    }
    public static int dwMaster$get(MemorySegment seg, long index) {
        return (int)constants$1578.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMaster$set(MemorySegment seg, long index, int x) {
        constants$1578.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwOffset$VH() {
        return constants$1578.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwOffset;
     * }
     */
    public static int dwOffset$get(MemorySegment seg) {
        return (int)constants$1578.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwOffset;
     * }
     */
    public static void dwOffset$set(MemorySegment seg, int x) {
        constants$1578.const$2.set(seg, x);
    }
    public static int dwOffset$get(MemorySegment seg, long index) {
        return (int)constants$1578.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwOffset$set(MemorySegment seg, long index, int x) {
        constants$1578.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


