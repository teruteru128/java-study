// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     EPrintPropertyType ePropertyType;
 *     union  value;
 * };
 * }
 */
public class PrintPropertyValue {

    public static MemoryLayout $LAYOUT() {
        return constants$2946.const$1;
    }
    public static VarHandle ePropertyType$VH() {
        return constants$2946.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * EPrintPropertyType ePropertyType;
     * }
     */
    public static int ePropertyType$get(MemorySegment seg) {
        return (int)constants$2946.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * EPrintPropertyType ePropertyType;
     * }
     */
    public static void ePropertyType$set(MemorySegment seg, int x) {
        constants$2946.const$2.set(seg, x);
    }
    public static int ePropertyType$get(MemorySegment seg, long index) {
        return (int)constants$2946.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ePropertyType$set(MemorySegment seg, long index, int x) {
        constants$2946.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * union {
     *     BYTE propertyByte;
     *     PWSTR propertyString;
     *     LONG propertyInt32;
     *     LONGLONG propertyInt64;
     *     struct  propertyBlob;
     * };
     * }
     */
    public static final class value {

        // Suppresses default constructor, ensuring non-instantiability.
        private value() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2946.const$3;
        }
        public static VarHandle propertyByte$VH() {
            return constants$2946.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * BYTE propertyByte;
         * }
         */
        public static byte propertyByte$get(MemorySegment seg) {
            return (byte)constants$2946.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * BYTE propertyByte;
         * }
         */
        public static void propertyByte$set(MemorySegment seg, byte x) {
            constants$2946.const$4.set(seg, x);
        }
        public static byte propertyByte$get(MemorySegment seg, long index) {
            return (byte)constants$2946.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void propertyByte$set(MemorySegment seg, long index, byte x) {
            constants$2946.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle propertyString$VH() {
            return constants$2946.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PWSTR propertyString;
         * }
         */
        public static MemorySegment propertyString$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$2946.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PWSTR propertyString;
         * }
         */
        public static void propertyString$set(MemorySegment seg, MemorySegment x) {
            constants$2946.const$5.set(seg, x);
        }
        public static MemorySegment propertyString$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$2946.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void propertyString$set(MemorySegment seg, long index, MemorySegment x) {
            constants$2946.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle propertyInt32$VH() {
            return constants$2947.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * LONG propertyInt32;
         * }
         */
        public static int propertyInt32$get(MemorySegment seg) {
            return (int)constants$2947.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * LONG propertyInt32;
         * }
         */
        public static void propertyInt32$set(MemorySegment seg, int x) {
            constants$2947.const$0.set(seg, x);
        }
        public static int propertyInt32$get(MemorySegment seg, long index) {
            return (int)constants$2947.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void propertyInt32$set(MemorySegment seg, long index, int x) {
            constants$2947.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle propertyInt64$VH() {
            return constants$2947.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * LONGLONG propertyInt64;
         * }
         */
        public static long propertyInt64$get(MemorySegment seg) {
            return (long)constants$2947.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * LONGLONG propertyInt64;
         * }
         */
        public static void propertyInt64$set(MemorySegment seg, long x) {
            constants$2947.const$1.set(seg, x);
        }
        public static long propertyInt64$get(MemorySegment seg, long index) {
            return (long)constants$2947.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void propertyInt64$set(MemorySegment seg, long index, long x) {
            constants$2947.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        /**
         * {@snippet :
         * struct {
         *     DWORD cbBuf;
         *     LPVOID pBuf;
         * };
         * }
         */
        public static final class propertyBlob {

            // Suppresses default constructor, ensuring non-instantiability.
            private propertyBlob() {}
            public static MemoryLayout $LAYOUT() {
                return constants$2924.const$5;
            }
            public static VarHandle cbBuf$VH() {
                return constants$2947.const$2;
            }
            /**
             * Getter for field:
             * {@snippet :
             * DWORD cbBuf;
             * }
             */
            public static int cbBuf$get(MemorySegment seg) {
                return (int)constants$2947.const$2.get(seg);
            }
            /**
             * Setter for field:
             * {@snippet :
             * DWORD cbBuf;
             * }
             */
            public static void cbBuf$set(MemorySegment seg, int x) {
                constants$2947.const$2.set(seg, x);
            }
            public static int cbBuf$get(MemorySegment seg, long index) {
                return (int)constants$2947.const$2.get(seg.asSlice(index*sizeof()));
            }
            public static void cbBuf$set(MemorySegment seg, long index, int x) {
                constants$2947.const$2.set(seg.asSlice(index*sizeof()), x);
            }
            public static VarHandle pBuf$VH() {
                return constants$2947.const$3;
            }
            /**
             * Getter for field:
             * {@snippet :
             * LPVOID pBuf;
             * }
             */
            public static MemorySegment pBuf$get(MemorySegment seg) {
                return (java.lang.foreign.MemorySegment)constants$2947.const$3.get(seg);
            }
            /**
             * Setter for field:
             * {@snippet :
             * LPVOID pBuf;
             * }
             */
            public static void pBuf$set(MemorySegment seg, MemorySegment x) {
                constants$2947.const$3.set(seg, x);
            }
            public static MemorySegment pBuf$get(MemorySegment seg, long index) {
                return (java.lang.foreign.MemorySegment)constants$2947.const$3.get(seg.asSlice(index*sizeof()));
            }
            public static void pBuf$set(MemorySegment seg, long index, MemorySegment x) {
                constants$2947.const$3.set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
            public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
                return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
            }
            public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
        }

        public static MemorySegment propertyBlob$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment value$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


