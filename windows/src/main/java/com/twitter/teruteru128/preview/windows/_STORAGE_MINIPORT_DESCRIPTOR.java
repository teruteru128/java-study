// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_MINIPORT_DESCRIPTOR {
 *     DWORD Version;
 *     DWORD Size;
 *     STORAGE_PORT_CODE_SET Portdriver;
 *     BOOLEAN LUNResetSupported;
 *     BOOLEAN TargetResetSupported;
 *     WORD IoTimeoutValue;
 *     BOOLEAN ExtraIoInfoSupported;
 *     union  Flags;
 *     BYTE Reserved0[2];
 *     DWORD Reserved1;
 * };
 * }
 */
public class _STORAGE_MINIPORT_DESCRIPTOR {

    public static MemoryLayout $LAYOUT() {
        return constants$2392.const$4;
    }
    public static VarHandle Version$VH() {
        return constants$2392.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$2392.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$2392.const$5.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$2392.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$2392.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Size$VH() {
        return constants$2393.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static int Size$get(MemorySegment seg) {
        return (int)constants$2393.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static void Size$set(MemorySegment seg, int x) {
        constants$2393.const$0.set(seg, x);
    }
    public static int Size$get(MemorySegment seg, long index) {
        return (int)constants$2393.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Size$set(MemorySegment seg, long index, int x) {
        constants$2393.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Portdriver$VH() {
        return constants$2393.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_PORT_CODE_SET Portdriver;
     * }
     */
    public static int Portdriver$get(MemorySegment seg) {
        return (int)constants$2393.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_PORT_CODE_SET Portdriver;
     * }
     */
    public static void Portdriver$set(MemorySegment seg, int x) {
        constants$2393.const$1.set(seg, x);
    }
    public static int Portdriver$get(MemorySegment seg, long index) {
        return (int)constants$2393.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Portdriver$set(MemorySegment seg, long index, int x) {
        constants$2393.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LUNResetSupported$VH() {
        return constants$2393.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN LUNResetSupported;
     * }
     */
    public static byte LUNResetSupported$get(MemorySegment seg) {
        return (byte)constants$2393.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN LUNResetSupported;
     * }
     */
    public static void LUNResetSupported$set(MemorySegment seg, byte x) {
        constants$2393.const$2.set(seg, x);
    }
    public static byte LUNResetSupported$get(MemorySegment seg, long index) {
        return (byte)constants$2393.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void LUNResetSupported$set(MemorySegment seg, long index, byte x) {
        constants$2393.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TargetResetSupported$VH() {
        return constants$2393.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN TargetResetSupported;
     * }
     */
    public static byte TargetResetSupported$get(MemorySegment seg) {
        return (byte)constants$2393.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN TargetResetSupported;
     * }
     */
    public static void TargetResetSupported$set(MemorySegment seg, byte x) {
        constants$2393.const$3.set(seg, x);
    }
    public static byte TargetResetSupported$get(MemorySegment seg, long index) {
        return (byte)constants$2393.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void TargetResetSupported$set(MemorySegment seg, long index, byte x) {
        constants$2393.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IoTimeoutValue$VH() {
        return constants$2393.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD IoTimeoutValue;
     * }
     */
    public static short IoTimeoutValue$get(MemorySegment seg) {
        return (short)constants$2393.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD IoTimeoutValue;
     * }
     */
    public static void IoTimeoutValue$set(MemorySegment seg, short x) {
        constants$2393.const$4.set(seg, x);
    }
    public static short IoTimeoutValue$get(MemorySegment seg, long index) {
        return (short)constants$2393.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void IoTimeoutValue$set(MemorySegment seg, long index, short x) {
        constants$2393.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ExtraIoInfoSupported$VH() {
        return constants$2393.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN ExtraIoInfoSupported;
     * }
     */
    public static byte ExtraIoInfoSupported$get(MemorySegment seg) {
        return (byte)constants$2393.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN ExtraIoInfoSupported;
     * }
     */
    public static void ExtraIoInfoSupported$set(MemorySegment seg, byte x) {
        constants$2393.const$5.set(seg, x);
    }
    public static byte ExtraIoInfoSupported$get(MemorySegment seg, long index) {
        return (byte)constants$2393.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ExtraIoInfoSupported$set(MemorySegment seg, long index, byte x) {
        constants$2393.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * union {
     *     struct {
     *              *         BYTE LogicalPoFxForDisk;
     *         BYTE Reserved;
     *     };
     *     BYTE AsBYTE;
     * };
     * }
     */
    public static final class Flags {

        // Suppresses default constructor, ensuring non-instantiability.
        private Flags() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2394.const$0;
        }
        public static VarHandle AsBYTE$VH() {
            return constants$2394.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * BYTE AsBYTE;
         * }
         */
        public static byte AsBYTE$get(MemorySegment seg) {
            return (byte)constants$2394.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * BYTE AsBYTE;
         * }
         */
        public static void AsBYTE$set(MemorySegment seg, byte x) {
            constants$2394.const$1.set(seg, x);
        }
        public static byte AsBYTE$get(MemorySegment seg, long index) {
            return (byte)constants$2394.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void AsBYTE$set(MemorySegment seg, long index, byte x) {
            constants$2394.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment Flags$slice(MemorySegment seg) {
        return seg.asSlice(17, 1);
    }
    public static MemorySegment Reserved0$slice(MemorySegment seg) {
        return seg.asSlice(18, 2);
    }
    public static VarHandle Reserved1$VH() {
        return constants$2394.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static int Reserved1$get(MemorySegment seg) {
        return (int)constants$2394.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static void Reserved1$set(MemorySegment seg, int x) {
        constants$2394.const$2.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)constants$2394.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        constants$2394.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


