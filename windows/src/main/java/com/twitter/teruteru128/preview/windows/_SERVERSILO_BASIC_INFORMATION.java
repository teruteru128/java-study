// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _SERVERSILO_BASIC_INFORMATION {
 *     DWORD ServiceSessionId;
 *     SERVERSILO_STATE State;
 *     DWORD ExitStatus;
 *     BOOLEAN IsDownlevelContainer;
 *     PVOID ApiSetSchema;
 *     PVOID HostApiSetSchema;
 * };
 * }
 */
public class _SERVERSILO_BASIC_INFORMATION {

    public static MemoryLayout $LAYOUT() {
        return constants$227.const$4;
    }
    public static VarHandle ServiceSessionId$VH() {
        return constants$227.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ServiceSessionId;
     * }
     */
    public static int ServiceSessionId$get(MemorySegment seg) {
        return (int)constants$227.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ServiceSessionId;
     * }
     */
    public static void ServiceSessionId$set(MemorySegment seg, int x) {
        constants$227.const$5.set(seg, x);
    }
    public static int ServiceSessionId$get(MemorySegment seg, long index) {
        return (int)constants$227.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ServiceSessionId$set(MemorySegment seg, long index, int x) {
        constants$227.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle State$VH() {
        return constants$228.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SERVERSILO_STATE State;
     * }
     */
    public static int State$get(MemorySegment seg) {
        return (int)constants$228.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SERVERSILO_STATE State;
     * }
     */
    public static void State$set(MemorySegment seg, int x) {
        constants$228.const$0.set(seg, x);
    }
    public static int State$get(MemorySegment seg, long index) {
        return (int)constants$228.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void State$set(MemorySegment seg, long index, int x) {
        constants$228.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ExitStatus$VH() {
        return constants$228.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ExitStatus;
     * }
     */
    public static int ExitStatus$get(MemorySegment seg) {
        return (int)constants$228.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ExitStatus;
     * }
     */
    public static void ExitStatus$set(MemorySegment seg, int x) {
        constants$228.const$1.set(seg, x);
    }
    public static int ExitStatus$get(MemorySegment seg, long index) {
        return (int)constants$228.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ExitStatus$set(MemorySegment seg, long index, int x) {
        constants$228.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IsDownlevelContainer$VH() {
        return constants$228.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN IsDownlevelContainer;
     * }
     */
    public static byte IsDownlevelContainer$get(MemorySegment seg) {
        return (byte)constants$228.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN IsDownlevelContainer;
     * }
     */
    public static void IsDownlevelContainer$set(MemorySegment seg, byte x) {
        constants$228.const$2.set(seg, x);
    }
    public static byte IsDownlevelContainer$get(MemorySegment seg, long index) {
        return (byte)constants$228.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void IsDownlevelContainer$set(MemorySegment seg, long index, byte x) {
        constants$228.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ApiSetSchema$VH() {
        return constants$228.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PVOID ApiSetSchema;
     * }
     */
    public static MemorySegment ApiSetSchema$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$228.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PVOID ApiSetSchema;
     * }
     */
    public static void ApiSetSchema$set(MemorySegment seg, MemorySegment x) {
        constants$228.const$3.set(seg, x);
    }
    public static MemorySegment ApiSetSchema$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$228.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ApiSetSchema$set(MemorySegment seg, long index, MemorySegment x) {
        constants$228.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle HostApiSetSchema$VH() {
        return constants$228.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PVOID HostApiSetSchema;
     * }
     */
    public static MemorySegment HostApiSetSchema$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$228.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PVOID HostApiSetSchema;
     * }
     */
    public static void HostApiSetSchema$set(MemorySegment seg, MemorySegment x) {
        constants$228.const$4.set(seg, x);
    }
    public static MemorySegment HostApiSetSchema$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$228.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void HostApiSetSchema$set(MemorySegment seg, long index, MemorySegment x) {
        constants$228.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


