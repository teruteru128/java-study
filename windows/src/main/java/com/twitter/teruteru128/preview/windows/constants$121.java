// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$121 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$121() {}
    static final UnionLayout const$0 = MemoryLayout.unionLayout(
        MemoryLayout.sequenceLayout(152, JAVA_BYTE).withName("Buffer"),
        MemoryLayout.structLayout(
            MemoryLayout.sequenceLayout(11, JAVA_LONG).withName("GpNvRegs"),
            MemoryLayout.sequenceLayout(8, JAVA_DOUBLE).withName("FpNvRegs")
        ).withName("$anon$0")
    ).withName("_DISPATCHER_CONTEXT_NONVOLREG_ARM64");
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_LONG.withName("ControlPc"),
        JAVA_LONG.withName("ImageBase"),
        RuntimeHelper.POINTER.withName("FunctionEntry"),
        JAVA_LONG.withName("EstablisherFrame"),
        JAVA_LONG.withName("TargetPc"),
        RuntimeHelper.POINTER.withName("ContextRecord"),
        RuntimeHelper.POINTER.withName("LanguageHandler"),
        RuntimeHelper.POINTER.withName("HandlerData"),
        RuntimeHelper.POINTER.withName("HistoryTable"),
        JAVA_INT.withName("ScopeIndex"),
        JAVA_BYTE.withName("ControlPcIsUnwound"),
        MemoryLayout.paddingLayout(3),
        RuntimeHelper.POINTER.withName("NonVolatileRegisters")
    ).withName("_DISPATCHER_CONTEXT_ARM64");
    static final VarHandle const$2 = constants$121.const$1.varHandle(MemoryLayout.PathElement.groupElement("ControlPc"));
    static final VarHandle const$3 = constants$121.const$1.varHandle(MemoryLayout.PathElement.groupElement("ImageBase"));
    static final VarHandle const$4 = constants$121.const$1.varHandle(MemoryLayout.PathElement.groupElement("FunctionEntry"));
    static final VarHandle const$5 = constants$121.const$1.varHandle(MemoryLayout.PathElement.groupElement("EstablisherFrame"));
}


