// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CLAIM_SECURITY_ATTRIBUTE_V1 {
 *     PWSTR Name;
 *     WORD ValueType;
 *     WORD Reserved;
 *     DWORD Flags;
 *     DWORD ValueCount;
 *     union  Values;
 * };
 * }
 */
public class _CLAIM_SECURITY_ATTRIBUTE_V1 {

    public static MemoryLayout $LAYOUT() {
        return constants$176.const$1;
    }
    public static VarHandle Name$VH() {
        return constants$176.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWSTR Name;
     * }
     */
    public static MemorySegment Name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$176.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWSTR Name;
     * }
     */
    public static void Name$set(MemorySegment seg, MemorySegment x) {
        constants$176.const$2.set(seg, x);
    }
    public static MemorySegment Name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$176.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$176.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ValueType$VH() {
        return constants$176.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD ValueType;
     * }
     */
    public static short ValueType$get(MemorySegment seg) {
        return (short)constants$176.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD ValueType;
     * }
     */
    public static void ValueType$set(MemorySegment seg, short x) {
        constants$176.const$3.set(seg, x);
    }
    public static short ValueType$get(MemorySegment seg, long index) {
        return (short)constants$176.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ValueType$set(MemorySegment seg, long index, short x) {
        constants$176.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved$VH() {
        return constants$176.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static short Reserved$get(MemorySegment seg) {
        return (short)constants$176.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, short x) {
        constants$176.const$4.set(seg, x);
    }
    public static short Reserved$get(MemorySegment seg, long index) {
        return (short)constants$176.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, short x) {
        constants$176.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$176.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$176.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$176.const$5.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$176.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$176.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ValueCount$VH() {
        return constants$177.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ValueCount;
     * }
     */
    public static int ValueCount$get(MemorySegment seg) {
        return (int)constants$177.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ValueCount;
     * }
     */
    public static void ValueCount$set(MemorySegment seg, int x) {
        constants$177.const$0.set(seg, x);
    }
    public static int ValueCount$get(MemorySegment seg, long index) {
        return (int)constants$177.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ValueCount$set(MemorySegment seg, long index, int x) {
        constants$177.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * union {
     *     PLONG64 pInt64;
     *     PDWORD64 pUint64;
     *     PWSTR* ppString;
     *     PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
     *     PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
     * };
     * }
     */
    public static final class Values {

        // Suppresses default constructor, ensuring non-instantiability.
        private Values() {}
        public static MemoryLayout $LAYOUT() {
            return constants$177.const$1;
        }
        public static VarHandle pInt64$VH() {
            return constants$177.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PLONG64 pInt64;
         * }
         */
        public static MemorySegment pInt64$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$177.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PLONG64 pInt64;
         * }
         */
        public static void pInt64$set(MemorySegment seg, MemorySegment x) {
            constants$177.const$2.set(seg, x);
        }
        public static MemorySegment pInt64$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$177.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void pInt64$set(MemorySegment seg, long index, MemorySegment x) {
            constants$177.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pUint64$VH() {
            return constants$177.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PDWORD64 pUint64;
         * }
         */
        public static MemorySegment pUint64$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$177.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PDWORD64 pUint64;
         * }
         */
        public static void pUint64$set(MemorySegment seg, MemorySegment x) {
            constants$177.const$3.set(seg, x);
        }
        public static MemorySegment pUint64$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$177.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void pUint64$set(MemorySegment seg, long index, MemorySegment x) {
            constants$177.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle ppString$VH() {
            return constants$177.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PWSTR* ppString;
         * }
         */
        public static MemorySegment ppString$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$177.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PWSTR* ppString;
         * }
         */
        public static void ppString$set(MemorySegment seg, MemorySegment x) {
            constants$177.const$4.set(seg, x);
        }
        public static MemorySegment ppString$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$177.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void ppString$set(MemorySegment seg, long index, MemorySegment x) {
            constants$177.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pFqbn$VH() {
            return constants$177.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
         * }
         */
        public static MemorySegment pFqbn$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$177.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
         * }
         */
        public static void pFqbn$set(MemorySegment seg, MemorySegment x) {
            constants$177.const$5.set(seg, x);
        }
        public static MemorySegment pFqbn$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$177.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void pFqbn$set(MemorySegment seg, long index, MemorySegment x) {
            constants$177.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle pOctetString$VH() {
            return constants$178.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
         * }
         */
        public static MemorySegment pOctetString$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$178.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
         * }
         */
        public static void pOctetString$set(MemorySegment seg, MemorySegment x) {
            constants$178.const$0.set(seg, x);
        }
        public static MemorySegment pOctetString$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$178.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void pOctetString$set(MemorySegment seg, long index, MemorySegment x) {
            constants$178.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment Values$slice(MemorySegment seg) {
        return seg.asSlice(24, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


