// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DRIVER_INFO_8W {
 *     DWORD cVersion;
 *     LPWSTR pName;
 *     LPWSTR pEnvironment;
 *     LPWSTR pDriverPath;
 *     LPWSTR pDataFile;
 *     LPWSTR pConfigFile;
 *     LPWSTR pHelpFile;
 *     LPWSTR pDependentFiles;
 *     LPWSTR pMonitorName;
 *     LPWSTR pDefaultDataType;
 *     LPWSTR pszzPreviousNames;
 *     FILETIME ftDriverDate;
 *     DWORDLONG dwlDriverVersion;
 *     LPWSTR pszMfgName;
 *     LPWSTR pszOEMUrl;
 *     LPWSTR pszHardwareID;
 *     LPWSTR pszProvider;
 *     LPWSTR pszPrintProcessor;
 *     LPWSTR pszVendorSetup;
 *     LPWSTR pszzColorProfiles;
 *     LPWSTR pszInfPath;
 *     DWORD dwPrinterDriverAttributes;
 *     LPWSTR pszzCoreDriverDependencies;
 *     FILETIME ftMinInboxDriverVerDate;
 *     DWORDLONG dwlMinInboxDriverVerVersion;
 * };
 * }
 */
public class _DRIVER_INFO_8W {

    public static MemoryLayout $LAYOUT() {
        return constants$2881.const$2;
    }
    public static VarHandle cVersion$VH() {
        return constants$2881.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cVersion;
     * }
     */
    public static int cVersion$get(MemorySegment seg) {
        return (int)constants$2881.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cVersion;
     * }
     */
    public static void cVersion$set(MemorySegment seg, int x) {
        constants$2881.const$3.set(seg, x);
    }
    public static int cVersion$get(MemorySegment seg, long index) {
        return (int)constants$2881.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cVersion$set(MemorySegment seg, long index, int x) {
        constants$2881.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pName$VH() {
        return constants$2881.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pName;
     * }
     */
    public static MemorySegment pName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2881.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pName;
     * }
     */
    public static void pName$set(MemorySegment seg, MemorySegment x) {
        constants$2881.const$4.set(seg, x);
    }
    public static MemorySegment pName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2881.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2881.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pEnvironment$VH() {
        return constants$2881.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pEnvironment;
     * }
     */
    public static MemorySegment pEnvironment$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2881.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pEnvironment;
     * }
     */
    public static void pEnvironment$set(MemorySegment seg, MemorySegment x) {
        constants$2881.const$5.set(seg, x);
    }
    public static MemorySegment pEnvironment$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2881.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pEnvironment$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2881.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDriverPath$VH() {
        return constants$2882.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDriverPath;
     * }
     */
    public static MemorySegment pDriverPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDriverPath;
     * }
     */
    public static void pDriverPath$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$0.set(seg, x);
    }
    public static MemorySegment pDriverPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pDriverPath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDataFile$VH() {
        return constants$2882.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDataFile;
     * }
     */
    public static MemorySegment pDataFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDataFile;
     * }
     */
    public static void pDataFile$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$1.set(seg, x);
    }
    public static MemorySegment pDataFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pDataFile$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pConfigFile$VH() {
        return constants$2882.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pConfigFile;
     * }
     */
    public static MemorySegment pConfigFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pConfigFile;
     * }
     */
    public static void pConfigFile$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$2.set(seg, x);
    }
    public static MemorySegment pConfigFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pConfigFile$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pHelpFile$VH() {
        return constants$2882.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pHelpFile;
     * }
     */
    public static MemorySegment pHelpFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pHelpFile;
     * }
     */
    public static void pHelpFile$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$3.set(seg, x);
    }
    public static MemorySegment pHelpFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pHelpFile$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDependentFiles$VH() {
        return constants$2882.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDependentFiles;
     * }
     */
    public static MemorySegment pDependentFiles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDependentFiles;
     * }
     */
    public static void pDependentFiles$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$4.set(seg, x);
    }
    public static MemorySegment pDependentFiles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pDependentFiles$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMonitorName$VH() {
        return constants$2882.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pMonitorName;
     * }
     */
    public static MemorySegment pMonitorName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pMonitorName;
     * }
     */
    public static void pMonitorName$set(MemorySegment seg, MemorySegment x) {
        constants$2882.const$5.set(seg, x);
    }
    public static MemorySegment pMonitorName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2882.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pMonitorName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2882.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDefaultDataType$VH() {
        return constants$2883.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDefaultDataType;
     * }
     */
    public static MemorySegment pDefaultDataType$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDefaultDataType;
     * }
     */
    public static void pDefaultDataType$set(MemorySegment seg, MemorySegment x) {
        constants$2883.const$0.set(seg, x);
    }
    public static MemorySegment pDefaultDataType$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pDefaultDataType$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2883.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszzPreviousNames$VH() {
        return constants$2883.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszzPreviousNames;
     * }
     */
    public static MemorySegment pszzPreviousNames$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszzPreviousNames;
     * }
     */
    public static void pszzPreviousNames$set(MemorySegment seg, MemorySegment x) {
        constants$2883.const$1.set(seg, x);
    }
    public static MemorySegment pszzPreviousNames$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pszzPreviousNames$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2883.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ftDriverDate$slice(MemorySegment seg) {
        return seg.asSlice(88, 8);
    }
    public static VarHandle dwlDriverVersion$VH() {
        return constants$2883.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG dwlDriverVersion;
     * }
     */
    public static long dwlDriverVersion$get(MemorySegment seg) {
        return (long)constants$2883.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG dwlDriverVersion;
     * }
     */
    public static void dwlDriverVersion$set(MemorySegment seg, long x) {
        constants$2883.const$2.set(seg, x);
    }
    public static long dwlDriverVersion$get(MemorySegment seg, long index) {
        return (long)constants$2883.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwlDriverVersion$set(MemorySegment seg, long index, long x) {
        constants$2883.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszMfgName$VH() {
        return constants$2883.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszMfgName;
     * }
     */
    public static MemorySegment pszMfgName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszMfgName;
     * }
     */
    public static void pszMfgName$set(MemorySegment seg, MemorySegment x) {
        constants$2883.const$3.set(seg, x);
    }
    public static MemorySegment pszMfgName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pszMfgName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2883.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszOEMUrl$VH() {
        return constants$2883.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszOEMUrl;
     * }
     */
    public static MemorySegment pszOEMUrl$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszOEMUrl;
     * }
     */
    public static void pszOEMUrl$set(MemorySegment seg, MemorySegment x) {
        constants$2883.const$4.set(seg, x);
    }
    public static MemorySegment pszOEMUrl$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pszOEMUrl$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2883.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszHardwareID$VH() {
        return constants$2883.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszHardwareID;
     * }
     */
    public static MemorySegment pszHardwareID$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszHardwareID;
     * }
     */
    public static void pszHardwareID$set(MemorySegment seg, MemorySegment x) {
        constants$2883.const$5.set(seg, x);
    }
    public static MemorySegment pszHardwareID$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2883.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pszHardwareID$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2883.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszProvider$VH() {
        return constants$2884.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszProvider;
     * }
     */
    public static MemorySegment pszProvider$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszProvider;
     * }
     */
    public static void pszProvider$set(MemorySegment seg, MemorySegment x) {
        constants$2884.const$0.set(seg, x);
    }
    public static MemorySegment pszProvider$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pszProvider$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2884.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszPrintProcessor$VH() {
        return constants$2884.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszPrintProcessor;
     * }
     */
    public static MemorySegment pszPrintProcessor$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszPrintProcessor;
     * }
     */
    public static void pszPrintProcessor$set(MemorySegment seg, MemorySegment x) {
        constants$2884.const$1.set(seg, x);
    }
    public static MemorySegment pszPrintProcessor$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pszPrintProcessor$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2884.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszVendorSetup$VH() {
        return constants$2884.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszVendorSetup;
     * }
     */
    public static MemorySegment pszVendorSetup$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszVendorSetup;
     * }
     */
    public static void pszVendorSetup$set(MemorySegment seg, MemorySegment x) {
        constants$2884.const$2.set(seg, x);
    }
    public static MemorySegment pszVendorSetup$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pszVendorSetup$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2884.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszzColorProfiles$VH() {
        return constants$2884.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszzColorProfiles;
     * }
     */
    public static MemorySegment pszzColorProfiles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszzColorProfiles;
     * }
     */
    public static void pszzColorProfiles$set(MemorySegment seg, MemorySegment x) {
        constants$2884.const$3.set(seg, x);
    }
    public static MemorySegment pszzColorProfiles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pszzColorProfiles$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2884.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszInfPath$VH() {
        return constants$2884.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszInfPath;
     * }
     */
    public static MemorySegment pszInfPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszInfPath;
     * }
     */
    public static void pszInfPath$set(MemorySegment seg, MemorySegment x) {
        constants$2884.const$4.set(seg, x);
    }
    public static MemorySegment pszInfPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2884.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pszInfPath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2884.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPrinterDriverAttributes$VH() {
        return constants$2884.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPrinterDriverAttributes;
     * }
     */
    public static int dwPrinterDriverAttributes$get(MemorySegment seg) {
        return (int)constants$2884.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPrinterDriverAttributes;
     * }
     */
    public static void dwPrinterDriverAttributes$set(MemorySegment seg, int x) {
        constants$2884.const$5.set(seg, x);
    }
    public static int dwPrinterDriverAttributes$get(MemorySegment seg, long index) {
        return (int)constants$2884.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPrinterDriverAttributes$set(MemorySegment seg, long index, int x) {
        constants$2884.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszzCoreDriverDependencies$VH() {
        return constants$2885.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pszzCoreDriverDependencies;
     * }
     */
    public static MemorySegment pszzCoreDriverDependencies$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2885.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pszzCoreDriverDependencies;
     * }
     */
    public static void pszzCoreDriverDependencies$set(MemorySegment seg, MemorySegment x) {
        constants$2885.const$0.set(seg, x);
    }
    public static MemorySegment pszzCoreDriverDependencies$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2885.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pszzCoreDriverDependencies$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2885.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ftMinInboxDriverVerDate$slice(MemorySegment seg) {
        return seg.asSlice(184, 8);
    }
    public static VarHandle dwlMinInboxDriverVerVersion$VH() {
        return constants$2885.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG dwlMinInboxDriverVerVersion;
     * }
     */
    public static long dwlMinInboxDriverVerVersion$get(MemorySegment seg) {
        return (long)constants$2885.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG dwlMinInboxDriverVerVersion;
     * }
     */
    public static void dwlMinInboxDriverVerVersion$set(MemorySegment seg, long x) {
        constants$2885.const$1.set(seg, x);
    }
    public static long dwlMinInboxDriverVerVersion$get(MemorySegment seg, long index) {
        return (long)constants$2885.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwlMinInboxDriverVerVersion$set(MemorySegment seg, long index, long x) {
        constants$2885.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


