// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {
 *     DWORD Size;
 *     DEVICE_DSM_ACTION Action;
 *     DWORD Flags;
 *     DWORD OperationStatus;
 *     DWORD ExtendedError;
 *     DWORD TargetDetailedError;
 *     DWORD ReservedStatus;
 *     DWORD OutputBlockOffset;
 *     DWORD OutputBlockLength;
 * };
 * }
 */
public class _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {

    public static MemoryLayout $LAYOUT() {
        return constants$2441.const$5;
    }
    public static VarHandle Size$VH() {
        return constants$2442.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static int Size$get(MemorySegment seg) {
        return (int)constants$2442.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static void Size$set(MemorySegment seg, int x) {
        constants$2442.const$0.set(seg, x);
    }
    public static int Size$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Size$set(MemorySegment seg, long index, int x) {
        constants$2442.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Action$VH() {
        return constants$2442.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DEVICE_DSM_ACTION Action;
     * }
     */
    public static int Action$get(MemorySegment seg) {
        return (int)constants$2442.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DEVICE_DSM_ACTION Action;
     * }
     */
    public static void Action$set(MemorySegment seg, int x) {
        constants$2442.const$1.set(seg, x);
    }
    public static int Action$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Action$set(MemorySegment seg, long index, int x) {
        constants$2442.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$2442.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$2442.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$2442.const$2.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$2442.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OperationStatus$VH() {
        return constants$2442.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OperationStatus;
     * }
     */
    public static int OperationStatus$get(MemorySegment seg) {
        return (int)constants$2442.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OperationStatus;
     * }
     */
    public static void OperationStatus$set(MemorySegment seg, int x) {
        constants$2442.const$3.set(seg, x);
    }
    public static int OperationStatus$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void OperationStatus$set(MemorySegment seg, long index, int x) {
        constants$2442.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ExtendedError$VH() {
        return constants$2442.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ExtendedError;
     * }
     */
    public static int ExtendedError$get(MemorySegment seg) {
        return (int)constants$2442.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ExtendedError;
     * }
     */
    public static void ExtendedError$set(MemorySegment seg, int x) {
        constants$2442.const$4.set(seg, x);
    }
    public static int ExtendedError$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ExtendedError$set(MemorySegment seg, long index, int x) {
        constants$2442.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TargetDetailedError$VH() {
        return constants$2442.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TargetDetailedError;
     * }
     */
    public static int TargetDetailedError$get(MemorySegment seg) {
        return (int)constants$2442.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TargetDetailedError;
     * }
     */
    public static void TargetDetailedError$set(MemorySegment seg, int x) {
        constants$2442.const$5.set(seg, x);
    }
    public static int TargetDetailedError$get(MemorySegment seg, long index) {
        return (int)constants$2442.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void TargetDetailedError$set(MemorySegment seg, long index, int x) {
        constants$2442.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ReservedStatus$VH() {
        return constants$2443.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ReservedStatus;
     * }
     */
    public static int ReservedStatus$get(MemorySegment seg) {
        return (int)constants$2443.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ReservedStatus;
     * }
     */
    public static void ReservedStatus$set(MemorySegment seg, int x) {
        constants$2443.const$0.set(seg, x);
    }
    public static int ReservedStatus$get(MemorySegment seg, long index) {
        return (int)constants$2443.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ReservedStatus$set(MemorySegment seg, long index, int x) {
        constants$2443.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OutputBlockOffset$VH() {
        return constants$2443.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OutputBlockOffset;
     * }
     */
    public static int OutputBlockOffset$get(MemorySegment seg) {
        return (int)constants$2443.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OutputBlockOffset;
     * }
     */
    public static void OutputBlockOffset$set(MemorySegment seg, int x) {
        constants$2443.const$1.set(seg, x);
    }
    public static int OutputBlockOffset$get(MemorySegment seg, long index) {
        return (int)constants$2443.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void OutputBlockOffset$set(MemorySegment seg, long index, int x) {
        constants$2443.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OutputBlockLength$VH() {
        return constants$2443.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OutputBlockLength;
     * }
     */
    public static int OutputBlockLength$get(MemorySegment seg) {
        return (int)constants$2443.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OutputBlockLength;
     * }
     */
    public static void OutputBlockLength$set(MemorySegment seg, int x) {
        constants$2443.const$2.set(seg, x);
    }
    public static int OutputBlockLength$get(MemorySegment seg, long index) {
        return (int)constants$2443.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void OutputBlockLength$set(MemorySegment seg, long index, int x) {
        constants$2443.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


