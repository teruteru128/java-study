// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagI_RpcProxyCallbackInterface {
 *     I_RpcProxyIsValidMachineFn IsValidMachineFn;
 *     I_RpcProxyGetClientAddressFn GetClientAddressFn;
 *     I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn;
 *     I_RpcPerformCalloutFn PerformCalloutFn;
 *     I_RpcFreeCalloutStateFn FreeCalloutStateFn;
 *     I_RpcProxyGetClientSessionAndResourceUUID GetClientSessionAndResourceUUIDFn;
 *     I_RpcProxyFilterIfFn ProxyFilterIfFn;
 *     I_RpcProxyUpdatePerfCounterFn RpcProxyUpdatePerfCounterFn;
 *     I_RpcProxyUpdatePerfCounterBackendServerFn RpcProxyUpdatePerfCounterBackendServerFn;
 * };
 * }
 */
public class tagI_RpcProxyCallbackInterface {

    public static MemoryLayout $LAYOUT() {
        return constants$1805.const$5;
    }
    public static VarHandle IsValidMachineFn$VH() {
        return constants$1806.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyIsValidMachineFn IsValidMachineFn;
     * }
     */
    public static MemorySegment IsValidMachineFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyIsValidMachineFn IsValidMachineFn;
     * }
     */
    public static void IsValidMachineFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$0.set(seg, x);
    }
    public static MemorySegment IsValidMachineFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void IsValidMachineFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyIsValidMachineFn IsValidMachineFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyIsValidMachineFn.ofAddress(IsValidMachineFn$get(segment), scope);
    }
    public static VarHandle GetClientAddressFn$VH() {
        return constants$1806.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyGetClientAddressFn GetClientAddressFn;
     * }
     */
    public static MemorySegment GetClientAddressFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyGetClientAddressFn GetClientAddressFn;
     * }
     */
    public static void GetClientAddressFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$1.set(seg, x);
    }
    public static MemorySegment GetClientAddressFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void GetClientAddressFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyGetClientAddressFn GetClientAddressFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyGetClientAddressFn.ofAddress(GetClientAddressFn$get(segment), scope);
    }
    public static VarHandle GetConnectionTimeoutFn$VH() {
        return constants$1806.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn;
     * }
     */
    public static MemorySegment GetConnectionTimeoutFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn;
     * }
     */
    public static void GetConnectionTimeoutFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$2.set(seg, x);
    }
    public static MemorySegment GetConnectionTimeoutFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void GetConnectionTimeoutFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyGetConnectionTimeoutFn.ofAddress(GetConnectionTimeoutFn$get(segment), scope);
    }
    public static VarHandle PerformCalloutFn$VH() {
        return constants$1806.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcPerformCalloutFn PerformCalloutFn;
     * }
     */
    public static MemorySegment PerformCalloutFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcPerformCalloutFn PerformCalloutFn;
     * }
     */
    public static void PerformCalloutFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$3.set(seg, x);
    }
    public static MemorySegment PerformCalloutFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void PerformCalloutFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcPerformCalloutFn PerformCalloutFn(MemorySegment segment, Arena scope) {
        return I_RpcPerformCalloutFn.ofAddress(PerformCalloutFn$get(segment), scope);
    }
    public static VarHandle FreeCalloutStateFn$VH() {
        return constants$1806.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcFreeCalloutStateFn FreeCalloutStateFn;
     * }
     */
    public static MemorySegment FreeCalloutStateFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcFreeCalloutStateFn FreeCalloutStateFn;
     * }
     */
    public static void FreeCalloutStateFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$4.set(seg, x);
    }
    public static MemorySegment FreeCalloutStateFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void FreeCalloutStateFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcFreeCalloutStateFn FreeCalloutStateFn(MemorySegment segment, Arena scope) {
        return I_RpcFreeCalloutStateFn.ofAddress(FreeCalloutStateFn$get(segment), scope);
    }
    public static VarHandle GetClientSessionAndResourceUUIDFn$VH() {
        return constants$1806.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyGetClientSessionAndResourceUUID GetClientSessionAndResourceUUIDFn;
     * }
     */
    public static MemorySegment GetClientSessionAndResourceUUIDFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyGetClientSessionAndResourceUUID GetClientSessionAndResourceUUIDFn;
     * }
     */
    public static void GetClientSessionAndResourceUUIDFn$set(MemorySegment seg, MemorySegment x) {
        constants$1806.const$5.set(seg, x);
    }
    public static MemorySegment GetClientSessionAndResourceUUIDFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1806.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void GetClientSessionAndResourceUUIDFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1806.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyGetClientSessionAndResourceUUID GetClientSessionAndResourceUUIDFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyGetClientSessionAndResourceUUID.ofAddress(GetClientSessionAndResourceUUIDFn$get(segment), scope);
    }
    public static VarHandle ProxyFilterIfFn$VH() {
        return constants$1807.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyFilterIfFn ProxyFilterIfFn;
     * }
     */
    public static MemorySegment ProxyFilterIfFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyFilterIfFn ProxyFilterIfFn;
     * }
     */
    public static void ProxyFilterIfFn$set(MemorySegment seg, MemorySegment x) {
        constants$1807.const$0.set(seg, x);
    }
    public static MemorySegment ProxyFilterIfFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ProxyFilterIfFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1807.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyFilterIfFn ProxyFilterIfFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyFilterIfFn.ofAddress(ProxyFilterIfFn$get(segment), scope);
    }
    public static VarHandle RpcProxyUpdatePerfCounterFn$VH() {
        return constants$1807.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyUpdatePerfCounterFn RpcProxyUpdatePerfCounterFn;
     * }
     */
    public static MemorySegment RpcProxyUpdatePerfCounterFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyUpdatePerfCounterFn RpcProxyUpdatePerfCounterFn;
     * }
     */
    public static void RpcProxyUpdatePerfCounterFn$set(MemorySegment seg, MemorySegment x) {
        constants$1807.const$1.set(seg, x);
    }
    public static MemorySegment RpcProxyUpdatePerfCounterFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcProxyUpdatePerfCounterFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1807.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyUpdatePerfCounterFn RpcProxyUpdatePerfCounterFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyUpdatePerfCounterFn.ofAddress(RpcProxyUpdatePerfCounterFn$get(segment), scope);
    }
    public static VarHandle RpcProxyUpdatePerfCounterBackendServerFn$VH() {
        return constants$1807.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * I_RpcProxyUpdatePerfCounterBackendServerFn RpcProxyUpdatePerfCounterBackendServerFn;
     * }
     */
    public static MemorySegment RpcProxyUpdatePerfCounterBackendServerFn$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * I_RpcProxyUpdatePerfCounterBackendServerFn RpcProxyUpdatePerfCounterBackendServerFn;
     * }
     */
    public static void RpcProxyUpdatePerfCounterBackendServerFn$set(MemorySegment seg, MemorySegment x) {
        constants$1807.const$2.set(seg, x);
    }
    public static MemorySegment RpcProxyUpdatePerfCounterBackendServerFn$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1807.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcProxyUpdatePerfCounterBackendServerFn$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1807.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static I_RpcProxyUpdatePerfCounterBackendServerFn RpcProxyUpdatePerfCounterBackendServerFn(MemorySegment segment, Arena scope) {
        return I_RpcProxyUpdatePerfCounterBackendServerFn.ofAddress(RpcProxyUpdatePerfCounterBackendServerFn$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


