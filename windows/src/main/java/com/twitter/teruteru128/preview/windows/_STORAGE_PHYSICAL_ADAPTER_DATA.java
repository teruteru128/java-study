// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_PHYSICAL_ADAPTER_DATA {
 *     DWORD AdapterId;
 *     STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
 *     STORAGE_PROTOCOL_TYPE CommandProtocol;
 *     STORAGE_SPEC_VERSION SpecVersion;
 *     BYTE Vendor[8];
 *     BYTE Model[40];
 *     BYTE FirmwareRevision[16];
 *     BYTE PhysicalLocation[32];
 *     BOOLEAN ExpanderConnected;
 *     BYTE Reserved0[3];
 *     DWORD Reserved1[3];
 * };
 * }
 */
public class _STORAGE_PHYSICAL_ADAPTER_DATA {

    public static MemoryLayout $LAYOUT() {
        return constants$2422.const$1;
    }
    public static VarHandle AdapterId$VH() {
        return constants$2422.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AdapterId;
     * }
     */
    public static int AdapterId$get(MemorySegment seg) {
        return (int)constants$2422.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AdapterId;
     * }
     */
    public static void AdapterId$set(MemorySegment seg, int x) {
        constants$2422.const$2.set(seg, x);
    }
    public static int AdapterId$get(MemorySegment seg, long index) {
        return (int)constants$2422.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterId$set(MemorySegment seg, long index, int x) {
        constants$2422.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle HealthStatus$VH() {
        return constants$2422.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
     * }
     */
    public static int HealthStatus$get(MemorySegment seg) {
        return (int)constants$2422.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_COMPONENT_HEALTH_STATUS HealthStatus;
     * }
     */
    public static void HealthStatus$set(MemorySegment seg, int x) {
        constants$2422.const$3.set(seg, x);
    }
    public static int HealthStatus$get(MemorySegment seg, long index) {
        return (int)constants$2422.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void HealthStatus$set(MemorySegment seg, long index, int x) {
        constants$2422.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CommandProtocol$VH() {
        return constants$2422.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_PROTOCOL_TYPE CommandProtocol;
     * }
     */
    public static int CommandProtocol$get(MemorySegment seg) {
        return (int)constants$2422.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_PROTOCOL_TYPE CommandProtocol;
     * }
     */
    public static void CommandProtocol$set(MemorySegment seg, int x) {
        constants$2422.const$4.set(seg, x);
    }
    public static int CommandProtocol$get(MemorySegment seg, long index) {
        return (int)constants$2422.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandProtocol$set(MemorySegment seg, long index, int x) {
        constants$2422.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment SpecVersion$slice(MemorySegment seg) {
        return seg.asSlice(12, 4);
    }
    public static MemorySegment Vendor$slice(MemorySegment seg) {
        return seg.asSlice(16, 8);
    }
    public static MemorySegment Model$slice(MemorySegment seg) {
        return seg.asSlice(24, 40);
    }
    public static MemorySegment FirmwareRevision$slice(MemorySegment seg) {
        return seg.asSlice(64, 16);
    }
    public static MemorySegment PhysicalLocation$slice(MemorySegment seg) {
        return seg.asSlice(80, 32);
    }
    public static VarHandle ExpanderConnected$VH() {
        return constants$2422.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN ExpanderConnected;
     * }
     */
    public static byte ExpanderConnected$get(MemorySegment seg) {
        return (byte)constants$2422.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN ExpanderConnected;
     * }
     */
    public static void ExpanderConnected$set(MemorySegment seg, byte x) {
        constants$2422.const$5.set(seg, x);
    }
    public static byte ExpanderConnected$get(MemorySegment seg, long index) {
        return (byte)constants$2422.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ExpanderConnected$set(MemorySegment seg, long index, byte x) {
        constants$2422.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Reserved0$slice(MemorySegment seg) {
        return seg.asSlice(113, 3);
    }
    public static MemorySegment Reserved1$slice(MemorySegment seg) {
        return seg.asSlice(116, 12);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


