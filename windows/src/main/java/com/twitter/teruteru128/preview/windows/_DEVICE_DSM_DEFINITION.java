// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DEVICE_DSM_DEFINITION {
 *     DEVICE_DSM_ACTION Action;
 *     BOOLEAN SingleRange;
 *     DWORD ParameterBlockAlignment;
 *     DWORD ParameterBlockLength;
 *     BOOLEAN HasOutput;
 *     DWORD OutputBlockAlignment;
 *     DWORD OutputBlockLength;
 * };
 * }
 */
public class _DEVICE_DSM_DEFINITION {

    public static MemoryLayout $LAYOUT() {
        return constants$2443.const$3;
    }
    public static VarHandle Action$VH() {
        return constants$2443.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DEVICE_DSM_ACTION Action;
     * }
     */
    public static int Action$get(MemorySegment seg) {
        return (int)constants$2443.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DEVICE_DSM_ACTION Action;
     * }
     */
    public static void Action$set(MemorySegment seg, int x) {
        constants$2443.const$4.set(seg, x);
    }
    public static int Action$get(MemorySegment seg, long index) {
        return (int)constants$2443.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Action$set(MemorySegment seg, long index, int x) {
        constants$2443.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SingleRange$VH() {
        return constants$2443.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN SingleRange;
     * }
     */
    public static byte SingleRange$get(MemorySegment seg) {
        return (byte)constants$2443.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN SingleRange;
     * }
     */
    public static void SingleRange$set(MemorySegment seg, byte x) {
        constants$2443.const$5.set(seg, x);
    }
    public static byte SingleRange$get(MemorySegment seg, long index) {
        return (byte)constants$2443.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void SingleRange$set(MemorySegment seg, long index, byte x) {
        constants$2443.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ParameterBlockAlignment$VH() {
        return constants$2444.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ParameterBlockAlignment;
     * }
     */
    public static int ParameterBlockAlignment$get(MemorySegment seg) {
        return (int)constants$2444.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ParameterBlockAlignment;
     * }
     */
    public static void ParameterBlockAlignment$set(MemorySegment seg, int x) {
        constants$2444.const$0.set(seg, x);
    }
    public static int ParameterBlockAlignment$get(MemorySegment seg, long index) {
        return (int)constants$2444.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ParameterBlockAlignment$set(MemorySegment seg, long index, int x) {
        constants$2444.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ParameterBlockLength$VH() {
        return constants$2444.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ParameterBlockLength;
     * }
     */
    public static int ParameterBlockLength$get(MemorySegment seg) {
        return (int)constants$2444.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ParameterBlockLength;
     * }
     */
    public static void ParameterBlockLength$set(MemorySegment seg, int x) {
        constants$2444.const$1.set(seg, x);
    }
    public static int ParameterBlockLength$get(MemorySegment seg, long index) {
        return (int)constants$2444.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ParameterBlockLength$set(MemorySegment seg, long index, int x) {
        constants$2444.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle HasOutput$VH() {
        return constants$2444.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN HasOutput;
     * }
     */
    public static byte HasOutput$get(MemorySegment seg) {
        return (byte)constants$2444.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN HasOutput;
     * }
     */
    public static void HasOutput$set(MemorySegment seg, byte x) {
        constants$2444.const$2.set(seg, x);
    }
    public static byte HasOutput$get(MemorySegment seg, long index) {
        return (byte)constants$2444.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void HasOutput$set(MemorySegment seg, long index, byte x) {
        constants$2444.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OutputBlockAlignment$VH() {
        return constants$2444.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OutputBlockAlignment;
     * }
     */
    public static int OutputBlockAlignment$get(MemorySegment seg) {
        return (int)constants$2444.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OutputBlockAlignment;
     * }
     */
    public static void OutputBlockAlignment$set(MemorySegment seg, int x) {
        constants$2444.const$3.set(seg, x);
    }
    public static int OutputBlockAlignment$get(MemorySegment seg, long index) {
        return (int)constants$2444.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void OutputBlockAlignment$set(MemorySegment seg, long index, int x) {
        constants$2444.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OutputBlockLength$VH() {
        return constants$2444.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OutputBlockLength;
     * }
     */
    public static int OutputBlockLength$get(MemorySegment seg) {
        return (int)constants$2444.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OutputBlockLength;
     * }
     */
    public static void OutputBlockLength$set(MemorySegment seg, int x) {
        constants$2444.const$4.set(seg, x);
    }
    public static int OutputBlockLength$get(MemorySegment seg, long index) {
        return (int)constants$2444.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void OutputBlockLength$set(MemorySegment seg, long index, int x) {
        constants$2444.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


