// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagWNDCLASSW {
 *     UINT style;
 *     WNDPROC lpfnWndProc;
 *     int cbClsExtra;
 *     int cbWndExtra;
 *     HINSTANCE hInstance;
 *     HICON hIcon;
 *     HCURSOR hCursor;
 *     HBRUSH hbrBackground;
 *     LPCWSTR lpszMenuName;
 *     LPCWSTR lpszClassName;
 * };
 * }
 */
public class tagWNDCLASSW {

    public static MemoryLayout $LAYOUT() {
        return constants$1163.const$0;
    }
    public static VarHandle style$VH() {
        return constants$1163.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT style;
     * }
     */
    public static int style$get(MemorySegment seg) {
        return (int)constants$1163.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT style;
     * }
     */
    public static void style$set(MemorySegment seg, int x) {
        constants$1163.const$1.set(seg, x);
    }
    public static int style$get(MemorySegment seg, long index) {
        return (int)constants$1163.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void style$set(MemorySegment seg, long index, int x) {
        constants$1163.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpfnWndProc$VH() {
        return constants$1163.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WNDPROC lpfnWndProc;
     * }
     */
    public static MemorySegment lpfnWndProc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1163.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WNDPROC lpfnWndProc;
     * }
     */
    public static void lpfnWndProc$set(MemorySegment seg, MemorySegment x) {
        constants$1163.const$2.set(seg, x);
    }
    public static MemorySegment lpfnWndProc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1163.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnWndProc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1163.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static WNDPROC lpfnWndProc(MemorySegment segment, Arena scope) {
        return WNDPROC.ofAddress(lpfnWndProc$get(segment), scope);
    }
    public static VarHandle cbClsExtra$VH() {
        return constants$1163.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int cbClsExtra;
     * }
     */
    public static int cbClsExtra$get(MemorySegment seg) {
        return (int)constants$1163.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int cbClsExtra;
     * }
     */
    public static void cbClsExtra$set(MemorySegment seg, int x) {
        constants$1163.const$3.set(seg, x);
    }
    public static int cbClsExtra$get(MemorySegment seg, long index) {
        return (int)constants$1163.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cbClsExtra$set(MemorySegment seg, long index, int x) {
        constants$1163.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbWndExtra$VH() {
        return constants$1163.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int cbWndExtra;
     * }
     */
    public static int cbWndExtra$get(MemorySegment seg) {
        return (int)constants$1163.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int cbWndExtra;
     * }
     */
    public static void cbWndExtra$set(MemorySegment seg, int x) {
        constants$1163.const$4.set(seg, x);
    }
    public static int cbWndExtra$get(MemorySegment seg, long index) {
        return (int)constants$1163.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cbWndExtra$set(MemorySegment seg, long index, int x) {
        constants$1163.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hInstance$VH() {
        return constants$1163.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static MemorySegment hInstance$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1163.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static void hInstance$set(MemorySegment seg, MemorySegment x) {
        constants$1163.const$5.set(seg, x);
    }
    public static MemorySegment hInstance$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1163.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hInstance$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1163.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hIcon$VH() {
        return constants$1164.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static MemorySegment hIcon$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static void hIcon$set(MemorySegment seg, MemorySegment x) {
        constants$1164.const$0.set(seg, x);
    }
    public static MemorySegment hIcon$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hIcon$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1164.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hCursor$VH() {
        return constants$1164.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCURSOR hCursor;
     * }
     */
    public static MemorySegment hCursor$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCURSOR hCursor;
     * }
     */
    public static void hCursor$set(MemorySegment seg, MemorySegment x) {
        constants$1164.const$1.set(seg, x);
    }
    public static MemorySegment hCursor$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hCursor$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1164.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hbrBackground$VH() {
        return constants$1164.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HBRUSH hbrBackground;
     * }
     */
    public static MemorySegment hbrBackground$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HBRUSH hbrBackground;
     * }
     */
    public static void hbrBackground$set(MemorySegment seg, MemorySegment x) {
        constants$1164.const$2.set(seg, x);
    }
    public static MemorySegment hbrBackground$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void hbrBackground$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1164.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszMenuName$VH() {
        return constants$1164.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpszMenuName;
     * }
     */
    public static MemorySegment lpszMenuName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpszMenuName;
     * }
     */
    public static void lpszMenuName$set(MemorySegment seg, MemorySegment x) {
        constants$1164.const$3.set(seg, x);
    }
    public static MemorySegment lpszMenuName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszMenuName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1164.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszClassName$VH() {
        return constants$1164.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpszClassName;
     * }
     */
    public static MemorySegment lpszClassName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpszClassName;
     * }
     */
    public static void lpszClassName$set(MemorySegment seg, MemorySegment x) {
        constants$1164.const$4.set(seg, x);
    }
    public static MemorySegment lpszClassName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1164.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszClassName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1164.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


