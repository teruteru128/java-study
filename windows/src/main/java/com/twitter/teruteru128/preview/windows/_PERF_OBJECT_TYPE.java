// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _PERF_OBJECT_TYPE {
 *     DWORD TotalByteLength;
 *     DWORD DefinitionLength;
 *     DWORD HeaderLength;
 *     DWORD ObjectNameTitleIndex;
 *     DWORD ObjectNameTitle;
 *     DWORD ObjectHelpTitleIndex;
 *     DWORD ObjectHelpTitle;
 *     DWORD DetailLevel;
 *     DWORD NumCounters;
 *     LONG DefaultCounter;
 *     LONG NumInstances;
 *     DWORD CodePage;
 *     LARGE_INTEGER PerfTime;
 *     LARGE_INTEGER PerfFreq;
 * };
 * }
 */
public class _PERF_OBJECT_TYPE {

    public static MemoryLayout $LAYOUT() {
        return constants$1890.const$5;
    }
    public static VarHandle TotalByteLength$VH() {
        return constants$1891.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TotalByteLength;
     * }
     */
    public static int TotalByteLength$get(MemorySegment seg) {
        return (int)constants$1891.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TotalByteLength;
     * }
     */
    public static void TotalByteLength$set(MemorySegment seg, int x) {
        constants$1891.const$0.set(seg, x);
    }
    public static int TotalByteLength$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void TotalByteLength$set(MemorySegment seg, long index, int x) {
        constants$1891.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DefinitionLength$VH() {
        return constants$1891.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DefinitionLength;
     * }
     */
    public static int DefinitionLength$get(MemorySegment seg) {
        return (int)constants$1891.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DefinitionLength;
     * }
     */
    public static void DefinitionLength$set(MemorySegment seg, int x) {
        constants$1891.const$1.set(seg, x);
    }
    public static int DefinitionLength$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void DefinitionLength$set(MemorySegment seg, long index, int x) {
        constants$1891.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle HeaderLength$VH() {
        return constants$1891.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD HeaderLength;
     * }
     */
    public static int HeaderLength$get(MemorySegment seg) {
        return (int)constants$1891.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD HeaderLength;
     * }
     */
    public static void HeaderLength$set(MemorySegment seg, int x) {
        constants$1891.const$2.set(seg, x);
    }
    public static int HeaderLength$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void HeaderLength$set(MemorySegment seg, long index, int x) {
        constants$1891.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ObjectNameTitleIndex$VH() {
        return constants$1891.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ObjectNameTitleIndex;
     * }
     */
    public static int ObjectNameTitleIndex$get(MemorySegment seg) {
        return (int)constants$1891.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ObjectNameTitleIndex;
     * }
     */
    public static void ObjectNameTitleIndex$set(MemorySegment seg, int x) {
        constants$1891.const$3.set(seg, x);
    }
    public static int ObjectNameTitleIndex$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ObjectNameTitleIndex$set(MemorySegment seg, long index, int x) {
        constants$1891.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ObjectNameTitle$VH() {
        return constants$1891.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ObjectNameTitle;
     * }
     */
    public static int ObjectNameTitle$get(MemorySegment seg) {
        return (int)constants$1891.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ObjectNameTitle;
     * }
     */
    public static void ObjectNameTitle$set(MemorySegment seg, int x) {
        constants$1891.const$4.set(seg, x);
    }
    public static int ObjectNameTitle$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ObjectNameTitle$set(MemorySegment seg, long index, int x) {
        constants$1891.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ObjectHelpTitleIndex$VH() {
        return constants$1891.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ObjectHelpTitleIndex;
     * }
     */
    public static int ObjectHelpTitleIndex$get(MemorySegment seg) {
        return (int)constants$1891.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ObjectHelpTitleIndex;
     * }
     */
    public static void ObjectHelpTitleIndex$set(MemorySegment seg, int x) {
        constants$1891.const$5.set(seg, x);
    }
    public static int ObjectHelpTitleIndex$get(MemorySegment seg, long index) {
        return (int)constants$1891.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ObjectHelpTitleIndex$set(MemorySegment seg, long index, int x) {
        constants$1891.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ObjectHelpTitle$VH() {
        return constants$1892.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ObjectHelpTitle;
     * }
     */
    public static int ObjectHelpTitle$get(MemorySegment seg) {
        return (int)constants$1892.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ObjectHelpTitle;
     * }
     */
    public static void ObjectHelpTitle$set(MemorySegment seg, int x) {
        constants$1892.const$0.set(seg, x);
    }
    public static int ObjectHelpTitle$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ObjectHelpTitle$set(MemorySegment seg, long index, int x) {
        constants$1892.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DetailLevel$VH() {
        return constants$1892.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DetailLevel;
     * }
     */
    public static int DetailLevel$get(MemorySegment seg) {
        return (int)constants$1892.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DetailLevel;
     * }
     */
    public static void DetailLevel$set(MemorySegment seg, int x) {
        constants$1892.const$1.set(seg, x);
    }
    public static int DetailLevel$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void DetailLevel$set(MemorySegment seg, long index, int x) {
        constants$1892.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumCounters$VH() {
        return constants$1892.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD NumCounters;
     * }
     */
    public static int NumCounters$get(MemorySegment seg) {
        return (int)constants$1892.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD NumCounters;
     * }
     */
    public static void NumCounters$set(MemorySegment seg, int x) {
        constants$1892.const$2.set(seg, x);
    }
    public static int NumCounters$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void NumCounters$set(MemorySegment seg, long index, int x) {
        constants$1892.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DefaultCounter$VH() {
        return constants$1892.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG DefaultCounter;
     * }
     */
    public static int DefaultCounter$get(MemorySegment seg) {
        return (int)constants$1892.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG DefaultCounter;
     * }
     */
    public static void DefaultCounter$set(MemorySegment seg, int x) {
        constants$1892.const$3.set(seg, x);
    }
    public static int DefaultCounter$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void DefaultCounter$set(MemorySegment seg, long index, int x) {
        constants$1892.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumInstances$VH() {
        return constants$1892.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG NumInstances;
     * }
     */
    public static int NumInstances$get(MemorySegment seg) {
        return (int)constants$1892.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG NumInstances;
     * }
     */
    public static void NumInstances$set(MemorySegment seg, int x) {
        constants$1892.const$4.set(seg, x);
    }
    public static int NumInstances$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void NumInstances$set(MemorySegment seg, long index, int x) {
        constants$1892.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CodePage$VH() {
        return constants$1892.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD CodePage;
     * }
     */
    public static int CodePage$get(MemorySegment seg) {
        return (int)constants$1892.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD CodePage;
     * }
     */
    public static void CodePage$set(MemorySegment seg, int x) {
        constants$1892.const$5.set(seg, x);
    }
    public static int CodePage$get(MemorySegment seg, long index) {
        return (int)constants$1892.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void CodePage$set(MemorySegment seg, long index, int x) {
        constants$1892.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment PerfTime$slice(MemorySegment seg) {
        return seg.asSlice(48, 8);
    }
    public static MemorySegment PerfFreq$slice(MemorySegment seg) {
        return seg.asSlice(56, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


