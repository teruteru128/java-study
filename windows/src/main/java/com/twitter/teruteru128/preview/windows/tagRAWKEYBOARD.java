// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagRAWKEYBOARD {
 *     USHORT MakeCode;
 *     USHORT Flags;
 *     USHORT Reserved;
 *     USHORT VKey;
 *     UINT Message;
 *     ULONG ExtraInformation;
 * };
 * }
 */
public class tagRAWKEYBOARD {

    public static MemoryLayout $LAYOUT() {
        return constants$1387.const$3;
    }
    public static VarHandle MakeCode$VH() {
        return constants$1387.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT MakeCode;
     * }
     */
    public static short MakeCode$get(MemorySegment seg) {
        return (short)constants$1387.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT MakeCode;
     * }
     */
    public static void MakeCode$set(MemorySegment seg, short x) {
        constants$1387.const$4.set(seg, x);
    }
    public static short MakeCode$get(MemorySegment seg, long index) {
        return (short)constants$1387.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MakeCode$set(MemorySegment seg, long index, short x) {
        constants$1387.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$1387.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT Flags;
     * }
     */
    public static short Flags$get(MemorySegment seg) {
        return (short)constants$1387.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, short x) {
        constants$1387.const$5.set(seg, x);
    }
    public static short Flags$get(MemorySegment seg, long index) {
        return (short)constants$1387.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, short x) {
        constants$1387.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved$VH() {
        return constants$1388.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT Reserved;
     * }
     */
    public static short Reserved$get(MemorySegment seg) {
        return (short)constants$1388.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, short x) {
        constants$1388.const$0.set(seg, x);
    }
    public static short Reserved$get(MemorySegment seg, long index) {
        return (short)constants$1388.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, short x) {
        constants$1388.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VKey$VH() {
        return constants$1388.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT VKey;
     * }
     */
    public static short VKey$get(MemorySegment seg) {
        return (short)constants$1388.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT VKey;
     * }
     */
    public static void VKey$set(MemorySegment seg, short x) {
        constants$1388.const$1.set(seg, x);
    }
    public static short VKey$get(MemorySegment seg, long index) {
        return (short)constants$1388.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void VKey$set(MemorySegment seg, long index, short x) {
        constants$1388.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Message$VH() {
        return constants$1388.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT Message;
     * }
     */
    public static int Message$get(MemorySegment seg) {
        return (int)constants$1388.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT Message;
     * }
     */
    public static void Message$set(MemorySegment seg, int x) {
        constants$1388.const$2.set(seg, x);
    }
    public static int Message$get(MemorySegment seg, long index) {
        return (int)constants$1388.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Message$set(MemorySegment seg, long index, int x) {
        constants$1388.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ExtraInformation$VH() {
        return constants$1388.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ExtraInformation;
     * }
     */
    public static int ExtraInformation$get(MemorySegment seg) {
        return (int)constants$1388.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ExtraInformation;
     * }
     */
    public static void ExtraInformation$set(MemorySegment seg, int x) {
        constants$1388.const$3.set(seg, x);
    }
    public static int ExtraInformation$get(MemorySegment seg, long index) {
        return (int)constants$1388.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ExtraInformation$set(MemorySegment seg, long index, int x) {
        constants$1388.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


