// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _RPC_CLIENT_INTERFACE {
 *     unsigned int Length;
 *     RPC_SYNTAX_IDENTIFIER InterfaceId;
 *     RPC_SYNTAX_IDENTIFIER TransferSyntax;
 *     PRPC_DISPATCH_TABLE DispatchTable;
 *     unsigned int RpcProtseqEndpointCount;
 *     PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
 *     ULONG_PTR Reserved;
 *     void* InterpreterInfo;
 *     unsigned int Flags;
 * };
 * }
 */
public class _RPC_CLIENT_INTERFACE {

    public static MemoryLayout $LAYOUT() {
        return constants$1784.const$5;
    }
    public static VarHandle Length$VH() {
        return constants$1785.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int Length;
     * }
     */
    public static int Length$get(MemorySegment seg) {
        return (int)constants$1785.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int Length;
     * }
     */
    public static void Length$set(MemorySegment seg, int x) {
        constants$1785.const$0.set(seg, x);
    }
    public static int Length$get(MemorySegment seg, long index) {
        return (int)constants$1785.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Length$set(MemorySegment seg, long index, int x) {
        constants$1785.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment InterfaceId$slice(MemorySegment seg) {
        return seg.asSlice(4, 20);
    }
    public static MemorySegment TransferSyntax$slice(MemorySegment seg) {
        return seg.asSlice(24, 20);
    }
    public static VarHandle DispatchTable$VH() {
        return constants$1785.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PRPC_DISPATCH_TABLE DispatchTable;
     * }
     */
    public static MemorySegment DispatchTable$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PRPC_DISPATCH_TABLE DispatchTable;
     * }
     */
    public static void DispatchTable$set(MemorySegment seg, MemorySegment x) {
        constants$1785.const$1.set(seg, x);
    }
    public static MemorySegment DispatchTable$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void DispatchTable$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1785.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RpcProtseqEndpointCount$VH() {
        return constants$1785.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int RpcProtseqEndpointCount;
     * }
     */
    public static int RpcProtseqEndpointCount$get(MemorySegment seg) {
        return (int)constants$1785.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int RpcProtseqEndpointCount;
     * }
     */
    public static void RpcProtseqEndpointCount$set(MemorySegment seg, int x) {
        constants$1785.const$2.set(seg, x);
    }
    public static int RpcProtseqEndpointCount$get(MemorySegment seg, long index) {
        return (int)constants$1785.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcProtseqEndpointCount$set(MemorySegment seg, long index, int x) {
        constants$1785.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RpcProtseqEndpoint$VH() {
        return constants$1785.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
     * }
     */
    public static MemorySegment RpcProtseqEndpoint$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
     * }
     */
    public static void RpcProtseqEndpoint$set(MemorySegment seg, MemorySegment x) {
        constants$1785.const$3.set(seg, x);
    }
    public static MemorySegment RpcProtseqEndpoint$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcProtseqEndpoint$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1785.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved$VH() {
        return constants$1785.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR Reserved;
     * }
     */
    public static long Reserved$get(MemorySegment seg) {
        return (long)constants$1785.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, long x) {
        constants$1785.const$4.set(seg, x);
    }
    public static long Reserved$get(MemorySegment seg, long index) {
        return (long)constants$1785.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, long x) {
        constants$1785.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle InterpreterInfo$VH() {
        return constants$1785.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* InterpreterInfo;
     * }
     */
    public static MemorySegment InterpreterInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* InterpreterInfo;
     * }
     */
    public static void InterpreterInfo$set(MemorySegment seg, MemorySegment x) {
        constants$1785.const$5.set(seg, x);
    }
    public static MemorySegment InterpreterInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1785.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void InterpreterInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1785.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$1786.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$1786.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$1786.const$0.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$1786.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$1786.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


