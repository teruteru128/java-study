// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_SIMPLE_CHAIN {
 *     DWORD cbSize;
 *     CERT_TRUST_STATUS TrustStatus;
 *     DWORD cElement;
 *     PCERT_CHAIN_ELEMENT* rgpElement;
 *     PCERT_TRUST_LIST_INFO pTrustListInfo;
 *     BOOL fHasRevocationFreshnessTime;
 *     DWORD dwRevocationFreshnessTime;
 * };
 * }
 */
public class _CERT_SIMPLE_CHAIN {

    public static MemoryLayout $LAYOUT() {
        return constants$2211.const$0;
    }
    public static VarHandle cbSize$VH() {
        return constants$2211.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$2211.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$2211.const$1.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$2211.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$2211.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment TrustStatus$slice(MemorySegment seg) {
        return seg.asSlice(4, 8);
    }
    public static VarHandle cElement$VH() {
        return constants$2211.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cElement;
     * }
     */
    public static int cElement$get(MemorySegment seg) {
        return (int)constants$2211.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cElement;
     * }
     */
    public static void cElement$set(MemorySegment seg, int x) {
        constants$2211.const$2.set(seg, x);
    }
    public static int cElement$get(MemorySegment seg, long index) {
        return (int)constants$2211.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cElement$set(MemorySegment seg, long index, int x) {
        constants$2211.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgpElement$VH() {
        return constants$2211.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_CHAIN_ELEMENT* rgpElement;
     * }
     */
    public static MemorySegment rgpElement$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2211.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_CHAIN_ELEMENT* rgpElement;
     * }
     */
    public static void rgpElement$set(MemorySegment seg, MemorySegment x) {
        constants$2211.const$3.set(seg, x);
    }
    public static MemorySegment rgpElement$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2211.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpElement$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2211.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pTrustListInfo$VH() {
        return constants$2211.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_TRUST_LIST_INFO pTrustListInfo;
     * }
     */
    public static MemorySegment pTrustListInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2211.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_TRUST_LIST_INFO pTrustListInfo;
     * }
     */
    public static void pTrustListInfo$set(MemorySegment seg, MemorySegment x) {
        constants$2211.const$4.set(seg, x);
    }
    public static MemorySegment pTrustListInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2211.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pTrustListInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2211.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fHasRevocationFreshnessTime$VH() {
        return constants$2211.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOL fHasRevocationFreshnessTime;
     * }
     */
    public static int fHasRevocationFreshnessTime$get(MemorySegment seg) {
        return (int)constants$2211.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOL fHasRevocationFreshnessTime;
     * }
     */
    public static void fHasRevocationFreshnessTime$set(MemorySegment seg, int x) {
        constants$2211.const$5.set(seg, x);
    }
    public static int fHasRevocationFreshnessTime$get(MemorySegment seg, long index) {
        return (int)constants$2211.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void fHasRevocationFreshnessTime$set(MemorySegment seg, long index, int x) {
        constants$2211.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwRevocationFreshnessTime$VH() {
        return constants$2212.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwRevocationFreshnessTime;
     * }
     */
    public static int dwRevocationFreshnessTime$get(MemorySegment seg) {
        return (int)constants$2212.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwRevocationFreshnessTime;
     * }
     */
    public static void dwRevocationFreshnessTime$set(MemorySegment seg, int x) {
        constants$2212.const$0.set(seg, x);
    }
    public static int dwRevocationFreshnessTime$get(MemorySegment seg, long index) {
        return (int)constants$2212.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwRevocationFreshnessTime$set(MemorySegment seg, long index, int x) {
        constants$2212.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


