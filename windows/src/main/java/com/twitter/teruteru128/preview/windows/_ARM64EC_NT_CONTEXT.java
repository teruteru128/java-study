// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _ARM64EC_NT_CONTEXT {
 *     union {
 *         struct {
 *             DWORD64 AMD64_P1Home;
 *             DWORD64 AMD64_P2Home;
 *             DWORD64 AMD64_P3Home;
 *             DWORD64 AMD64_P4Home;
 *             DWORD64 AMD64_P5Home;
 *             DWORD64 AMD64_P6Home;
 *             DWORD ContextFlags;
 *             DWORD AMD64_MxCsr_copy;
 *             WORD AMD64_SegCs;
 *             WORD AMD64_SegDs;
 *             WORD AMD64_SegEs;
 *             WORD AMD64_SegFs;
 *             WORD AMD64_SegGs;
 *             WORD AMD64_SegSs;
 *             DWORD AMD64_EFlags;
 *             DWORD64 AMD64_Dr0;
 *             DWORD64 AMD64_Dr1;
 *             DWORD64 AMD64_Dr2;
 *             DWORD64 AMD64_Dr3;
 *             DWORD64 AMD64_Dr6;
 *             DWORD64 AMD64_Dr7;
 *             DWORD64 X8;
 *             DWORD64 X0;
 *             DWORD64 X1;
 *             DWORD64 X27;
 *             DWORD64 Sp;
 *             DWORD64 Fp;
 *             DWORD64 X25;
 *             DWORD64 X26;
 *             DWORD64 X2;
 *             DWORD64 X3;
 *             DWORD64 X4;
 *             DWORD64 X5;
 *             DWORD64 X19;
 *             DWORD64 X20;
 *             DWORD64 X21;
 *             DWORD64 X22;
 *             DWORD64 Pc;
 *             struct {
 *                 WORD AMD64_ControlWord;
 *                 WORD AMD64_StatusWord;
 *                 BYTE AMD64_TagWord;
 *                 BYTE AMD64_Reserved1;
 *                 WORD AMD64_ErrorOpcode;
 *                 DWORD AMD64_ErrorOffset;
 *                 WORD AMD64_ErrorSelector;
 *                 WORD AMD64_Reserved2;
 *                 DWORD AMD64_DataOffset;
 *                 WORD AMD64_DataSelector;
 *                 WORD AMD64_Reserved3;
 *                 DWORD AMD64_MxCsr;
 *                 DWORD AMD64_MxCsr_Mask;
 *                 DWORD64 Lr;
 *                 WORD X16_0;
 *                 WORD AMD64_St0_Reserved1;
 *                 DWORD AMD64_St0_Reserved2;
 *                 DWORD64 X6;
 *                 WORD X16_1;
 *                 WORD AMD64_St1_Reserved1;
 *                 DWORD AMD64_St1_Reserved2;
 *                 DWORD64 X7;
 *                 WORD X16_2;
 *                 WORD AMD64_St2_Reserved1;
 *                 DWORD AMD64_St2_Reserved2;
 *                 DWORD64 X9;
 *                 WORD X16_3;
 *                 WORD AMD64_St3_Reserved1;
 *                 DWORD AMD64_St3_Reserved2;
 *                 DWORD64 X10;
 *                 WORD X17_0;
 *                 WORD AMD64_St4_Reserved1;
 *                 DWORD AMD64_St4_Reserved2;
 *                 DWORD64 X11;
 *                 WORD X17_1;
 *                 WORD AMD64_St5_Reserved1;
 *                 DWORD AMD64_St5_Reserved2;
 *                 DWORD64 X12;
 *                 WORD X17_2;
 *                 WORD AMD64_St6_Reserved1;
 *                 DWORD AMD64_St6_Reserved2;
 *                 DWORD64 X15;
 *                 WORD X17_3;
 *                 WORD AMD64_St7_Reserved1;
 *                 DWORD AMD64_St7_Reserved2;
 *                 ARM64_NT_NEON128 V[16];
 *                 BYTE AMD64_XSAVE_FORMAT_Reserved4[96];
 *             };
 *             ARM64_NT_NEON128 AMD64_VectorRegister[26];
 *             DWORD64 AMD64_VectorControl;
 *             DWORD64 AMD64_DebugControl;
 *             DWORD64 AMD64_LastBranchToRip;
 *             DWORD64 AMD64_LastBranchFromRip;
 *             DWORD64 AMD64_LastExceptionToRip;
 *             DWORD64 AMD64_LastExceptionFromRip;
 *         };
 *     };
 * };
 * }
 */
public class _ARM64EC_NT_CONTEXT {

    public static MemoryLayout $LAYOUT() {
        return constants$106.const$0;
    }
    public static VarHandle AMD64_P1Home$VH() {
        return constants$106.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P1Home;
     * }
     */
    public static long AMD64_P1Home$get(MemorySegment seg) {
        return (long)constants$106.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P1Home;
     * }
     */
    public static void AMD64_P1Home$set(MemorySegment seg, long x) {
        constants$106.const$1.set(seg, x);
    }
    public static long AMD64_P1Home$get(MemorySegment seg, long index) {
        return (long)constants$106.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P1Home$set(MemorySegment seg, long index, long x) {
        constants$106.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_P2Home$VH() {
        return constants$106.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P2Home;
     * }
     */
    public static long AMD64_P2Home$get(MemorySegment seg) {
        return (long)constants$106.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P2Home;
     * }
     */
    public static void AMD64_P2Home$set(MemorySegment seg, long x) {
        constants$106.const$2.set(seg, x);
    }
    public static long AMD64_P2Home$get(MemorySegment seg, long index) {
        return (long)constants$106.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P2Home$set(MemorySegment seg, long index, long x) {
        constants$106.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_P3Home$VH() {
        return constants$106.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P3Home;
     * }
     */
    public static long AMD64_P3Home$get(MemorySegment seg) {
        return (long)constants$106.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P3Home;
     * }
     */
    public static void AMD64_P3Home$set(MemorySegment seg, long x) {
        constants$106.const$3.set(seg, x);
    }
    public static long AMD64_P3Home$get(MemorySegment seg, long index) {
        return (long)constants$106.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P3Home$set(MemorySegment seg, long index, long x) {
        constants$106.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_P4Home$VH() {
        return constants$106.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P4Home;
     * }
     */
    public static long AMD64_P4Home$get(MemorySegment seg) {
        return (long)constants$106.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P4Home;
     * }
     */
    public static void AMD64_P4Home$set(MemorySegment seg, long x) {
        constants$106.const$4.set(seg, x);
    }
    public static long AMD64_P4Home$get(MemorySegment seg, long index) {
        return (long)constants$106.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P4Home$set(MemorySegment seg, long index, long x) {
        constants$106.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_P5Home$VH() {
        return constants$106.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P5Home;
     * }
     */
    public static long AMD64_P5Home$get(MemorySegment seg) {
        return (long)constants$106.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P5Home;
     * }
     */
    public static void AMD64_P5Home$set(MemorySegment seg, long x) {
        constants$106.const$5.set(seg, x);
    }
    public static long AMD64_P5Home$get(MemorySegment seg, long index) {
        return (long)constants$106.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P5Home$set(MemorySegment seg, long index, long x) {
        constants$106.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_P6Home$VH() {
        return constants$107.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_P6Home;
     * }
     */
    public static long AMD64_P6Home$get(MemorySegment seg) {
        return (long)constants$107.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_P6Home;
     * }
     */
    public static void AMD64_P6Home$set(MemorySegment seg, long x) {
        constants$107.const$0.set(seg, x);
    }
    public static long AMD64_P6Home$get(MemorySegment seg, long index) {
        return (long)constants$107.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_P6Home$set(MemorySegment seg, long index, long x) {
        constants$107.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ContextFlags$VH() {
        return constants$107.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ContextFlags;
     * }
     */
    public static int ContextFlags$get(MemorySegment seg) {
        return (int)constants$107.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ContextFlags;
     * }
     */
    public static void ContextFlags$set(MemorySegment seg, int x) {
        constants$107.const$1.set(seg, x);
    }
    public static int ContextFlags$get(MemorySegment seg, long index) {
        return (int)constants$107.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ContextFlags$set(MemorySegment seg, long index, int x) {
        constants$107.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_MxCsr_copy$VH() {
        return constants$107.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr_copy;
     * }
     */
    public static int AMD64_MxCsr_copy$get(MemorySegment seg) {
        return (int)constants$107.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr_copy;
     * }
     */
    public static void AMD64_MxCsr_copy$set(MemorySegment seg, int x) {
        constants$107.const$2.set(seg, x);
    }
    public static int AMD64_MxCsr_copy$get(MemorySegment seg, long index) {
        return (int)constants$107.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr_copy$set(MemorySegment seg, long index, int x) {
        constants$107.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegCs$VH() {
        return constants$107.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegCs;
     * }
     */
    public static short AMD64_SegCs$get(MemorySegment seg) {
        return (short)constants$107.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegCs;
     * }
     */
    public static void AMD64_SegCs$set(MemorySegment seg, short x) {
        constants$107.const$3.set(seg, x);
    }
    public static short AMD64_SegCs$get(MemorySegment seg, long index) {
        return (short)constants$107.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegCs$set(MemorySegment seg, long index, short x) {
        constants$107.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegDs$VH() {
        return constants$107.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegDs;
     * }
     */
    public static short AMD64_SegDs$get(MemorySegment seg) {
        return (short)constants$107.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegDs;
     * }
     */
    public static void AMD64_SegDs$set(MemorySegment seg, short x) {
        constants$107.const$4.set(seg, x);
    }
    public static short AMD64_SegDs$get(MemorySegment seg, long index) {
        return (short)constants$107.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegDs$set(MemorySegment seg, long index, short x) {
        constants$107.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegEs$VH() {
        return constants$107.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegEs;
     * }
     */
    public static short AMD64_SegEs$get(MemorySegment seg) {
        return (short)constants$107.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegEs;
     * }
     */
    public static void AMD64_SegEs$set(MemorySegment seg, short x) {
        constants$107.const$5.set(seg, x);
    }
    public static short AMD64_SegEs$get(MemorySegment seg, long index) {
        return (short)constants$107.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegEs$set(MemorySegment seg, long index, short x) {
        constants$107.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegFs$VH() {
        return constants$108.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegFs;
     * }
     */
    public static short AMD64_SegFs$get(MemorySegment seg) {
        return (short)constants$108.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegFs;
     * }
     */
    public static void AMD64_SegFs$set(MemorySegment seg, short x) {
        constants$108.const$0.set(seg, x);
    }
    public static short AMD64_SegFs$get(MemorySegment seg, long index) {
        return (short)constants$108.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegFs$set(MemorySegment seg, long index, short x) {
        constants$108.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegGs$VH() {
        return constants$108.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegGs;
     * }
     */
    public static short AMD64_SegGs$get(MemorySegment seg) {
        return (short)constants$108.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegGs;
     * }
     */
    public static void AMD64_SegGs$set(MemorySegment seg, short x) {
        constants$108.const$1.set(seg, x);
    }
    public static short AMD64_SegGs$get(MemorySegment seg, long index) {
        return (short)constants$108.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegGs$set(MemorySegment seg, long index, short x) {
        constants$108.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_SegSs$VH() {
        return constants$108.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_SegSs;
     * }
     */
    public static short AMD64_SegSs$get(MemorySegment seg) {
        return (short)constants$108.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_SegSs;
     * }
     */
    public static void AMD64_SegSs$set(MemorySegment seg, short x) {
        constants$108.const$2.set(seg, x);
    }
    public static short AMD64_SegSs$get(MemorySegment seg, long index) {
        return (short)constants$108.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_SegSs$set(MemorySegment seg, long index, short x) {
        constants$108.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_EFlags$VH() {
        return constants$108.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_EFlags;
     * }
     */
    public static int AMD64_EFlags$get(MemorySegment seg) {
        return (int)constants$108.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_EFlags;
     * }
     */
    public static void AMD64_EFlags$set(MemorySegment seg, int x) {
        constants$108.const$3.set(seg, x);
    }
    public static int AMD64_EFlags$get(MemorySegment seg, long index) {
        return (int)constants$108.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_EFlags$set(MemorySegment seg, long index, int x) {
        constants$108.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr0$VH() {
        return constants$108.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr0;
     * }
     */
    public static long AMD64_Dr0$get(MemorySegment seg) {
        return (long)constants$108.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr0;
     * }
     */
    public static void AMD64_Dr0$set(MemorySegment seg, long x) {
        constants$108.const$4.set(seg, x);
    }
    public static long AMD64_Dr0$get(MemorySegment seg, long index) {
        return (long)constants$108.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr0$set(MemorySegment seg, long index, long x) {
        constants$108.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr1$VH() {
        return constants$108.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr1;
     * }
     */
    public static long AMD64_Dr1$get(MemorySegment seg) {
        return (long)constants$108.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr1;
     * }
     */
    public static void AMD64_Dr1$set(MemorySegment seg, long x) {
        constants$108.const$5.set(seg, x);
    }
    public static long AMD64_Dr1$get(MemorySegment seg, long index) {
        return (long)constants$108.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr1$set(MemorySegment seg, long index, long x) {
        constants$108.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr2$VH() {
        return constants$109.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr2;
     * }
     */
    public static long AMD64_Dr2$get(MemorySegment seg) {
        return (long)constants$109.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr2;
     * }
     */
    public static void AMD64_Dr2$set(MemorySegment seg, long x) {
        constants$109.const$0.set(seg, x);
    }
    public static long AMD64_Dr2$get(MemorySegment seg, long index) {
        return (long)constants$109.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr2$set(MemorySegment seg, long index, long x) {
        constants$109.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr3$VH() {
        return constants$109.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr3;
     * }
     */
    public static long AMD64_Dr3$get(MemorySegment seg) {
        return (long)constants$109.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr3;
     * }
     */
    public static void AMD64_Dr3$set(MemorySegment seg, long x) {
        constants$109.const$1.set(seg, x);
    }
    public static long AMD64_Dr3$get(MemorySegment seg, long index) {
        return (long)constants$109.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr3$set(MemorySegment seg, long index, long x) {
        constants$109.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr6$VH() {
        return constants$109.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr6;
     * }
     */
    public static long AMD64_Dr6$get(MemorySegment seg) {
        return (long)constants$109.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr6;
     * }
     */
    public static void AMD64_Dr6$set(MemorySegment seg, long x) {
        constants$109.const$2.set(seg, x);
    }
    public static long AMD64_Dr6$get(MemorySegment seg, long index) {
        return (long)constants$109.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr6$set(MemorySegment seg, long index, long x) {
        constants$109.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Dr7$VH() {
        return constants$109.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr7;
     * }
     */
    public static long AMD64_Dr7$get(MemorySegment seg) {
        return (long)constants$109.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_Dr7;
     * }
     */
    public static void AMD64_Dr7$set(MemorySegment seg, long x) {
        constants$109.const$3.set(seg, x);
    }
    public static long AMD64_Dr7$get(MemorySegment seg, long index) {
        return (long)constants$109.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Dr7$set(MemorySegment seg, long index, long x) {
        constants$109.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X8$VH() {
        return constants$109.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X8;
     * }
     */
    public static long X8$get(MemorySegment seg) {
        return (long)constants$109.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X8;
     * }
     */
    public static void X8$set(MemorySegment seg, long x) {
        constants$109.const$4.set(seg, x);
    }
    public static long X8$get(MemorySegment seg, long index) {
        return (long)constants$109.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void X8$set(MemorySegment seg, long index, long x) {
        constants$109.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X0$VH() {
        return constants$109.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X0;
     * }
     */
    public static long X0$get(MemorySegment seg) {
        return (long)constants$109.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X0;
     * }
     */
    public static void X0$set(MemorySegment seg, long x) {
        constants$109.const$5.set(seg, x);
    }
    public static long X0$get(MemorySegment seg, long index) {
        return (long)constants$109.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X0$set(MemorySegment seg, long index, long x) {
        constants$109.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X1$VH() {
        return constants$110.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X1;
     * }
     */
    public static long X1$get(MemorySegment seg) {
        return (long)constants$110.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X1;
     * }
     */
    public static void X1$set(MemorySegment seg, long x) {
        constants$110.const$0.set(seg, x);
    }
    public static long X1$get(MemorySegment seg, long index) {
        return (long)constants$110.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void X1$set(MemorySegment seg, long index, long x) {
        constants$110.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X27$VH() {
        return constants$110.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X27;
     * }
     */
    public static long X27$get(MemorySegment seg) {
        return (long)constants$110.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X27;
     * }
     */
    public static void X27$set(MemorySegment seg, long x) {
        constants$110.const$1.set(seg, x);
    }
    public static long X27$get(MemorySegment seg, long index) {
        return (long)constants$110.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void X27$set(MemorySegment seg, long index, long x) {
        constants$110.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Sp$VH() {
        return constants$110.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 Sp;
     * }
     */
    public static long Sp$get(MemorySegment seg) {
        return (long)constants$110.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 Sp;
     * }
     */
    public static void Sp$set(MemorySegment seg, long x) {
        constants$110.const$2.set(seg, x);
    }
    public static long Sp$get(MemorySegment seg, long index) {
        return (long)constants$110.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Sp$set(MemorySegment seg, long index, long x) {
        constants$110.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Fp$VH() {
        return constants$110.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 Fp;
     * }
     */
    public static long Fp$get(MemorySegment seg) {
        return (long)constants$110.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 Fp;
     * }
     */
    public static void Fp$set(MemorySegment seg, long x) {
        constants$110.const$3.set(seg, x);
    }
    public static long Fp$get(MemorySegment seg, long index) {
        return (long)constants$110.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Fp$set(MemorySegment seg, long index, long x) {
        constants$110.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X25$VH() {
        return constants$110.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X25;
     * }
     */
    public static long X25$get(MemorySegment seg) {
        return (long)constants$110.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X25;
     * }
     */
    public static void X25$set(MemorySegment seg, long x) {
        constants$110.const$4.set(seg, x);
    }
    public static long X25$get(MemorySegment seg, long index) {
        return (long)constants$110.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void X25$set(MemorySegment seg, long index, long x) {
        constants$110.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X26$VH() {
        return constants$110.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X26;
     * }
     */
    public static long X26$get(MemorySegment seg) {
        return (long)constants$110.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X26;
     * }
     */
    public static void X26$set(MemorySegment seg, long x) {
        constants$110.const$5.set(seg, x);
    }
    public static long X26$get(MemorySegment seg, long index) {
        return (long)constants$110.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X26$set(MemorySegment seg, long index, long x) {
        constants$110.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X2$VH() {
        return constants$111.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X2;
     * }
     */
    public static long X2$get(MemorySegment seg) {
        return (long)constants$111.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X2;
     * }
     */
    public static void X2$set(MemorySegment seg, long x) {
        constants$111.const$0.set(seg, x);
    }
    public static long X2$get(MemorySegment seg, long index) {
        return (long)constants$111.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void X2$set(MemorySegment seg, long index, long x) {
        constants$111.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X3$VH() {
        return constants$111.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X3;
     * }
     */
    public static long X3$get(MemorySegment seg) {
        return (long)constants$111.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X3;
     * }
     */
    public static void X3$set(MemorySegment seg, long x) {
        constants$111.const$1.set(seg, x);
    }
    public static long X3$get(MemorySegment seg, long index) {
        return (long)constants$111.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void X3$set(MemorySegment seg, long index, long x) {
        constants$111.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X4$VH() {
        return constants$111.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X4;
     * }
     */
    public static long X4$get(MemorySegment seg) {
        return (long)constants$111.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X4;
     * }
     */
    public static void X4$set(MemorySegment seg, long x) {
        constants$111.const$2.set(seg, x);
    }
    public static long X4$get(MemorySegment seg, long index) {
        return (long)constants$111.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void X4$set(MemorySegment seg, long index, long x) {
        constants$111.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X5$VH() {
        return constants$111.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X5;
     * }
     */
    public static long X5$get(MemorySegment seg) {
        return (long)constants$111.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X5;
     * }
     */
    public static void X5$set(MemorySegment seg, long x) {
        constants$111.const$3.set(seg, x);
    }
    public static long X5$get(MemorySegment seg, long index) {
        return (long)constants$111.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void X5$set(MemorySegment seg, long index, long x) {
        constants$111.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X19$VH() {
        return constants$111.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X19;
     * }
     */
    public static long X19$get(MemorySegment seg) {
        return (long)constants$111.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X19;
     * }
     */
    public static void X19$set(MemorySegment seg, long x) {
        constants$111.const$4.set(seg, x);
    }
    public static long X19$get(MemorySegment seg, long index) {
        return (long)constants$111.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void X19$set(MemorySegment seg, long index, long x) {
        constants$111.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X20$VH() {
        return constants$111.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X20;
     * }
     */
    public static long X20$get(MemorySegment seg) {
        return (long)constants$111.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X20;
     * }
     */
    public static void X20$set(MemorySegment seg, long x) {
        constants$111.const$5.set(seg, x);
    }
    public static long X20$get(MemorySegment seg, long index) {
        return (long)constants$111.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X20$set(MemorySegment seg, long index, long x) {
        constants$111.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X21$VH() {
        return constants$112.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X21;
     * }
     */
    public static long X21$get(MemorySegment seg) {
        return (long)constants$112.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X21;
     * }
     */
    public static void X21$set(MemorySegment seg, long x) {
        constants$112.const$0.set(seg, x);
    }
    public static long X21$get(MemorySegment seg, long index) {
        return (long)constants$112.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void X21$set(MemorySegment seg, long index, long x) {
        constants$112.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X22$VH() {
        return constants$112.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X22;
     * }
     */
    public static long X22$get(MemorySegment seg) {
        return (long)constants$112.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X22;
     * }
     */
    public static void X22$set(MemorySegment seg, long x) {
        constants$112.const$1.set(seg, x);
    }
    public static long X22$get(MemorySegment seg, long index) {
        return (long)constants$112.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void X22$set(MemorySegment seg, long index, long x) {
        constants$112.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Pc$VH() {
        return constants$112.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 Pc;
     * }
     */
    public static long Pc$get(MemorySegment seg) {
        return (long)constants$112.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 Pc;
     * }
     */
    public static void Pc$set(MemorySegment seg, long x) {
        constants$112.const$2.set(seg, x);
    }
    public static long Pc$get(MemorySegment seg, long index) {
        return (long)constants$112.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Pc$set(MemorySegment seg, long index, long x) {
        constants$112.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_ControlWord$VH() {
        return constants$112.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_ControlWord;
     * }
     */
    public static short AMD64_ControlWord$get(MemorySegment seg) {
        return (short)constants$112.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_ControlWord;
     * }
     */
    public static void AMD64_ControlWord$set(MemorySegment seg, short x) {
        constants$112.const$3.set(seg, x);
    }
    public static short AMD64_ControlWord$get(MemorySegment seg, long index) {
        return (short)constants$112.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ControlWord$set(MemorySegment seg, long index, short x) {
        constants$112.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_StatusWord$VH() {
        return constants$112.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_StatusWord;
     * }
     */
    public static short AMD64_StatusWord$get(MemorySegment seg) {
        return (short)constants$112.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_StatusWord;
     * }
     */
    public static void AMD64_StatusWord$set(MemorySegment seg, short x) {
        constants$112.const$4.set(seg, x);
    }
    public static short AMD64_StatusWord$get(MemorySegment seg, long index) {
        return (short)constants$112.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_StatusWord$set(MemorySegment seg, long index, short x) {
        constants$112.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_TagWord$VH() {
        return constants$112.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE AMD64_TagWord;
     * }
     */
    public static byte AMD64_TagWord$get(MemorySegment seg) {
        return (byte)constants$112.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE AMD64_TagWord;
     * }
     */
    public static void AMD64_TagWord$set(MemorySegment seg, byte x) {
        constants$112.const$5.set(seg, x);
    }
    public static byte AMD64_TagWord$get(MemorySegment seg, long index) {
        return (byte)constants$112.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_TagWord$set(MemorySegment seg, long index, byte x) {
        constants$112.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Reserved1$VH() {
        return constants$113.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE AMD64_Reserved1;
     * }
     */
    public static byte AMD64_Reserved1$get(MemorySegment seg) {
        return (byte)constants$113.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE AMD64_Reserved1;
     * }
     */
    public static void AMD64_Reserved1$set(MemorySegment seg, byte x) {
        constants$113.const$0.set(seg, x);
    }
    public static byte AMD64_Reserved1$get(MemorySegment seg, long index) {
        return (byte)constants$113.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved1$set(MemorySegment seg, long index, byte x) {
        constants$113.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_ErrorOpcode$VH() {
        return constants$113.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_ErrorOpcode;
     * }
     */
    public static short AMD64_ErrorOpcode$get(MemorySegment seg) {
        return (short)constants$113.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_ErrorOpcode;
     * }
     */
    public static void AMD64_ErrorOpcode$set(MemorySegment seg, short x) {
        constants$113.const$1.set(seg, x);
    }
    public static short AMD64_ErrorOpcode$get(MemorySegment seg, long index) {
        return (short)constants$113.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorOpcode$set(MemorySegment seg, long index, short x) {
        constants$113.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_ErrorOffset$VH() {
        return constants$113.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_ErrorOffset;
     * }
     */
    public static int AMD64_ErrorOffset$get(MemorySegment seg) {
        return (int)constants$113.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_ErrorOffset;
     * }
     */
    public static void AMD64_ErrorOffset$set(MemorySegment seg, int x) {
        constants$113.const$2.set(seg, x);
    }
    public static int AMD64_ErrorOffset$get(MemorySegment seg, long index) {
        return (int)constants$113.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorOffset$set(MemorySegment seg, long index, int x) {
        constants$113.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_ErrorSelector$VH() {
        return constants$113.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_ErrorSelector;
     * }
     */
    public static short AMD64_ErrorSelector$get(MemorySegment seg) {
        return (short)constants$113.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_ErrorSelector;
     * }
     */
    public static void AMD64_ErrorSelector$set(MemorySegment seg, short x) {
        constants$113.const$3.set(seg, x);
    }
    public static short AMD64_ErrorSelector$get(MemorySegment seg, long index) {
        return (short)constants$113.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_ErrorSelector$set(MemorySegment seg, long index, short x) {
        constants$113.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Reserved2$VH() {
        return constants$113.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_Reserved2;
     * }
     */
    public static short AMD64_Reserved2$get(MemorySegment seg) {
        return (short)constants$113.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_Reserved2;
     * }
     */
    public static void AMD64_Reserved2$set(MemorySegment seg, short x) {
        constants$113.const$4.set(seg, x);
    }
    public static short AMD64_Reserved2$get(MemorySegment seg, long index) {
        return (short)constants$113.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved2$set(MemorySegment seg, long index, short x) {
        constants$113.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_DataOffset$VH() {
        return constants$113.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_DataOffset;
     * }
     */
    public static int AMD64_DataOffset$get(MemorySegment seg) {
        return (int)constants$113.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_DataOffset;
     * }
     */
    public static void AMD64_DataOffset$set(MemorySegment seg, int x) {
        constants$113.const$5.set(seg, x);
    }
    public static int AMD64_DataOffset$get(MemorySegment seg, long index) {
        return (int)constants$113.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DataOffset$set(MemorySegment seg, long index, int x) {
        constants$113.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_DataSelector$VH() {
        return constants$114.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_DataSelector;
     * }
     */
    public static short AMD64_DataSelector$get(MemorySegment seg) {
        return (short)constants$114.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_DataSelector;
     * }
     */
    public static void AMD64_DataSelector$set(MemorySegment seg, short x) {
        constants$114.const$0.set(seg, x);
    }
    public static short AMD64_DataSelector$get(MemorySegment seg, long index) {
        return (short)constants$114.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DataSelector$set(MemorySegment seg, long index, short x) {
        constants$114.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_Reserved3$VH() {
        return constants$114.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_Reserved3;
     * }
     */
    public static short AMD64_Reserved3$get(MemorySegment seg) {
        return (short)constants$114.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_Reserved3;
     * }
     */
    public static void AMD64_Reserved3$set(MemorySegment seg, short x) {
        constants$114.const$1.set(seg, x);
    }
    public static short AMD64_Reserved3$get(MemorySegment seg, long index) {
        return (short)constants$114.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_Reserved3$set(MemorySegment seg, long index, short x) {
        constants$114.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_MxCsr$VH() {
        return constants$114.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr;
     * }
     */
    public static int AMD64_MxCsr$get(MemorySegment seg) {
        return (int)constants$114.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr;
     * }
     */
    public static void AMD64_MxCsr$set(MemorySegment seg, int x) {
        constants$114.const$2.set(seg, x);
    }
    public static int AMD64_MxCsr$get(MemorySegment seg, long index) {
        return (int)constants$114.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr$set(MemorySegment seg, long index, int x) {
        constants$114.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_MxCsr_Mask$VH() {
        return constants$114.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr_Mask;
     * }
     */
    public static int AMD64_MxCsr_Mask$get(MemorySegment seg) {
        return (int)constants$114.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_MxCsr_Mask;
     * }
     */
    public static void AMD64_MxCsr_Mask$set(MemorySegment seg, int x) {
        constants$114.const$3.set(seg, x);
    }
    public static int AMD64_MxCsr_Mask$get(MemorySegment seg, long index) {
        return (int)constants$114.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_MxCsr_Mask$set(MemorySegment seg, long index, int x) {
        constants$114.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Lr$VH() {
        return constants$114.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 Lr;
     * }
     */
    public static long Lr$get(MemorySegment seg) {
        return (long)constants$114.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 Lr;
     * }
     */
    public static void Lr$set(MemorySegment seg, long x) {
        constants$114.const$4.set(seg, x);
    }
    public static long Lr$get(MemorySegment seg, long index) {
        return (long)constants$114.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Lr$set(MemorySegment seg, long index, long x) {
        constants$114.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X16_0$VH() {
        return constants$114.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X16_0;
     * }
     */
    public static short X16_0$get(MemorySegment seg) {
        return (short)constants$114.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X16_0;
     * }
     */
    public static void X16_0$set(MemorySegment seg, short x) {
        constants$114.const$5.set(seg, x);
    }
    public static short X16_0$get(MemorySegment seg, long index) {
        return (short)constants$114.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_0$set(MemorySegment seg, long index, short x) {
        constants$114.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St0_Reserved1$VH() {
        return constants$115.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St0_Reserved1;
     * }
     */
    public static short AMD64_St0_Reserved1$get(MemorySegment seg) {
        return (short)constants$115.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St0_Reserved1;
     * }
     */
    public static void AMD64_St0_Reserved1$set(MemorySegment seg, short x) {
        constants$115.const$0.set(seg, x);
    }
    public static short AMD64_St0_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$115.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St0_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$115.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St0_Reserved2$VH() {
        return constants$115.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St0_Reserved2;
     * }
     */
    public static int AMD64_St0_Reserved2$get(MemorySegment seg) {
        return (int)constants$115.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St0_Reserved2;
     * }
     */
    public static void AMD64_St0_Reserved2$set(MemorySegment seg, int x) {
        constants$115.const$1.set(seg, x);
    }
    public static int AMD64_St0_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$115.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St0_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$115.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X6$VH() {
        return constants$115.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X6;
     * }
     */
    public static long X6$get(MemorySegment seg) {
        return (long)constants$115.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X6;
     * }
     */
    public static void X6$set(MemorySegment seg, long x) {
        constants$115.const$2.set(seg, x);
    }
    public static long X6$get(MemorySegment seg, long index) {
        return (long)constants$115.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void X6$set(MemorySegment seg, long index, long x) {
        constants$115.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X16_1$VH() {
        return constants$115.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X16_1;
     * }
     */
    public static short X16_1$get(MemorySegment seg) {
        return (short)constants$115.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X16_1;
     * }
     */
    public static void X16_1$set(MemorySegment seg, short x) {
        constants$115.const$3.set(seg, x);
    }
    public static short X16_1$get(MemorySegment seg, long index) {
        return (short)constants$115.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_1$set(MemorySegment seg, long index, short x) {
        constants$115.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St1_Reserved1$VH() {
        return constants$115.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St1_Reserved1;
     * }
     */
    public static short AMD64_St1_Reserved1$get(MemorySegment seg) {
        return (short)constants$115.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St1_Reserved1;
     * }
     */
    public static void AMD64_St1_Reserved1$set(MemorySegment seg, short x) {
        constants$115.const$4.set(seg, x);
    }
    public static short AMD64_St1_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$115.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St1_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$115.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St1_Reserved2$VH() {
        return constants$115.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St1_Reserved2;
     * }
     */
    public static int AMD64_St1_Reserved2$get(MemorySegment seg) {
        return (int)constants$115.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St1_Reserved2;
     * }
     */
    public static void AMD64_St1_Reserved2$set(MemorySegment seg, int x) {
        constants$115.const$5.set(seg, x);
    }
    public static int AMD64_St1_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$115.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St1_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$115.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X7$VH() {
        return constants$116.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X7;
     * }
     */
    public static long X7$get(MemorySegment seg) {
        return (long)constants$116.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X7;
     * }
     */
    public static void X7$set(MemorySegment seg, long x) {
        constants$116.const$0.set(seg, x);
    }
    public static long X7$get(MemorySegment seg, long index) {
        return (long)constants$116.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void X7$set(MemorySegment seg, long index, long x) {
        constants$116.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X16_2$VH() {
        return constants$116.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X16_2;
     * }
     */
    public static short X16_2$get(MemorySegment seg) {
        return (short)constants$116.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X16_2;
     * }
     */
    public static void X16_2$set(MemorySegment seg, short x) {
        constants$116.const$1.set(seg, x);
    }
    public static short X16_2$get(MemorySegment seg, long index) {
        return (short)constants$116.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_2$set(MemorySegment seg, long index, short x) {
        constants$116.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St2_Reserved1$VH() {
        return constants$116.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St2_Reserved1;
     * }
     */
    public static short AMD64_St2_Reserved1$get(MemorySegment seg) {
        return (short)constants$116.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St2_Reserved1;
     * }
     */
    public static void AMD64_St2_Reserved1$set(MemorySegment seg, short x) {
        constants$116.const$2.set(seg, x);
    }
    public static short AMD64_St2_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$116.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St2_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$116.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St2_Reserved2$VH() {
        return constants$116.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St2_Reserved2;
     * }
     */
    public static int AMD64_St2_Reserved2$get(MemorySegment seg) {
        return (int)constants$116.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St2_Reserved2;
     * }
     */
    public static void AMD64_St2_Reserved2$set(MemorySegment seg, int x) {
        constants$116.const$3.set(seg, x);
    }
    public static int AMD64_St2_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$116.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St2_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$116.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X9$VH() {
        return constants$116.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X9;
     * }
     */
    public static long X9$get(MemorySegment seg) {
        return (long)constants$116.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X9;
     * }
     */
    public static void X9$set(MemorySegment seg, long x) {
        constants$116.const$4.set(seg, x);
    }
    public static long X9$get(MemorySegment seg, long index) {
        return (long)constants$116.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void X9$set(MemorySegment seg, long index, long x) {
        constants$116.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X16_3$VH() {
        return constants$116.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X16_3;
     * }
     */
    public static short X16_3$get(MemorySegment seg) {
        return (short)constants$116.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X16_3;
     * }
     */
    public static void X16_3$set(MemorySegment seg, short x) {
        constants$116.const$5.set(seg, x);
    }
    public static short X16_3$get(MemorySegment seg, long index) {
        return (short)constants$116.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X16_3$set(MemorySegment seg, long index, short x) {
        constants$116.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St3_Reserved1$VH() {
        return constants$117.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St3_Reserved1;
     * }
     */
    public static short AMD64_St3_Reserved1$get(MemorySegment seg) {
        return (short)constants$117.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St3_Reserved1;
     * }
     */
    public static void AMD64_St3_Reserved1$set(MemorySegment seg, short x) {
        constants$117.const$0.set(seg, x);
    }
    public static short AMD64_St3_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$117.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St3_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$117.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St3_Reserved2$VH() {
        return constants$117.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St3_Reserved2;
     * }
     */
    public static int AMD64_St3_Reserved2$get(MemorySegment seg) {
        return (int)constants$117.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St3_Reserved2;
     * }
     */
    public static void AMD64_St3_Reserved2$set(MemorySegment seg, int x) {
        constants$117.const$1.set(seg, x);
    }
    public static int AMD64_St3_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$117.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St3_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$117.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X10$VH() {
        return constants$117.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X10;
     * }
     */
    public static long X10$get(MemorySegment seg) {
        return (long)constants$117.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X10;
     * }
     */
    public static void X10$set(MemorySegment seg, long x) {
        constants$117.const$2.set(seg, x);
    }
    public static long X10$get(MemorySegment seg, long index) {
        return (long)constants$117.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void X10$set(MemorySegment seg, long index, long x) {
        constants$117.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X17_0$VH() {
        return constants$117.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X17_0;
     * }
     */
    public static short X17_0$get(MemorySegment seg) {
        return (short)constants$117.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X17_0;
     * }
     */
    public static void X17_0$set(MemorySegment seg, short x) {
        constants$117.const$3.set(seg, x);
    }
    public static short X17_0$get(MemorySegment seg, long index) {
        return (short)constants$117.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_0$set(MemorySegment seg, long index, short x) {
        constants$117.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St4_Reserved1$VH() {
        return constants$117.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St4_Reserved1;
     * }
     */
    public static short AMD64_St4_Reserved1$get(MemorySegment seg) {
        return (short)constants$117.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St4_Reserved1;
     * }
     */
    public static void AMD64_St4_Reserved1$set(MemorySegment seg, short x) {
        constants$117.const$4.set(seg, x);
    }
    public static short AMD64_St4_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$117.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St4_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$117.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St4_Reserved2$VH() {
        return constants$117.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St4_Reserved2;
     * }
     */
    public static int AMD64_St4_Reserved2$get(MemorySegment seg) {
        return (int)constants$117.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St4_Reserved2;
     * }
     */
    public static void AMD64_St4_Reserved2$set(MemorySegment seg, int x) {
        constants$117.const$5.set(seg, x);
    }
    public static int AMD64_St4_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$117.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St4_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$117.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X11$VH() {
        return constants$118.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X11;
     * }
     */
    public static long X11$get(MemorySegment seg) {
        return (long)constants$118.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X11;
     * }
     */
    public static void X11$set(MemorySegment seg, long x) {
        constants$118.const$0.set(seg, x);
    }
    public static long X11$get(MemorySegment seg, long index) {
        return (long)constants$118.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void X11$set(MemorySegment seg, long index, long x) {
        constants$118.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X17_1$VH() {
        return constants$118.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X17_1;
     * }
     */
    public static short X17_1$get(MemorySegment seg) {
        return (short)constants$118.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X17_1;
     * }
     */
    public static void X17_1$set(MemorySegment seg, short x) {
        constants$118.const$1.set(seg, x);
    }
    public static short X17_1$get(MemorySegment seg, long index) {
        return (short)constants$118.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_1$set(MemorySegment seg, long index, short x) {
        constants$118.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St5_Reserved1$VH() {
        return constants$118.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St5_Reserved1;
     * }
     */
    public static short AMD64_St5_Reserved1$get(MemorySegment seg) {
        return (short)constants$118.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St5_Reserved1;
     * }
     */
    public static void AMD64_St5_Reserved1$set(MemorySegment seg, short x) {
        constants$118.const$2.set(seg, x);
    }
    public static short AMD64_St5_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$118.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St5_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$118.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St5_Reserved2$VH() {
        return constants$118.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St5_Reserved2;
     * }
     */
    public static int AMD64_St5_Reserved2$get(MemorySegment seg) {
        return (int)constants$118.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St5_Reserved2;
     * }
     */
    public static void AMD64_St5_Reserved2$set(MemorySegment seg, int x) {
        constants$118.const$3.set(seg, x);
    }
    public static int AMD64_St5_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$118.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St5_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$118.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X12$VH() {
        return constants$118.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X12;
     * }
     */
    public static long X12$get(MemorySegment seg) {
        return (long)constants$118.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X12;
     * }
     */
    public static void X12$set(MemorySegment seg, long x) {
        constants$118.const$4.set(seg, x);
    }
    public static long X12$get(MemorySegment seg, long index) {
        return (long)constants$118.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void X12$set(MemorySegment seg, long index, long x) {
        constants$118.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X17_2$VH() {
        return constants$118.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X17_2;
     * }
     */
    public static short X17_2$get(MemorySegment seg) {
        return (short)constants$118.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X17_2;
     * }
     */
    public static void X17_2$set(MemorySegment seg, short x) {
        constants$118.const$5.set(seg, x);
    }
    public static short X17_2$get(MemorySegment seg, long index) {
        return (short)constants$118.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_2$set(MemorySegment seg, long index, short x) {
        constants$118.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St6_Reserved1$VH() {
        return constants$119.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St6_Reserved1;
     * }
     */
    public static short AMD64_St6_Reserved1$get(MemorySegment seg) {
        return (short)constants$119.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St6_Reserved1;
     * }
     */
    public static void AMD64_St6_Reserved1$set(MemorySegment seg, short x) {
        constants$119.const$0.set(seg, x);
    }
    public static short AMD64_St6_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$119.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St6_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$119.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St6_Reserved2$VH() {
        return constants$119.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St6_Reserved2;
     * }
     */
    public static int AMD64_St6_Reserved2$get(MemorySegment seg) {
        return (int)constants$119.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St6_Reserved2;
     * }
     */
    public static void AMD64_St6_Reserved2$set(MemorySegment seg, int x) {
        constants$119.const$1.set(seg, x);
    }
    public static int AMD64_St6_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$119.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St6_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$119.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X15$VH() {
        return constants$119.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 X15;
     * }
     */
    public static long X15$get(MemorySegment seg) {
        return (long)constants$119.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 X15;
     * }
     */
    public static void X15$set(MemorySegment seg, long x) {
        constants$119.const$2.set(seg, x);
    }
    public static long X15$get(MemorySegment seg, long index) {
        return (long)constants$119.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void X15$set(MemorySegment seg, long index, long x) {
        constants$119.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle X17_3$VH() {
        return constants$119.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD X17_3;
     * }
     */
    public static short X17_3$get(MemorySegment seg) {
        return (short)constants$119.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD X17_3;
     * }
     */
    public static void X17_3$set(MemorySegment seg, short x) {
        constants$119.const$3.set(seg, x);
    }
    public static short X17_3$get(MemorySegment seg, long index) {
        return (short)constants$119.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void X17_3$set(MemorySegment seg, long index, short x) {
        constants$119.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St7_Reserved1$VH() {
        return constants$119.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD AMD64_St7_Reserved1;
     * }
     */
    public static short AMD64_St7_Reserved1$get(MemorySegment seg) {
        return (short)constants$119.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD AMD64_St7_Reserved1;
     * }
     */
    public static void AMD64_St7_Reserved1$set(MemorySegment seg, short x) {
        constants$119.const$4.set(seg, x);
    }
    public static short AMD64_St7_Reserved1$get(MemorySegment seg, long index) {
        return (short)constants$119.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St7_Reserved1$set(MemorySegment seg, long index, short x) {
        constants$119.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_St7_Reserved2$VH() {
        return constants$119.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AMD64_St7_Reserved2;
     * }
     */
    public static int AMD64_St7_Reserved2$get(MemorySegment seg) {
        return (int)constants$119.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AMD64_St7_Reserved2;
     * }
     */
    public static void AMD64_St7_Reserved2$set(MemorySegment seg, int x) {
        constants$119.const$5.set(seg, x);
    }
    public static int AMD64_St7_Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$119.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_St7_Reserved2$set(MemorySegment seg, long index, int x) {
        constants$119.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment V$slice(MemorySegment seg) {
        return seg.asSlice(416, 256);
    }
    public static MemorySegment AMD64_XSAVE_FORMAT_Reserved4$slice(MemorySegment seg) {
        return seg.asSlice(672, 96);
    }
    public static MemorySegment AMD64_VectorRegister$slice(MemorySegment seg) {
        return seg.asSlice(768, 416);
    }
    public static VarHandle AMD64_VectorControl$VH() {
        return constants$120.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_VectorControl;
     * }
     */
    public static long AMD64_VectorControl$get(MemorySegment seg) {
        return (long)constants$120.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_VectorControl;
     * }
     */
    public static void AMD64_VectorControl$set(MemorySegment seg, long x) {
        constants$120.const$0.set(seg, x);
    }
    public static long AMD64_VectorControl$get(MemorySegment seg, long index) {
        return (long)constants$120.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_VectorControl$set(MemorySegment seg, long index, long x) {
        constants$120.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_DebugControl$VH() {
        return constants$120.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_DebugControl;
     * }
     */
    public static long AMD64_DebugControl$get(MemorySegment seg) {
        return (long)constants$120.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_DebugControl;
     * }
     */
    public static void AMD64_DebugControl$set(MemorySegment seg, long x) {
        constants$120.const$1.set(seg, x);
    }
    public static long AMD64_DebugControl$get(MemorySegment seg, long index) {
        return (long)constants$120.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_DebugControl$set(MemorySegment seg, long index, long x) {
        constants$120.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_LastBranchToRip$VH() {
        return constants$120.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_LastBranchToRip;
     * }
     */
    public static long AMD64_LastBranchToRip$get(MemorySegment seg) {
        return (long)constants$120.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_LastBranchToRip;
     * }
     */
    public static void AMD64_LastBranchToRip$set(MemorySegment seg, long x) {
        constants$120.const$2.set(seg, x);
    }
    public static long AMD64_LastBranchToRip$get(MemorySegment seg, long index) {
        return (long)constants$120.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastBranchToRip$set(MemorySegment seg, long index, long x) {
        constants$120.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_LastBranchFromRip$VH() {
        return constants$120.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_LastBranchFromRip;
     * }
     */
    public static long AMD64_LastBranchFromRip$get(MemorySegment seg) {
        return (long)constants$120.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_LastBranchFromRip;
     * }
     */
    public static void AMD64_LastBranchFromRip$set(MemorySegment seg, long x) {
        constants$120.const$3.set(seg, x);
    }
    public static long AMD64_LastBranchFromRip$get(MemorySegment seg, long index) {
        return (long)constants$120.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastBranchFromRip$set(MemorySegment seg, long index, long x) {
        constants$120.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_LastExceptionToRip$VH() {
        return constants$120.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_LastExceptionToRip;
     * }
     */
    public static long AMD64_LastExceptionToRip$get(MemorySegment seg) {
        return (long)constants$120.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_LastExceptionToRip;
     * }
     */
    public static void AMD64_LastExceptionToRip$set(MemorySegment seg, long x) {
        constants$120.const$4.set(seg, x);
    }
    public static long AMD64_LastExceptionToRip$get(MemorySegment seg, long index) {
        return (long)constants$120.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastExceptionToRip$set(MemorySegment seg, long index, long x) {
        constants$120.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AMD64_LastExceptionFromRip$VH() {
        return constants$120.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 AMD64_LastExceptionFromRip;
     * }
     */
    public static long AMD64_LastExceptionFromRip$get(MemorySegment seg) {
        return (long)constants$120.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 AMD64_LastExceptionFromRip;
     * }
     */
    public static void AMD64_LastExceptionFromRip$set(MemorySegment seg, long x) {
        constants$120.const$5.set(seg, x);
    }
    public static long AMD64_LastExceptionFromRip$get(MemorySegment seg, long index) {
        return (long)constants$120.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AMD64_LastExceptionFromRip$set(MemorySegment seg, long index, long x) {
        constants$120.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


