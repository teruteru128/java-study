// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CRYPT_KEY_PROV_INFO {
 *     LPWSTR pwszContainerName;
 *     LPWSTR pwszProvName;
 *     DWORD dwProvType;
 *     DWORD dwFlags;
 *     DWORD cProvParam;
 *     PCRYPT_KEY_PROV_PARAM rgProvParam;
 *     DWORD dwKeySpec;
 * };
 * }
 */
public class _CRYPT_KEY_PROV_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2122.const$0;
    }
    public static VarHandle pwszContainerName$VH() {
        return constants$2122.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszContainerName;
     * }
     */
    public static MemorySegment pwszContainerName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2122.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszContainerName;
     * }
     */
    public static void pwszContainerName$set(MemorySegment seg, MemorySegment x) {
        constants$2122.const$1.set(seg, x);
    }
    public static MemorySegment pwszContainerName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2122.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszContainerName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2122.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pwszProvName$VH() {
        return constants$2122.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszProvName;
     * }
     */
    public static MemorySegment pwszProvName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2122.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszProvName;
     * }
     */
    public static void pwszProvName$set(MemorySegment seg, MemorySegment x) {
        constants$2122.const$2.set(seg, x);
    }
    public static MemorySegment pwszProvName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2122.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszProvName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2122.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProvType$VH() {
        return constants$2122.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProvType;
     * }
     */
    public static int dwProvType$get(MemorySegment seg) {
        return (int)constants$2122.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProvType;
     * }
     */
    public static void dwProvType$set(MemorySegment seg, int x) {
        constants$2122.const$3.set(seg, x);
    }
    public static int dwProvType$get(MemorySegment seg, long index) {
        return (int)constants$2122.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProvType$set(MemorySegment seg, long index, int x) {
        constants$2122.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFlags$VH() {
        return constants$2122.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$2122.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$2122.const$4.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$2122.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$2122.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cProvParam$VH() {
        return constants$2122.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cProvParam;
     * }
     */
    public static int cProvParam$get(MemorySegment seg) {
        return (int)constants$2122.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cProvParam;
     * }
     */
    public static void cProvParam$set(MemorySegment seg, int x) {
        constants$2122.const$5.set(seg, x);
    }
    public static int cProvParam$get(MemorySegment seg, long index) {
        return (int)constants$2122.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cProvParam$set(MemorySegment seg, long index, int x) {
        constants$2122.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgProvParam$VH() {
        return constants$2123.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_KEY_PROV_PARAM rgProvParam;
     * }
     */
    public static MemorySegment rgProvParam$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2123.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_KEY_PROV_PARAM rgProvParam;
     * }
     */
    public static void rgProvParam$set(MemorySegment seg, MemorySegment x) {
        constants$2123.const$0.set(seg, x);
    }
    public static MemorySegment rgProvParam$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2123.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void rgProvParam$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2123.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwKeySpec$VH() {
        return constants$2123.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static int dwKeySpec$get(MemorySegment seg) {
        return (int)constants$2123.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static void dwKeySpec$set(MemorySegment seg, int x) {
        constants$2123.const$1.set(seg, x);
    }
    public static int dwKeySpec$get(MemorySegment seg, long index) {
        return (int)constants$2123.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwKeySpec$set(MemorySegment seg, long index, int x) {
        constants$2123.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


