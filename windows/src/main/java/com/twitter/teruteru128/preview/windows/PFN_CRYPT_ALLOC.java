// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void* (*PFN_CRYPT_ALLOC)(unsigned long long cbSize);
 * }
 */
public interface PFN_CRYPT_ALLOC {

    java.lang.foreign.MemorySegment apply(long cb);
    static MemorySegment allocate(PFN_CRYPT_ALLOC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2021.const$2, fi, constants$1977.const$2, scope);
    }
    static PFN_CRYPT_ALLOC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (long _cb) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$1977.const$4.invokeExact(symbol, _cb);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


