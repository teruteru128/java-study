// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagTOUCHINPUT {
 *     LONG x;
 *     LONG y;
 *     HANDLE hSource;
 *     DWORD dwID;
 *     DWORD dwFlags;
 *     DWORD dwMask;
 *     DWORD dwTime;
 *     ULONG_PTR dwExtraInfo;
 *     DWORD cxContact;
 *     DWORD cyContact;
 * };
 * }
 */
public class tagTOUCHINPUT {

    public static MemoryLayout $LAYOUT() {
        return constants$1232.const$3;
    }
    public static VarHandle x$VH() {
        return constants$1232.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG x;
     * }
     */
    public static int x$get(MemorySegment seg) {
        return (int)constants$1232.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG x;
     * }
     */
    public static void x$set(MemorySegment seg, int x) {
        constants$1232.const$4.set(seg, x);
    }
    public static int x$get(MemorySegment seg, long index) {
        return (int)constants$1232.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, int x) {
        constants$1232.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$1232.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG y;
     * }
     */
    public static int y$get(MemorySegment seg) {
        return (int)constants$1232.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG y;
     * }
     */
    public static void y$set(MemorySegment seg, int x) {
        constants$1232.const$5.set(seg, x);
    }
    public static int y$get(MemorySegment seg, long index) {
        return (int)constants$1232.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, int x) {
        constants$1232.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hSource$VH() {
        return constants$1233.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE hSource;
     * }
     */
    public static MemorySegment hSource$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1233.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE hSource;
     * }
     */
    public static void hSource$set(MemorySegment seg, MemorySegment x) {
        constants$1233.const$0.set(seg, x);
    }
    public static MemorySegment hSource$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1233.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hSource$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1233.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwID$VH() {
        return constants$1233.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwID;
     * }
     */
    public static int dwID$get(MemorySegment seg) {
        return (int)constants$1233.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwID;
     * }
     */
    public static void dwID$set(MemorySegment seg, int x) {
        constants$1233.const$1.set(seg, x);
    }
    public static int dwID$get(MemorySegment seg, long index) {
        return (int)constants$1233.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwID$set(MemorySegment seg, long index, int x) {
        constants$1233.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFlags$VH() {
        return constants$1233.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$1233.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$1233.const$2.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$1233.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$1233.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMask$VH() {
        return constants$1233.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMask;
     * }
     */
    public static int dwMask$get(MemorySegment seg) {
        return (int)constants$1233.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMask;
     * }
     */
    public static void dwMask$set(MemorySegment seg, int x) {
        constants$1233.const$3.set(seg, x);
    }
    public static int dwMask$get(MemorySegment seg, long index) {
        return (int)constants$1233.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMask$set(MemorySegment seg, long index, int x) {
        constants$1233.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTime$VH() {
        return constants$1233.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static int dwTime$get(MemorySegment seg) {
        return (int)constants$1233.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static void dwTime$set(MemorySegment seg, int x) {
        constants$1233.const$4.set(seg, x);
    }
    public static int dwTime$get(MemorySegment seg, long index) {
        return (int)constants$1233.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTime$set(MemorySegment seg, long index, int x) {
        constants$1233.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwExtraInfo$VH() {
        return constants$1233.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR dwExtraInfo;
     * }
     */
    public static long dwExtraInfo$get(MemorySegment seg) {
        return (long)constants$1233.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR dwExtraInfo;
     * }
     */
    public static void dwExtraInfo$set(MemorySegment seg, long x) {
        constants$1233.const$5.set(seg, x);
    }
    public static long dwExtraInfo$get(MemorySegment seg, long index) {
        return (long)constants$1233.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwExtraInfo$set(MemorySegment seg, long index, long x) {
        constants$1233.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cxContact$VH() {
        return constants$1234.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cxContact;
     * }
     */
    public static int cxContact$get(MemorySegment seg) {
        return (int)constants$1234.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cxContact;
     * }
     */
    public static void cxContact$set(MemorySegment seg, int x) {
        constants$1234.const$0.set(seg, x);
    }
    public static int cxContact$get(MemorySegment seg, long index) {
        return (int)constants$1234.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cxContact$set(MemorySegment seg, long index, int x) {
        constants$1234.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cyContact$VH() {
        return constants$1234.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cyContact;
     * }
     */
    public static int cyContact$get(MemorySegment seg) {
        return (int)constants$1234.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cyContact;
     * }
     */
    public static void cyContact$set(MemorySegment seg, int x) {
        constants$1234.const$1.set(seg, x);
    }
    public static int cyContact$get(MemorySegment seg, long index) {
        return (int)constants$1234.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cyContact$set(MemorySegment seg, long index, int x) {
        constants$1234.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


