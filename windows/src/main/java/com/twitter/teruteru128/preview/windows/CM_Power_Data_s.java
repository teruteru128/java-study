// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct CM_Power_Data_s {
 *     DWORD PD_Size;
 *     DEVICE_POWER_STATE PD_MostRecentPowerState;
 *     DWORD PD_Capabilities;
 *     DWORD PD_D1Latency;
 *     DWORD PD_D2Latency;
 *     DWORD PD_D3Latency;
 *     DEVICE_POWER_STATE PD_PowerStateMapping[7];
 *     SYSTEM_POWER_STATE PD_DeepestSystemWake;
 * };
 * }
 */
public class CM_Power_Data_s {

    public static MemoryLayout $LAYOUT() {
        return constants$299.const$2;
    }
    public static VarHandle PD_Size$VH() {
        return constants$299.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PD_Size;
     * }
     */
    public static int PD_Size$get(MemorySegment seg) {
        return (int)constants$299.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PD_Size;
     * }
     */
    public static void PD_Size$set(MemorySegment seg, int x) {
        constants$299.const$3.set(seg, x);
    }
    public static int PD_Size$get(MemorySegment seg, long index) {
        return (int)constants$299.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_Size$set(MemorySegment seg, long index, int x) {
        constants$299.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PD_MostRecentPowerState$VH() {
        return constants$299.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DEVICE_POWER_STATE PD_MostRecentPowerState;
     * }
     */
    public static int PD_MostRecentPowerState$get(MemorySegment seg) {
        return (int)constants$299.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DEVICE_POWER_STATE PD_MostRecentPowerState;
     * }
     */
    public static void PD_MostRecentPowerState$set(MemorySegment seg, int x) {
        constants$299.const$4.set(seg, x);
    }
    public static int PD_MostRecentPowerState$get(MemorySegment seg, long index) {
        return (int)constants$299.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_MostRecentPowerState$set(MemorySegment seg, long index, int x) {
        constants$299.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PD_Capabilities$VH() {
        return constants$299.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PD_Capabilities;
     * }
     */
    public static int PD_Capabilities$get(MemorySegment seg) {
        return (int)constants$299.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PD_Capabilities;
     * }
     */
    public static void PD_Capabilities$set(MemorySegment seg, int x) {
        constants$299.const$5.set(seg, x);
    }
    public static int PD_Capabilities$get(MemorySegment seg, long index) {
        return (int)constants$299.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_Capabilities$set(MemorySegment seg, long index, int x) {
        constants$299.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PD_D1Latency$VH() {
        return constants$300.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PD_D1Latency;
     * }
     */
    public static int PD_D1Latency$get(MemorySegment seg) {
        return (int)constants$300.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PD_D1Latency;
     * }
     */
    public static void PD_D1Latency$set(MemorySegment seg, int x) {
        constants$300.const$0.set(seg, x);
    }
    public static int PD_D1Latency$get(MemorySegment seg, long index) {
        return (int)constants$300.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_D1Latency$set(MemorySegment seg, long index, int x) {
        constants$300.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PD_D2Latency$VH() {
        return constants$300.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PD_D2Latency;
     * }
     */
    public static int PD_D2Latency$get(MemorySegment seg) {
        return (int)constants$300.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PD_D2Latency;
     * }
     */
    public static void PD_D2Latency$set(MemorySegment seg, int x) {
        constants$300.const$1.set(seg, x);
    }
    public static int PD_D2Latency$get(MemorySegment seg, long index) {
        return (int)constants$300.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_D2Latency$set(MemorySegment seg, long index, int x) {
        constants$300.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PD_D3Latency$VH() {
        return constants$300.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PD_D3Latency;
     * }
     */
    public static int PD_D3Latency$get(MemorySegment seg) {
        return (int)constants$300.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PD_D3Latency;
     * }
     */
    public static void PD_D3Latency$set(MemorySegment seg, int x) {
        constants$300.const$2.set(seg, x);
    }
    public static int PD_D3Latency$get(MemorySegment seg, long index) {
        return (int)constants$300.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_D3Latency$set(MemorySegment seg, long index, int x) {
        constants$300.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment PD_PowerStateMapping$slice(MemorySegment seg) {
        return seg.asSlice(24, 28);
    }
    public static VarHandle PD_DeepestSystemWake$VH() {
        return constants$300.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SYSTEM_POWER_STATE PD_DeepestSystemWake;
     * }
     */
    public static int PD_DeepestSystemWake$get(MemorySegment seg) {
        return (int)constants$300.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SYSTEM_POWER_STATE PD_DeepestSystemWake;
     * }
     */
    public static void PD_DeepestSystemWake$set(MemorySegment seg, int x) {
        constants$300.const$3.set(seg, x);
    }
    public static int PD_DeepestSystemWake$get(MemorySegment seg, long index) {
        return (int)constants$300.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void PD_DeepestSystemWake$set(MemorySegment seg, long index, int x) {
        constants$300.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


