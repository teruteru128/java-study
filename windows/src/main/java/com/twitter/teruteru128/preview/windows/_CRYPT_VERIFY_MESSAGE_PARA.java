// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CRYPT_VERIFY_MESSAGE_PARA {
 *     DWORD cbSize;
 *     DWORD dwMsgAndCertEncodingType;
 *     HCRYPTPROV_LEGACY hCryptProv;
 *     PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
 *     void* pvGetArg;
 * };
 * }
 */
public class _CRYPT_VERIFY_MESSAGE_PARA {

    public static MemoryLayout $LAYOUT() {
        return constants$2177.const$0;
    }
    public static VarHandle cbSize$VH() {
        return constants$2177.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$2177.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$2177.const$1.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$2177.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$2177.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMsgAndCertEncodingType$VH() {
        return constants$2177.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMsgAndCertEncodingType;
     * }
     */
    public static int dwMsgAndCertEncodingType$get(MemorySegment seg) {
        return (int)constants$2177.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMsgAndCertEncodingType;
     * }
     */
    public static void dwMsgAndCertEncodingType$set(MemorySegment seg, int x) {
        constants$2177.const$2.set(seg, x);
    }
    public static int dwMsgAndCertEncodingType$get(MemorySegment seg, long index) {
        return (int)constants$2177.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMsgAndCertEncodingType$set(MemorySegment seg, long index, int x) {
        constants$2177.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hCryptProv$VH() {
        return constants$2177.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCRYPTPROV_LEGACY hCryptProv;
     * }
     */
    public static long hCryptProv$get(MemorySegment seg) {
        return (long)constants$2177.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCRYPTPROV_LEGACY hCryptProv;
     * }
     */
    public static void hCryptProv$set(MemorySegment seg, long x) {
        constants$2177.const$3.set(seg, x);
    }
    public static long hCryptProv$get(MemorySegment seg, long index) {
        return (long)constants$2177.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void hCryptProv$set(MemorySegment seg, long index, long x) {
        constants$2177.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pfnGetSignerCertificate$VH() {
        return constants$2177.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
     * }
     */
    public static MemorySegment pfnGetSignerCertificate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2177.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
     * }
     */
    public static void pfnGetSignerCertificate$set(MemorySegment seg, MemorySegment x) {
        constants$2177.const$4.set(seg, x);
    }
    public static MemorySegment pfnGetSignerCertificate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2177.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pfnGetSignerCertificate$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2177.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate(MemorySegment segment, Arena scope) {
        return PFN_CRYPT_GET_SIGNER_CERTIFICATE.ofAddress(pfnGetSignerCertificate$get(segment), scope);
    }
    public static VarHandle pvGetArg$VH() {
        return constants$2177.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvGetArg;
     * }
     */
    public static MemorySegment pvGetArg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2177.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvGetArg;
     * }
     */
    public static void pvGetArg$set(MemorySegment seg, MemorySegment x) {
        constants$2177.const$5.set(seg, x);
    }
    public static MemorySegment pvGetArg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2177.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pvGetArg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2177.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


