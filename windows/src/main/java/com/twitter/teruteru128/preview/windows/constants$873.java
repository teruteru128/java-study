// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$873 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$873() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_INT.withName("AlignmentRequirement")
    ).withName("_FILE_ALIGNMENT_INFO");
    static final VarHandle const$1 = constants$873.const$0.varHandle(MemoryLayout.PathElement.groupElement("AlignmentRequirement"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("LogicalBytesPerSector"),
        JAVA_INT.withName("PhysicalBytesPerSectorForAtomicity"),
        JAVA_INT.withName("PhysicalBytesPerSectorForPerformance"),
        JAVA_INT.withName("FileSystemEffectivePhysicalBytesPerSectorForAtomicity"),
        JAVA_INT.withName("Flags"),
        JAVA_INT.withName("ByteOffsetForSectorAlignment"),
        JAVA_INT.withName("ByteOffsetForPartitionAlignment")
    ).withName("_FILE_STORAGE_INFO");
    static final VarHandle const$3 = constants$873.const$2.varHandle(MemoryLayout.PathElement.groupElement("LogicalBytesPerSector"));
    static final VarHandle const$4 = constants$873.const$2.varHandle(MemoryLayout.PathElement.groupElement("PhysicalBytesPerSectorForAtomicity"));
    static final VarHandle const$5 = constants$873.const$2.varHandle(MemoryLayout.PathElement.groupElement("PhysicalBytesPerSectorForPerformance"));
}


