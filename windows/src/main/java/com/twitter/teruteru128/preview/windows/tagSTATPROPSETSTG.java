// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagSTATPROPSETSTG {
 *     FMTID fmtid;
 *     CLSID clsid;
 *     DWORD grfFlags;
 *     FILETIME mtime;
 *     FILETIME ctime;
 *     FILETIME atime;
 *     DWORD dwOSVersion;
 * };
 * }
 */
public class tagSTATPROPSETSTG {

    public static MemoryLayout $LAYOUT() {
        return constants$3604.const$4;
    }
    public static MemorySegment fmtid$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment clsid$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static VarHandle grfFlags$VH() {
        return constants$3604.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD grfFlags;
     * }
     */
    public static int grfFlags$get(MemorySegment seg) {
        return (int)constants$3604.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD grfFlags;
     * }
     */
    public static void grfFlags$set(MemorySegment seg, int x) {
        constants$3604.const$5.set(seg, x);
    }
    public static int grfFlags$get(MemorySegment seg, long index) {
        return (int)constants$3604.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void grfFlags$set(MemorySegment seg, long index, int x) {
        constants$3604.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment mtime$slice(MemorySegment seg) {
        return seg.asSlice(36, 8);
    }
    public static MemorySegment ctime$slice(MemorySegment seg) {
        return seg.asSlice(44, 8);
    }
    public static MemorySegment atime$slice(MemorySegment seg) {
        return seg.asSlice(52, 8);
    }
    public static VarHandle dwOSVersion$VH() {
        return constants$3605.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwOSVersion;
     * }
     */
    public static int dwOSVersion$get(MemorySegment seg) {
        return (int)constants$3605.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwOSVersion;
     * }
     */
    public static void dwOSVersion$set(MemorySegment seg, int x) {
        constants$3605.const$0.set(seg, x);
    }
    public static int dwOSVersion$get(MemorySegment seg, long index) {
        return (int)constants$3605.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwOSVersion$set(MemorySegment seg, long index, int x) {
        constants$3605.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


