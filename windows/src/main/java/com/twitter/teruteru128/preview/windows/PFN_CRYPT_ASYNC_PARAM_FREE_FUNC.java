// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(char* pszParamOid,void* pvParam);
 * }
 */
public interface PFN_CRYPT_ASYNC_PARAM_FREE_FUNC {

    void apply(java.lang.foreign.MemorySegment _x0, java.lang.foreign.MemorySegment _x1);
    static MemorySegment allocate(PFN_CRYPT_ASYNC_PARAM_FREE_FUNC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2188.const$3, fi, constants$469.const$2, scope);
    }
    static PFN_CRYPT_ASYNC_PARAM_FREE_FUNC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment __x0, java.lang.foreign.MemorySegment __x1) -> {
            try {
                constants$531.const$5.invokeExact(symbol, __x0, __x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


