// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _PRINTPROCESSOR_CAPS_2 {
 *     DWORD dwLevel;
 *     DWORD dwNupOptions;
 *     DWORD dwPageOrderFlags;
 *     DWORD dwNumberOfCopies;
 *     DWORD dwDuplexHandlingCaps;
 *     DWORD dwNupDirectionCaps;
 *     DWORD dwNupBorderCaps;
 *     DWORD dwBookletHandlingCaps;
 *     DWORD dwScalingCaps;
 * };
 * }
 */
public class _PRINTPROCESSOR_CAPS_2 {

    public static MemoryLayout $LAYOUT() {
        return constants$2895.const$5;
    }
    public static VarHandle dwLevel$VH() {
        return constants$2896.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLevel;
     * }
     */
    public static int dwLevel$get(MemorySegment seg) {
        return (int)constants$2896.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLevel;
     * }
     */
    public static void dwLevel$set(MemorySegment seg, int x) {
        constants$2896.const$0.set(seg, x);
    }
    public static int dwLevel$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLevel$set(MemorySegment seg, long index, int x) {
        constants$2896.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNupOptions$VH() {
        return constants$2896.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNupOptions;
     * }
     */
    public static int dwNupOptions$get(MemorySegment seg) {
        return (int)constants$2896.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNupOptions;
     * }
     */
    public static void dwNupOptions$set(MemorySegment seg, int x) {
        constants$2896.const$1.set(seg, x);
    }
    public static int dwNupOptions$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNupOptions$set(MemorySegment seg, long index, int x) {
        constants$2896.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPageOrderFlags$VH() {
        return constants$2896.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPageOrderFlags;
     * }
     */
    public static int dwPageOrderFlags$get(MemorySegment seg) {
        return (int)constants$2896.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPageOrderFlags;
     * }
     */
    public static void dwPageOrderFlags$set(MemorySegment seg, int x) {
        constants$2896.const$2.set(seg, x);
    }
    public static int dwPageOrderFlags$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPageOrderFlags$set(MemorySegment seg, long index, int x) {
        constants$2896.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNumberOfCopies$VH() {
        return constants$2896.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNumberOfCopies;
     * }
     */
    public static int dwNumberOfCopies$get(MemorySegment seg) {
        return (int)constants$2896.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNumberOfCopies;
     * }
     */
    public static void dwNumberOfCopies$set(MemorySegment seg, int x) {
        constants$2896.const$3.set(seg, x);
    }
    public static int dwNumberOfCopies$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNumberOfCopies$set(MemorySegment seg, long index, int x) {
        constants$2896.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDuplexHandlingCaps$VH() {
        return constants$2896.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDuplexHandlingCaps;
     * }
     */
    public static int dwDuplexHandlingCaps$get(MemorySegment seg) {
        return (int)constants$2896.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDuplexHandlingCaps;
     * }
     */
    public static void dwDuplexHandlingCaps$set(MemorySegment seg, int x) {
        constants$2896.const$4.set(seg, x);
    }
    public static int dwDuplexHandlingCaps$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDuplexHandlingCaps$set(MemorySegment seg, long index, int x) {
        constants$2896.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNupDirectionCaps$VH() {
        return constants$2896.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNupDirectionCaps;
     * }
     */
    public static int dwNupDirectionCaps$get(MemorySegment seg) {
        return (int)constants$2896.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNupDirectionCaps;
     * }
     */
    public static void dwNupDirectionCaps$set(MemorySegment seg, int x) {
        constants$2896.const$5.set(seg, x);
    }
    public static int dwNupDirectionCaps$get(MemorySegment seg, long index) {
        return (int)constants$2896.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNupDirectionCaps$set(MemorySegment seg, long index, int x) {
        constants$2896.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNupBorderCaps$VH() {
        return constants$2897.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNupBorderCaps;
     * }
     */
    public static int dwNupBorderCaps$get(MemorySegment seg) {
        return (int)constants$2897.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNupBorderCaps;
     * }
     */
    public static void dwNupBorderCaps$set(MemorySegment seg, int x) {
        constants$2897.const$0.set(seg, x);
    }
    public static int dwNupBorderCaps$get(MemorySegment seg, long index) {
        return (int)constants$2897.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNupBorderCaps$set(MemorySegment seg, long index, int x) {
        constants$2897.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwBookletHandlingCaps$VH() {
        return constants$2897.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwBookletHandlingCaps;
     * }
     */
    public static int dwBookletHandlingCaps$get(MemorySegment seg) {
        return (int)constants$2897.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwBookletHandlingCaps;
     * }
     */
    public static void dwBookletHandlingCaps$set(MemorySegment seg, int x) {
        constants$2897.const$1.set(seg, x);
    }
    public static int dwBookletHandlingCaps$get(MemorySegment seg, long index) {
        return (int)constants$2897.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwBookletHandlingCaps$set(MemorySegment seg, long index, int x) {
        constants$2897.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwScalingCaps$VH() {
        return constants$2897.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwScalingCaps;
     * }
     */
    public static int dwScalingCaps$get(MemorySegment seg) {
        return (int)constants$2897.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwScalingCaps;
     * }
     */
    public static void dwScalingCaps$set(MemorySegment seg, int x) {
        constants$2897.const$2.set(seg, x);
    }
    public static int dwScalingCaps$get(MemorySegment seg, long index) {
        return (int)constants$2897.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwScalingCaps$set(MemorySegment seg, long index, int x) {
        constants$2897.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


