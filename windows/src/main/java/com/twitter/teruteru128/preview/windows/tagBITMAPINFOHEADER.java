// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagBITMAPINFOHEADER {
 *     DWORD biSize;
 *     LONG biWidth;
 *     LONG biHeight;
 *     WORD biPlanes;
 *     WORD biBitCount;
 *     DWORD biCompression;
 *     DWORD biSizeImage;
 *     LONG biXPelsPerMeter;
 *     LONG biYPelsPerMeter;
 *     DWORD biClrUsed;
 *     DWORD biClrImportant;
 * };
 * }
 */
public class tagBITMAPINFOHEADER {

    public static MemoryLayout $LAYOUT() {
        return constants$895.const$5;
    }
    public static VarHandle biSize$VH() {
        return constants$896.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD biSize;
     * }
     */
    public static int biSize$get(MemorySegment seg) {
        return (int)constants$896.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD biSize;
     * }
     */
    public static void biSize$set(MemorySegment seg, int x) {
        constants$896.const$0.set(seg, x);
    }
    public static int biSize$get(MemorySegment seg, long index) {
        return (int)constants$896.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void biSize$set(MemorySegment seg, long index, int x) {
        constants$896.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biWidth$VH() {
        return constants$896.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG biWidth;
     * }
     */
    public static int biWidth$get(MemorySegment seg) {
        return (int)constants$896.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG biWidth;
     * }
     */
    public static void biWidth$set(MemorySegment seg, int x) {
        constants$896.const$1.set(seg, x);
    }
    public static int biWidth$get(MemorySegment seg, long index) {
        return (int)constants$896.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void biWidth$set(MemorySegment seg, long index, int x) {
        constants$896.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biHeight$VH() {
        return constants$896.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG biHeight;
     * }
     */
    public static int biHeight$get(MemorySegment seg) {
        return (int)constants$896.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG biHeight;
     * }
     */
    public static void biHeight$set(MemorySegment seg, int x) {
        constants$896.const$2.set(seg, x);
    }
    public static int biHeight$get(MemorySegment seg, long index) {
        return (int)constants$896.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void biHeight$set(MemorySegment seg, long index, int x) {
        constants$896.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biPlanes$VH() {
        return constants$896.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD biPlanes;
     * }
     */
    public static short biPlanes$get(MemorySegment seg) {
        return (short)constants$896.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD biPlanes;
     * }
     */
    public static void biPlanes$set(MemorySegment seg, short x) {
        constants$896.const$3.set(seg, x);
    }
    public static short biPlanes$get(MemorySegment seg, long index) {
        return (short)constants$896.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void biPlanes$set(MemorySegment seg, long index, short x) {
        constants$896.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biBitCount$VH() {
        return constants$896.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD biBitCount;
     * }
     */
    public static short biBitCount$get(MemorySegment seg) {
        return (short)constants$896.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD biBitCount;
     * }
     */
    public static void biBitCount$set(MemorySegment seg, short x) {
        constants$896.const$4.set(seg, x);
    }
    public static short biBitCount$get(MemorySegment seg, long index) {
        return (short)constants$896.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void biBitCount$set(MemorySegment seg, long index, short x) {
        constants$896.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biCompression$VH() {
        return constants$896.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD biCompression;
     * }
     */
    public static int biCompression$get(MemorySegment seg) {
        return (int)constants$896.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD biCompression;
     * }
     */
    public static void biCompression$set(MemorySegment seg, int x) {
        constants$896.const$5.set(seg, x);
    }
    public static int biCompression$get(MemorySegment seg, long index) {
        return (int)constants$896.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void biCompression$set(MemorySegment seg, long index, int x) {
        constants$896.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biSizeImage$VH() {
        return constants$897.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD biSizeImage;
     * }
     */
    public static int biSizeImage$get(MemorySegment seg) {
        return (int)constants$897.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD biSizeImage;
     * }
     */
    public static void biSizeImage$set(MemorySegment seg, int x) {
        constants$897.const$0.set(seg, x);
    }
    public static int biSizeImage$get(MemorySegment seg, long index) {
        return (int)constants$897.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void biSizeImage$set(MemorySegment seg, long index, int x) {
        constants$897.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biXPelsPerMeter$VH() {
        return constants$897.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG biXPelsPerMeter;
     * }
     */
    public static int biXPelsPerMeter$get(MemorySegment seg) {
        return (int)constants$897.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG biXPelsPerMeter;
     * }
     */
    public static void biXPelsPerMeter$set(MemorySegment seg, int x) {
        constants$897.const$1.set(seg, x);
    }
    public static int biXPelsPerMeter$get(MemorySegment seg, long index) {
        return (int)constants$897.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void biXPelsPerMeter$set(MemorySegment seg, long index, int x) {
        constants$897.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biYPelsPerMeter$VH() {
        return constants$897.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG biYPelsPerMeter;
     * }
     */
    public static int biYPelsPerMeter$get(MemorySegment seg) {
        return (int)constants$897.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG biYPelsPerMeter;
     * }
     */
    public static void biYPelsPerMeter$set(MemorySegment seg, int x) {
        constants$897.const$2.set(seg, x);
    }
    public static int biYPelsPerMeter$get(MemorySegment seg, long index) {
        return (int)constants$897.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void biYPelsPerMeter$set(MemorySegment seg, long index, int x) {
        constants$897.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biClrUsed$VH() {
        return constants$897.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD biClrUsed;
     * }
     */
    public static int biClrUsed$get(MemorySegment seg) {
        return (int)constants$897.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD biClrUsed;
     * }
     */
    public static void biClrUsed$set(MemorySegment seg, int x) {
        constants$897.const$3.set(seg, x);
    }
    public static int biClrUsed$get(MemorySegment seg, long index) {
        return (int)constants$897.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void biClrUsed$set(MemorySegment seg, long index, int x) {
        constants$897.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle biClrImportant$VH() {
        return constants$897.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD biClrImportant;
     * }
     */
    public static int biClrImportant$get(MemorySegment seg) {
        return (int)constants$897.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD biClrImportant;
     * }
     */
    public static void biClrImportant$set(MemorySegment seg, int x) {
        constants$897.const$4.set(seg, x);
    }
    public static int biClrImportant$get(MemorySegment seg, long index) {
        return (int)constants$897.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void biClrImportant$set(MemorySegment seg, long index, int x) {
        constants$897.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


