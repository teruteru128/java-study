// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagTYPEATTR {
 *     GUID guid;
 *     LCID lcid;
 *     DWORD dwReserved;
 *     MEMBERID memidConstructor;
 *     MEMBERID memidDestructor;
 *     LPOLESTR lpstrSchema;
 *     ULONG cbSizeInstance;
 *     TYPEKIND typekind;
 *     WORD cFuncs;
 *     WORD cVars;
 *     WORD cImplTypes;
 *     WORD cbSizeVft;
 *     WORD cbAlignment;
 *     WORD wTypeFlags;
 *     WORD wMajorVerNum;
 *     WORD wMinorVerNum;
 *     TYPEDESC tdescAlias;
 *     IDLDESC idldescType;
 * };
 * }
 */
public class tagTYPEATTR {

    public static MemoryLayout $LAYOUT() {
        return constants$3435.const$1;
    }
    public static MemorySegment guid$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static VarHandle lcid$VH() {
        return constants$3435.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LCID lcid;
     * }
     */
    public static int lcid$get(MemorySegment seg) {
        return (int)constants$3435.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LCID lcid;
     * }
     */
    public static void lcid$set(MemorySegment seg, int x) {
        constants$3435.const$2.set(seg, x);
    }
    public static int lcid$get(MemorySegment seg, long index) {
        return (int)constants$3435.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lcid$set(MemorySegment seg, long index, int x) {
        constants$3435.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwReserved$VH() {
        return constants$3435.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwReserved;
     * }
     */
    public static int dwReserved$get(MemorySegment seg) {
        return (int)constants$3435.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwReserved;
     * }
     */
    public static void dwReserved$set(MemorySegment seg, int x) {
        constants$3435.const$3.set(seg, x);
    }
    public static int dwReserved$get(MemorySegment seg, long index) {
        return (int)constants$3435.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwReserved$set(MemorySegment seg, long index, int x) {
        constants$3435.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle memidConstructor$VH() {
        return constants$3435.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * MEMBERID memidConstructor;
     * }
     */
    public static int memidConstructor$get(MemorySegment seg) {
        return (int)constants$3435.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * MEMBERID memidConstructor;
     * }
     */
    public static void memidConstructor$set(MemorySegment seg, int x) {
        constants$3435.const$4.set(seg, x);
    }
    public static int memidConstructor$get(MemorySegment seg, long index) {
        return (int)constants$3435.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void memidConstructor$set(MemorySegment seg, long index, int x) {
        constants$3435.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle memidDestructor$VH() {
        return constants$3435.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * MEMBERID memidDestructor;
     * }
     */
    public static int memidDestructor$get(MemorySegment seg) {
        return (int)constants$3435.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * MEMBERID memidDestructor;
     * }
     */
    public static void memidDestructor$set(MemorySegment seg, int x) {
        constants$3435.const$5.set(seg, x);
    }
    public static int memidDestructor$get(MemorySegment seg, long index) {
        return (int)constants$3435.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void memidDestructor$set(MemorySegment seg, long index, int x) {
        constants$3435.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpstrSchema$VH() {
        return constants$3436.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPOLESTR lpstrSchema;
     * }
     */
    public static MemorySegment lpstrSchema$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3436.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPOLESTR lpstrSchema;
     * }
     */
    public static void lpstrSchema$set(MemorySegment seg, MemorySegment x) {
        constants$3436.const$0.set(seg, x);
    }
    public static MemorySegment lpstrSchema$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3436.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void lpstrSchema$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3436.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbSizeInstance$VH() {
        return constants$3436.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbSizeInstance;
     * }
     */
    public static int cbSizeInstance$get(MemorySegment seg) {
        return (int)constants$3436.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbSizeInstance;
     * }
     */
    public static void cbSizeInstance$set(MemorySegment seg, int x) {
        constants$3436.const$1.set(seg, x);
    }
    public static int cbSizeInstance$get(MemorySegment seg, long index) {
        return (int)constants$3436.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSizeInstance$set(MemorySegment seg, long index, int x) {
        constants$3436.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle typekind$VH() {
        return constants$3436.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * TYPEKIND typekind;
     * }
     */
    public static int typekind$get(MemorySegment seg) {
        return (int)constants$3436.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * TYPEKIND typekind;
     * }
     */
    public static void typekind$set(MemorySegment seg, int x) {
        constants$3436.const$2.set(seg, x);
    }
    public static int typekind$get(MemorySegment seg, long index) {
        return (int)constants$3436.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void typekind$set(MemorySegment seg, long index, int x) {
        constants$3436.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cFuncs$VH() {
        return constants$3436.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD cFuncs;
     * }
     */
    public static short cFuncs$get(MemorySegment seg) {
        return (short)constants$3436.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD cFuncs;
     * }
     */
    public static void cFuncs$set(MemorySegment seg, short x) {
        constants$3436.const$3.set(seg, x);
    }
    public static short cFuncs$get(MemorySegment seg, long index) {
        return (short)constants$3436.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cFuncs$set(MemorySegment seg, long index, short x) {
        constants$3436.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cVars$VH() {
        return constants$3436.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD cVars;
     * }
     */
    public static short cVars$get(MemorySegment seg) {
        return (short)constants$3436.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD cVars;
     * }
     */
    public static void cVars$set(MemorySegment seg, short x) {
        constants$3436.const$4.set(seg, x);
    }
    public static short cVars$get(MemorySegment seg, long index) {
        return (short)constants$3436.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cVars$set(MemorySegment seg, long index, short x) {
        constants$3436.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cImplTypes$VH() {
        return constants$3436.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD cImplTypes;
     * }
     */
    public static short cImplTypes$get(MemorySegment seg) {
        return (short)constants$3436.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD cImplTypes;
     * }
     */
    public static void cImplTypes$set(MemorySegment seg, short x) {
        constants$3436.const$5.set(seg, x);
    }
    public static short cImplTypes$get(MemorySegment seg, long index) {
        return (short)constants$3436.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cImplTypes$set(MemorySegment seg, long index, short x) {
        constants$3436.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbSizeVft$VH() {
        return constants$3437.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD cbSizeVft;
     * }
     */
    public static short cbSizeVft$get(MemorySegment seg) {
        return (short)constants$3437.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD cbSizeVft;
     * }
     */
    public static void cbSizeVft$set(MemorySegment seg, short x) {
        constants$3437.const$0.set(seg, x);
    }
    public static short cbSizeVft$get(MemorySegment seg, long index) {
        return (short)constants$3437.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSizeVft$set(MemorySegment seg, long index, short x) {
        constants$3437.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbAlignment$VH() {
        return constants$3437.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD cbAlignment;
     * }
     */
    public static short cbAlignment$get(MemorySegment seg) {
        return (short)constants$3437.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD cbAlignment;
     * }
     */
    public static void cbAlignment$set(MemorySegment seg, short x) {
        constants$3437.const$1.set(seg, x);
    }
    public static short cbAlignment$get(MemorySegment seg, long index) {
        return (short)constants$3437.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbAlignment$set(MemorySegment seg, long index, short x) {
        constants$3437.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wTypeFlags$VH() {
        return constants$3437.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wTypeFlags;
     * }
     */
    public static short wTypeFlags$get(MemorySegment seg) {
        return (short)constants$3437.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wTypeFlags;
     * }
     */
    public static void wTypeFlags$set(MemorySegment seg, short x) {
        constants$3437.const$2.set(seg, x);
    }
    public static short wTypeFlags$get(MemorySegment seg, long index) {
        return (short)constants$3437.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wTypeFlags$set(MemorySegment seg, long index, short x) {
        constants$3437.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wMajorVerNum$VH() {
        return constants$3437.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wMajorVerNum;
     * }
     */
    public static short wMajorVerNum$get(MemorySegment seg) {
        return (short)constants$3437.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wMajorVerNum;
     * }
     */
    public static void wMajorVerNum$set(MemorySegment seg, short x) {
        constants$3437.const$3.set(seg, x);
    }
    public static short wMajorVerNum$get(MemorySegment seg, long index) {
        return (short)constants$3437.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wMajorVerNum$set(MemorySegment seg, long index, short x) {
        constants$3437.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wMinorVerNum$VH() {
        return constants$3437.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wMinorVerNum;
     * }
     */
    public static short wMinorVerNum$get(MemorySegment seg) {
        return (short)constants$3437.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wMinorVerNum;
     * }
     */
    public static void wMinorVerNum$set(MemorySegment seg, short x) {
        constants$3437.const$4.set(seg, x);
    }
    public static short wMinorVerNum$get(MemorySegment seg, long index) {
        return (short)constants$3437.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void wMinorVerNum$set(MemorySegment seg, long index, short x) {
        constants$3437.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment tdescAlias$slice(MemorySegment seg) {
        return seg.asSlice(64, 16);
    }
    public static MemorySegment idldescType$slice(MemorySegment seg) {
        return seg.asSlice(80, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


