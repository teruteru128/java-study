// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     DWORD64 TotalTime;
 *     DWORD IdleTransitions;
 *     DWORD FailedTransitions;
 *     DWORD InvalidBucketIndex;
 *     DWORD MinTimeUs;
 *     DWORD MaxTimeUs;
 *     DWORD CancelledTransitions;
 *     PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
 * };
 * }
 */
public class PPM_IDLE_STATE_ACCOUNTING_EX {

    public static MemoryLayout $LAYOUT() {
        return constants$324.const$0;
    }
    public static VarHandle TotalTime$VH() {
        return constants$324.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 TotalTime;
     * }
     */
    public static long TotalTime$get(MemorySegment seg) {
        return (long)constants$324.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 TotalTime;
     * }
     */
    public static void TotalTime$set(MemorySegment seg, long x) {
        constants$324.const$1.set(seg, x);
    }
    public static long TotalTime$get(MemorySegment seg, long index) {
        return (long)constants$324.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void TotalTime$set(MemorySegment seg, long index, long x) {
        constants$324.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IdleTransitions$VH() {
        return constants$324.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD IdleTransitions;
     * }
     */
    public static int IdleTransitions$get(MemorySegment seg) {
        return (int)constants$324.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD IdleTransitions;
     * }
     */
    public static void IdleTransitions$set(MemorySegment seg, int x) {
        constants$324.const$2.set(seg, x);
    }
    public static int IdleTransitions$get(MemorySegment seg, long index) {
        return (int)constants$324.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void IdleTransitions$set(MemorySegment seg, long index, int x) {
        constants$324.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FailedTransitions$VH() {
        return constants$324.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD FailedTransitions;
     * }
     */
    public static int FailedTransitions$get(MemorySegment seg) {
        return (int)constants$324.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD FailedTransitions;
     * }
     */
    public static void FailedTransitions$set(MemorySegment seg, int x) {
        constants$324.const$3.set(seg, x);
    }
    public static int FailedTransitions$get(MemorySegment seg, long index) {
        return (int)constants$324.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void FailedTransitions$set(MemorySegment seg, long index, int x) {
        constants$324.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle InvalidBucketIndex$VH() {
        return constants$324.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD InvalidBucketIndex;
     * }
     */
    public static int InvalidBucketIndex$get(MemorySegment seg) {
        return (int)constants$324.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD InvalidBucketIndex;
     * }
     */
    public static void InvalidBucketIndex$set(MemorySegment seg, int x) {
        constants$324.const$4.set(seg, x);
    }
    public static int InvalidBucketIndex$get(MemorySegment seg, long index) {
        return (int)constants$324.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void InvalidBucketIndex$set(MemorySegment seg, long index, int x) {
        constants$324.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MinTimeUs$VH() {
        return constants$324.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MinTimeUs;
     * }
     */
    public static int MinTimeUs$get(MemorySegment seg) {
        return (int)constants$324.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MinTimeUs;
     * }
     */
    public static void MinTimeUs$set(MemorySegment seg, int x) {
        constants$324.const$5.set(seg, x);
    }
    public static int MinTimeUs$get(MemorySegment seg, long index) {
        return (int)constants$324.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MinTimeUs$set(MemorySegment seg, long index, int x) {
        constants$324.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MaxTimeUs$VH() {
        return constants$325.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MaxTimeUs;
     * }
     */
    public static int MaxTimeUs$get(MemorySegment seg) {
        return (int)constants$325.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MaxTimeUs;
     * }
     */
    public static void MaxTimeUs$set(MemorySegment seg, int x) {
        constants$325.const$0.set(seg, x);
    }
    public static int MaxTimeUs$get(MemorySegment seg, long index) {
        return (int)constants$325.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxTimeUs$set(MemorySegment seg, long index, int x) {
        constants$325.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CancelledTransitions$VH() {
        return constants$325.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD CancelledTransitions;
     * }
     */
    public static int CancelledTransitions$get(MemorySegment seg) {
        return (int)constants$325.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD CancelledTransitions;
     * }
     */
    public static void CancelledTransitions$set(MemorySegment seg, int x) {
        constants$325.const$1.set(seg, x);
    }
    public static int CancelledTransitions$get(MemorySegment seg, long index) {
        return (int)constants$325.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void CancelledTransitions$set(MemorySegment seg, long index, int x) {
        constants$325.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment IdleTimeBuckets$slice(MemorySegment seg) {
        return seg.asSlice(32, 384);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


