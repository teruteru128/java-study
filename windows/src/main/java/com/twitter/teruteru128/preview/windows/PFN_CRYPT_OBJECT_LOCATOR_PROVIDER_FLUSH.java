// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH)(void* pContext,struct _CRYPTOAPI_BLOB** rgIdentifierOrNameList,unsigned long dwIdentifierOrNameListCount);
 * }
 */
public interface PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH {

    int apply(java.lang.foreign.MemorySegment pContext, java.lang.foreign.MemorySegment rgIdentifierOrNameList, int dwIdentifierOrNameListCount);
    static MemorySegment allocate(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2241.const$4, fi, constants$570.const$5, scope);
    }
    static PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _pContext, java.lang.foreign.MemorySegment _rgIdentifierOrNameList, int _dwIdentifierOrNameListCount) -> {
            try {
                return (int)constants$779.const$5.invokeExact(symbol, _pContext, _rgIdentifierOrNameList, _dwIdentifierOrNameListCount);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


