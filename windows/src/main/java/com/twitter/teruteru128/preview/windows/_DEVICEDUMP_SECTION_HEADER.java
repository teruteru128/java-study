// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DEVICEDUMP_SECTION_HEADER {
 *     GUID guidDeviceDataId;
 *     BYTE sOrganizationID[16];
 *     DWORD dwFirmwareRevision;
 *     BYTE sModelNumber[32];
 *     BYTE szDeviceManufacturingID[32];
 *     DWORD dwFlags;
 *     DWORD bRestrictedPrivateDataVersion;
 *     DWORD dwFirmwareIssueId;
 *     BYTE szIssueDescriptionString[132];
 * };
 * }
 */
public class _DEVICEDUMP_SECTION_HEADER {

    public static MemoryLayout $LAYOUT() {
        return constants$2482.const$5;
    }
    public static MemorySegment guidDeviceDataId$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment sOrganizationID$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static VarHandle dwFirmwareRevision$VH() {
        return constants$2483.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFirmwareRevision;
     * }
     */
    public static int dwFirmwareRevision$get(MemorySegment seg) {
        return (int)constants$2483.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFirmwareRevision;
     * }
     */
    public static void dwFirmwareRevision$set(MemorySegment seg, int x) {
        constants$2483.const$0.set(seg, x);
    }
    public static int dwFirmwareRevision$get(MemorySegment seg, long index) {
        return (int)constants$2483.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFirmwareRevision$set(MemorySegment seg, long index, int x) {
        constants$2483.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment sModelNumber$slice(MemorySegment seg) {
        return seg.asSlice(36, 32);
    }
    public static MemorySegment szDeviceManufacturingID$slice(MemorySegment seg) {
        return seg.asSlice(68, 32);
    }
    public static VarHandle dwFlags$VH() {
        return constants$2483.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$2483.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$2483.const$1.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$2483.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$2483.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bRestrictedPrivateDataVersion$VH() {
        return constants$2483.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bRestrictedPrivateDataVersion;
     * }
     */
    public static int bRestrictedPrivateDataVersion$get(MemorySegment seg) {
        return (int)constants$2483.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bRestrictedPrivateDataVersion;
     * }
     */
    public static void bRestrictedPrivateDataVersion$set(MemorySegment seg, int x) {
        constants$2483.const$2.set(seg, x);
    }
    public static int bRestrictedPrivateDataVersion$get(MemorySegment seg, long index) {
        return (int)constants$2483.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void bRestrictedPrivateDataVersion$set(MemorySegment seg, long index, int x) {
        constants$2483.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFirmwareIssueId$VH() {
        return constants$2483.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFirmwareIssueId;
     * }
     */
    public static int dwFirmwareIssueId$get(MemorySegment seg) {
        return (int)constants$2483.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFirmwareIssueId;
     * }
     */
    public static void dwFirmwareIssueId$set(MemorySegment seg, int x) {
        constants$2483.const$3.set(seg, x);
    }
    public static int dwFirmwareIssueId$get(MemorySegment seg, long index) {
        return (int)constants$2483.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFirmwareIssueId$set(MemorySegment seg, long index, int x) {
        constants$2483.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szIssueDescriptionString$slice(MemorySegment seg) {
        return seg.asSlice(112, 132);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


