// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$2946 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$2946() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "DeletePrinterDriverPackageW",
        constants$37.const$3
    );
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_INT.withName("ePropertyType"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.unionLayout(
            JAVA_BYTE.withName("propertyByte"),
            RuntimeHelper.POINTER.withName("propertyString"),
            JAVA_INT.withName("propertyInt32"),
            JAVA_LONG.withName("propertyInt64"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("cbBuf"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("pBuf")
            ).withName("propertyBlob")
        ).withName("value")
    ).withName("");
    static final VarHandle const$2 = constants$2946.const$1.varHandle(MemoryLayout.PathElement.groupElement("ePropertyType"));
    static final UnionLayout const$3 = MemoryLayout.unionLayout(
        JAVA_BYTE.withName("propertyByte"),
        RuntimeHelper.POINTER.withName("propertyString"),
        JAVA_INT.withName("propertyInt32"),
        JAVA_LONG.withName("propertyInt64"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("cbBuf"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("pBuf")
        ).withName("propertyBlob")
    ).withName("");
    static final VarHandle const$4 = constants$2946.const$3.varHandle(MemoryLayout.PathElement.groupElement("propertyByte"));
    static final VarHandle const$5 = constants$2946.const$3.varHandle(MemoryLayout.PathElement.groupElement("propertyString"));
}


