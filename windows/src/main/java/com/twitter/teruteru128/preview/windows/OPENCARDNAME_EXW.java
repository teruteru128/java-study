// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     DWORD dwStructSize;
 *     SCARDCONTEXT hSCardContext;
 *     HWND hwndOwner;
 *     DWORD dwFlags;
 *     LPCWSTR lpstrTitle;
 *     LPCWSTR lpstrSearchDesc;
 *     HICON hIcon;
 *     POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
 *     LPOCNCONNPROCW lpfnConnect;
 *     LPVOID pvUserData;
 *     DWORD dwShareMode;
 *     DWORD dwPreferredProtocols;
 *     LPWSTR lpstrRdr;
 *     DWORD nMaxRdr;
 *     LPWSTR lpstrCard;
 *     DWORD nMaxCard;
 *     DWORD dwActiveProtocol;
 *     SCARDHANDLE hCardHandle;
 * };
 * }
 */
public class OPENCARDNAME_EXW {

    public static MemoryLayout $LAYOUT() {
        return constants$2766.const$2;
    }
    public static VarHandle dwStructSize$VH() {
        return constants$2769.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStructSize;
     * }
     */
    public static int dwStructSize$get(MemorySegment seg) {
        return (int)constants$2769.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStructSize;
     * }
     */
    public static void dwStructSize$set(MemorySegment seg, int x) {
        constants$2769.const$3.set(seg, x);
    }
    public static int dwStructSize$get(MemorySegment seg, long index) {
        return (int)constants$2769.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStructSize$set(MemorySegment seg, long index, int x) {
        constants$2769.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hSCardContext$VH() {
        return constants$2769.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCARDCONTEXT hSCardContext;
     * }
     */
    public static long hSCardContext$get(MemorySegment seg) {
        return (long)constants$2769.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCARDCONTEXT hSCardContext;
     * }
     */
    public static void hSCardContext$set(MemorySegment seg, long x) {
        constants$2769.const$4.set(seg, x);
    }
    public static long hSCardContext$get(MemorySegment seg, long index) {
        return (long)constants$2769.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void hSCardContext$set(MemorySegment seg, long index, long x) {
        constants$2769.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hwndOwner$VH() {
        return constants$2769.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static MemorySegment hwndOwner$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2769.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static void hwndOwner$set(MemorySegment seg, MemorySegment x) {
        constants$2769.const$5.set(seg, x);
    }
    public static MemorySegment hwndOwner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2769.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndOwner$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2769.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFlags$VH() {
        return constants$2770.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$2770.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$2770.const$0.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$2770.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$2770.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpstrTitle$VH() {
        return constants$2770.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpstrTitle;
     * }
     */
    public static MemorySegment lpstrTitle$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpstrTitle;
     * }
     */
    public static void lpstrTitle$set(MemorySegment seg, MemorySegment x) {
        constants$2770.const$1.set(seg, x);
    }
    public static MemorySegment lpstrTitle$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpstrTitle$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2770.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpstrSearchDesc$VH() {
        return constants$2770.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpstrSearchDesc;
     * }
     */
    public static MemorySegment lpstrSearchDesc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpstrSearchDesc;
     * }
     */
    public static void lpstrSearchDesc$set(MemorySegment seg, MemorySegment x) {
        constants$2770.const$2.set(seg, x);
    }
    public static MemorySegment lpstrSearchDesc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpstrSearchDesc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2770.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hIcon$VH() {
        return constants$2770.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static MemorySegment hIcon$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static void hIcon$set(MemorySegment seg, MemorySegment x) {
        constants$2770.const$3.set(seg, x);
    }
    public static MemorySegment hIcon$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void hIcon$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2770.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pOpenCardSearchCriteria$VH() {
        return constants$2770.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
     * }
     */
    public static MemorySegment pOpenCardSearchCriteria$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
     * }
     */
    public static void pOpenCardSearchCriteria$set(MemorySegment seg, MemorySegment x) {
        constants$2770.const$4.set(seg, x);
    }
    public static MemorySegment pOpenCardSearchCriteria$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pOpenCardSearchCriteria$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2770.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpfnConnect$VH() {
        return constants$2770.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPOCNCONNPROCW lpfnConnect;
     * }
     */
    public static MemorySegment lpfnConnect$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPOCNCONNPROCW lpfnConnect;
     * }
     */
    public static void lpfnConnect$set(MemorySegment seg, MemorySegment x) {
        constants$2770.const$5.set(seg, x);
    }
    public static MemorySegment lpfnConnect$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2770.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnConnect$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2770.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static LPOCNCONNPROCW lpfnConnect(MemorySegment segment, Arena scope) {
        return LPOCNCONNPROCW.ofAddress(lpfnConnect$get(segment), scope);
    }
    public static VarHandle pvUserData$VH() {
        return constants$2771.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPVOID pvUserData;
     * }
     */
    public static MemorySegment pvUserData$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPVOID pvUserData;
     * }
     */
    public static void pvUserData$set(MemorySegment seg, MemorySegment x) {
        constants$2771.const$0.set(seg, x);
    }
    public static MemorySegment pvUserData$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pvUserData$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2771.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwShareMode$VH() {
        return constants$2771.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwShareMode;
     * }
     */
    public static int dwShareMode$get(MemorySegment seg) {
        return (int)constants$2771.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwShareMode;
     * }
     */
    public static void dwShareMode$set(MemorySegment seg, int x) {
        constants$2771.const$1.set(seg, x);
    }
    public static int dwShareMode$get(MemorySegment seg, long index) {
        return (int)constants$2771.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwShareMode$set(MemorySegment seg, long index, int x) {
        constants$2771.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPreferredProtocols$VH() {
        return constants$2771.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPreferredProtocols;
     * }
     */
    public static int dwPreferredProtocols$get(MemorySegment seg) {
        return (int)constants$2771.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPreferredProtocols;
     * }
     */
    public static void dwPreferredProtocols$set(MemorySegment seg, int x) {
        constants$2771.const$2.set(seg, x);
    }
    public static int dwPreferredProtocols$get(MemorySegment seg, long index) {
        return (int)constants$2771.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPreferredProtocols$set(MemorySegment seg, long index, int x) {
        constants$2771.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpstrRdr$VH() {
        return constants$2771.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpstrRdr;
     * }
     */
    public static MemorySegment lpstrRdr$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpstrRdr;
     * }
     */
    public static void lpstrRdr$set(MemorySegment seg, MemorySegment x) {
        constants$2771.const$3.set(seg, x);
    }
    public static MemorySegment lpstrRdr$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpstrRdr$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2771.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle nMaxRdr$VH() {
        return constants$2771.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD nMaxRdr;
     * }
     */
    public static int nMaxRdr$get(MemorySegment seg) {
        return (int)constants$2771.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD nMaxRdr;
     * }
     */
    public static void nMaxRdr$set(MemorySegment seg, int x) {
        constants$2771.const$4.set(seg, x);
    }
    public static int nMaxRdr$get(MemorySegment seg, long index) {
        return (int)constants$2771.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void nMaxRdr$set(MemorySegment seg, long index, int x) {
        constants$2771.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpstrCard$VH() {
        return constants$2771.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpstrCard;
     * }
     */
    public static MemorySegment lpstrCard$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpstrCard;
     * }
     */
    public static void lpstrCard$set(MemorySegment seg, MemorySegment x) {
        constants$2771.const$5.set(seg, x);
    }
    public static MemorySegment lpstrCard$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2771.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lpstrCard$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2771.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle nMaxCard$VH() {
        return constants$2772.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD nMaxCard;
     * }
     */
    public static int nMaxCard$get(MemorySegment seg) {
        return (int)constants$2772.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD nMaxCard;
     * }
     */
    public static void nMaxCard$set(MemorySegment seg, int x) {
        constants$2772.const$0.set(seg, x);
    }
    public static int nMaxCard$get(MemorySegment seg, long index) {
        return (int)constants$2772.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void nMaxCard$set(MemorySegment seg, long index, int x) {
        constants$2772.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwActiveProtocol$VH() {
        return constants$2772.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwActiveProtocol;
     * }
     */
    public static int dwActiveProtocol$get(MemorySegment seg) {
        return (int)constants$2772.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwActiveProtocol;
     * }
     */
    public static void dwActiveProtocol$set(MemorySegment seg, int x) {
        constants$2772.const$1.set(seg, x);
    }
    public static int dwActiveProtocol$get(MemorySegment seg, long index) {
        return (int)constants$2772.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwActiveProtocol$set(MemorySegment seg, long index, int x) {
        constants$2772.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hCardHandle$VH() {
        return constants$2772.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCARDHANDLE hCardHandle;
     * }
     */
    public static long hCardHandle$get(MemorySegment seg) {
        return (long)constants$2772.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCARDHANDLE hCardHandle;
     * }
     */
    public static void hCardHandle$set(MemorySegment seg, long x) {
        constants$2772.const$2.set(seg, x);
    }
    public static long hCardHandle$get(MemorySegment seg, long index) {
        return (long)constants$2772.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void hCardHandle$set(MemorySegment seg, long index, long x) {
        constants$2772.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


