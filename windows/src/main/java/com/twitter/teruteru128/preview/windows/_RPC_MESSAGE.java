// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _RPC_MESSAGE {
 *     RPC_BINDING_HANDLE Handle;
 *     unsigned long DataRepresentation;
 *     void* Buffer;
 *     unsigned int BufferLength;
 *     unsigned int ProcNum;
 *     PRPC_SYNTAX_IDENTIFIER TransferSyntax;
 *     void* RpcInterfaceInformation;
 *     void* ReservedForRuntime;
 *     void* ManagerEpv;
 *     void* ImportContext;
 *     unsigned long RpcFlags;
 * };
 * }
 */
public class _RPC_MESSAGE {

    public static MemoryLayout $LAYOUT() {
        return constants$1779.const$4;
    }
    public static VarHandle Handle$VH() {
        return constants$1779.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * RPC_BINDING_HANDLE Handle;
     * }
     */
    public static MemorySegment Handle$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1779.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * RPC_BINDING_HANDLE Handle;
     * }
     */
    public static void Handle$set(MemorySegment seg, MemorySegment x) {
        constants$1779.const$5.set(seg, x);
    }
    public static MemorySegment Handle$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1779.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Handle$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1779.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DataRepresentation$VH() {
        return constants$1780.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long DataRepresentation;
     * }
     */
    public static int DataRepresentation$get(MemorySegment seg) {
        return (int)constants$1780.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long DataRepresentation;
     * }
     */
    public static void DataRepresentation$set(MemorySegment seg, int x) {
        constants$1780.const$0.set(seg, x);
    }
    public static int DataRepresentation$get(MemorySegment seg, long index) {
        return (int)constants$1780.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void DataRepresentation$set(MemorySegment seg, long index, int x) {
        constants$1780.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Buffer$VH() {
        return constants$1780.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* Buffer;
     * }
     */
    public static MemorySegment Buffer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* Buffer;
     * }
     */
    public static void Buffer$set(MemorySegment seg, MemorySegment x) {
        constants$1780.const$1.set(seg, x);
    }
    public static MemorySegment Buffer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Buffer$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1780.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BufferLength$VH() {
        return constants$1780.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int BufferLength;
     * }
     */
    public static int BufferLength$get(MemorySegment seg) {
        return (int)constants$1780.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int BufferLength;
     * }
     */
    public static void BufferLength$set(MemorySegment seg, int x) {
        constants$1780.const$2.set(seg, x);
    }
    public static int BufferLength$get(MemorySegment seg, long index) {
        return (int)constants$1780.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void BufferLength$set(MemorySegment seg, long index, int x) {
        constants$1780.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ProcNum$VH() {
        return constants$1780.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int ProcNum;
     * }
     */
    public static int ProcNum$get(MemorySegment seg) {
        return (int)constants$1780.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int ProcNum;
     * }
     */
    public static void ProcNum$set(MemorySegment seg, int x) {
        constants$1780.const$3.set(seg, x);
    }
    public static int ProcNum$get(MemorySegment seg, long index) {
        return (int)constants$1780.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ProcNum$set(MemorySegment seg, long index, int x) {
        constants$1780.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TransferSyntax$VH() {
        return constants$1780.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PRPC_SYNTAX_IDENTIFIER TransferSyntax;
     * }
     */
    public static MemorySegment TransferSyntax$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PRPC_SYNTAX_IDENTIFIER TransferSyntax;
     * }
     */
    public static void TransferSyntax$set(MemorySegment seg, MemorySegment x) {
        constants$1780.const$4.set(seg, x);
    }
    public static MemorySegment TransferSyntax$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void TransferSyntax$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1780.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RpcInterfaceInformation$VH() {
        return constants$1780.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* RpcInterfaceInformation;
     * }
     */
    public static MemorySegment RpcInterfaceInformation$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* RpcInterfaceInformation;
     * }
     */
    public static void RpcInterfaceInformation$set(MemorySegment seg, MemorySegment x) {
        constants$1780.const$5.set(seg, x);
    }
    public static MemorySegment RpcInterfaceInformation$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1780.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcInterfaceInformation$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1780.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ReservedForRuntime$VH() {
        return constants$1781.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* ReservedForRuntime;
     * }
     */
    public static MemorySegment ReservedForRuntime$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* ReservedForRuntime;
     * }
     */
    public static void ReservedForRuntime$set(MemorySegment seg, MemorySegment x) {
        constants$1781.const$0.set(seg, x);
    }
    public static MemorySegment ReservedForRuntime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ReservedForRuntime$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1781.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ManagerEpv$VH() {
        return constants$1781.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* ManagerEpv;
     * }
     */
    public static MemorySegment ManagerEpv$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* ManagerEpv;
     * }
     */
    public static void ManagerEpv$set(MemorySegment seg, MemorySegment x) {
        constants$1781.const$1.set(seg, x);
    }
    public static MemorySegment ManagerEpv$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ManagerEpv$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1781.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ImportContext$VH() {
        return constants$1781.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* ImportContext;
     * }
     */
    public static MemorySegment ImportContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* ImportContext;
     * }
     */
    public static void ImportContext$set(MemorySegment seg, MemorySegment x) {
        constants$1781.const$2.set(seg, x);
    }
    public static MemorySegment ImportContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1781.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ImportContext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1781.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RpcFlags$VH() {
        return constants$1781.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long RpcFlags;
     * }
     */
    public static int RpcFlags$get(MemorySegment seg) {
        return (int)constants$1781.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long RpcFlags;
     * }
     */
    public static void RpcFlags$set(MemorySegment seg, int x) {
        constants$1781.const$3.set(seg, x);
    }
    public static int RpcFlags$get(MemorySegment seg, long index) {
        return (int)constants$1781.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcFlags$set(MemorySegment seg, long index, int x) {
        constants$1781.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


