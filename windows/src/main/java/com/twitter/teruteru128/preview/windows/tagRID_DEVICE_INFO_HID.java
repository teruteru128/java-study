// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagRID_DEVICE_INFO_HID {
 *     DWORD dwVendorId;
 *     DWORD dwProductId;
 *     DWORD dwVersionNumber;
 *     USHORT usUsagePage;
 *     USHORT usUsage;
 * };
 * }
 */
public class tagRID_DEVICE_INFO_HID {

    public static MemoryLayout $LAYOUT() {
        return constants$1391.const$4;
    }
    public static VarHandle dwVendorId$VH() {
        return constants$1391.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVendorId;
     * }
     */
    public static int dwVendorId$get(MemorySegment seg) {
        return (int)constants$1391.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVendorId;
     * }
     */
    public static void dwVendorId$set(MemorySegment seg, int x) {
        constants$1391.const$5.set(seg, x);
    }
    public static int dwVendorId$get(MemorySegment seg, long index) {
        return (int)constants$1391.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVendorId$set(MemorySegment seg, long index, int x) {
        constants$1391.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProductId$VH() {
        return constants$1392.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProductId;
     * }
     */
    public static int dwProductId$get(MemorySegment seg) {
        return (int)constants$1392.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProductId;
     * }
     */
    public static void dwProductId$set(MemorySegment seg, int x) {
        constants$1392.const$0.set(seg, x);
    }
    public static int dwProductId$get(MemorySegment seg, long index) {
        return (int)constants$1392.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProductId$set(MemorySegment seg, long index, int x) {
        constants$1392.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwVersionNumber$VH() {
        return constants$1392.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVersionNumber;
     * }
     */
    public static int dwVersionNumber$get(MemorySegment seg) {
        return (int)constants$1392.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVersionNumber;
     * }
     */
    public static void dwVersionNumber$set(MemorySegment seg, int x) {
        constants$1392.const$1.set(seg, x);
    }
    public static int dwVersionNumber$get(MemorySegment seg, long index) {
        return (int)constants$1392.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVersionNumber$set(MemorySegment seg, long index, int x) {
        constants$1392.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle usUsagePage$VH() {
        return constants$1392.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT usUsagePage;
     * }
     */
    public static short usUsagePage$get(MemorySegment seg) {
        return (short)constants$1392.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT usUsagePage;
     * }
     */
    public static void usUsagePage$set(MemorySegment seg, short x) {
        constants$1392.const$2.set(seg, x);
    }
    public static short usUsagePage$get(MemorySegment seg, long index) {
        return (short)constants$1392.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void usUsagePage$set(MemorySegment seg, long index, short x) {
        constants$1392.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle usUsage$VH() {
        return constants$1392.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT usUsage;
     * }
     */
    public static short usUsage$get(MemorySegment seg) {
        return (short)constants$1392.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT usUsage;
     * }
     */
    public static void usUsage$set(MemorySegment seg, short x) {
        constants$1392.const$3.set(seg, x);
    }
    public static short usUsage$get(MemorySegment seg, long index) {
        return (short)constants$1392.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void usUsage$set(MemorySegment seg, long index, short x) {
        constants$1392.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


