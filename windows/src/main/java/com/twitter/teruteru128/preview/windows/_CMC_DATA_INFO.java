// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CMC_DATA_INFO {
 *     DWORD cTaggedAttribute;
 *     PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
 *     DWORD cTaggedRequest;
 *     PCMC_TAGGED_REQUEST rgTaggedRequest;
 *     DWORD cTaggedContentInfo;
 *     PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
 *     DWORD cTaggedOtherMsg;
 *     PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
 * };
 * }
 */
public class _CMC_DATA_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2049.const$3;
    }
    public static VarHandle cTaggedAttribute$VH() {
        return constants$2049.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cTaggedAttribute;
     * }
     */
    public static int cTaggedAttribute$get(MemorySegment seg) {
        return (int)constants$2049.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cTaggedAttribute;
     * }
     */
    public static void cTaggedAttribute$set(MemorySegment seg, int x) {
        constants$2049.const$4.set(seg, x);
    }
    public static int cTaggedAttribute$get(MemorySegment seg, long index) {
        return (int)constants$2049.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cTaggedAttribute$set(MemorySegment seg, long index, int x) {
        constants$2049.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgTaggedAttribute$VH() {
        return constants$2049.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
     * }
     */
    public static MemorySegment rgTaggedAttribute$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2049.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
     * }
     */
    public static void rgTaggedAttribute$set(MemorySegment seg, MemorySegment x) {
        constants$2049.const$5.set(seg, x);
    }
    public static MemorySegment rgTaggedAttribute$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2049.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void rgTaggedAttribute$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2049.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cTaggedRequest$VH() {
        return constants$2050.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cTaggedRequest;
     * }
     */
    public static int cTaggedRequest$get(MemorySegment seg) {
        return (int)constants$2050.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cTaggedRequest;
     * }
     */
    public static void cTaggedRequest$set(MemorySegment seg, int x) {
        constants$2050.const$0.set(seg, x);
    }
    public static int cTaggedRequest$get(MemorySegment seg, long index) {
        return (int)constants$2050.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cTaggedRequest$set(MemorySegment seg, long index, int x) {
        constants$2050.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgTaggedRequest$VH() {
        return constants$2050.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMC_TAGGED_REQUEST rgTaggedRequest;
     * }
     */
    public static MemorySegment rgTaggedRequest$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMC_TAGGED_REQUEST rgTaggedRequest;
     * }
     */
    public static void rgTaggedRequest$set(MemorySegment seg, MemorySegment x) {
        constants$2050.const$1.set(seg, x);
    }
    public static MemorySegment rgTaggedRequest$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void rgTaggedRequest$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2050.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cTaggedContentInfo$VH() {
        return constants$2050.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cTaggedContentInfo;
     * }
     */
    public static int cTaggedContentInfo$get(MemorySegment seg) {
        return (int)constants$2050.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cTaggedContentInfo;
     * }
     */
    public static void cTaggedContentInfo$set(MemorySegment seg, int x) {
        constants$2050.const$2.set(seg, x);
    }
    public static int cTaggedContentInfo$get(MemorySegment seg, long index) {
        return (int)constants$2050.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cTaggedContentInfo$set(MemorySegment seg, long index, int x) {
        constants$2050.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgTaggedContentInfo$VH() {
        return constants$2050.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
     * }
     */
    public static MemorySegment rgTaggedContentInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
     * }
     */
    public static void rgTaggedContentInfo$set(MemorySegment seg, MemorySegment x) {
        constants$2050.const$3.set(seg, x);
    }
    public static MemorySegment rgTaggedContentInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void rgTaggedContentInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2050.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cTaggedOtherMsg$VH() {
        return constants$2050.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cTaggedOtherMsg;
     * }
     */
    public static int cTaggedOtherMsg$get(MemorySegment seg) {
        return (int)constants$2050.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cTaggedOtherMsg;
     * }
     */
    public static void cTaggedOtherMsg$set(MemorySegment seg, int x) {
        constants$2050.const$4.set(seg, x);
    }
    public static int cTaggedOtherMsg$get(MemorySegment seg, long index) {
        return (int)constants$2050.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cTaggedOtherMsg$set(MemorySegment seg, long index, int x) {
        constants$2050.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgTaggedOtherMsg$VH() {
        return constants$2050.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
     * }
     */
    public static MemorySegment rgTaggedOtherMsg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
     * }
     */
    public static void rgTaggedOtherMsg$set(MemorySegment seg, MemorySegment x) {
        constants$2050.const$5.set(seg, x);
    }
    public static MemorySegment rgTaggedOtherMsg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2050.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void rgTaggedOtherMsg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2050.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


