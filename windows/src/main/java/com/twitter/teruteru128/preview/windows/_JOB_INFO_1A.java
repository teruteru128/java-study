// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _JOB_INFO_1A {
 *     DWORD JobId;
 *     LPSTR pPrinterName;
 *     LPSTR pMachineName;
 *     LPSTR pUserName;
 *     LPSTR pDocument;
 *     LPSTR pDatatype;
 *     LPSTR pStatus;
 *     DWORD Status;
 *     DWORD Priority;
 *     DWORD Position;
 *     DWORD TotalPages;
 *     DWORD PagesPrinted;
 *     SYSTEMTIME Submitted;
 * };
 * }
 */
public class _JOB_INFO_1A {

    public static MemoryLayout $LAYOUT() {
        return constants$2836.const$0;
    }
    public static VarHandle JobId$VH() {
        return constants$2836.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD JobId;
     * }
     */
    public static int JobId$get(MemorySegment seg) {
        return (int)constants$2836.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD JobId;
     * }
     */
    public static void JobId$set(MemorySegment seg, int x) {
        constants$2836.const$1.set(seg, x);
    }
    public static int JobId$get(MemorySegment seg, long index) {
        return (int)constants$2836.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void JobId$set(MemorySegment seg, long index, int x) {
        constants$2836.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pPrinterName$VH() {
        return constants$2836.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pPrinterName;
     * }
     */
    public static MemorySegment pPrinterName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pPrinterName;
     * }
     */
    public static void pPrinterName$set(MemorySegment seg, MemorySegment x) {
        constants$2836.const$2.set(seg, x);
    }
    public static MemorySegment pPrinterName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pPrinterName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2836.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMachineName$VH() {
        return constants$2836.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pMachineName;
     * }
     */
    public static MemorySegment pMachineName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pMachineName;
     * }
     */
    public static void pMachineName$set(MemorySegment seg, MemorySegment x) {
        constants$2836.const$3.set(seg, x);
    }
    public static MemorySegment pMachineName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pMachineName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2836.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pUserName$VH() {
        return constants$2836.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pUserName;
     * }
     */
    public static MemorySegment pUserName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pUserName;
     * }
     */
    public static void pUserName$set(MemorySegment seg, MemorySegment x) {
        constants$2836.const$4.set(seg, x);
    }
    public static MemorySegment pUserName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pUserName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2836.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDocument$VH() {
        return constants$2836.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pDocument;
     * }
     */
    public static MemorySegment pDocument$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pDocument;
     * }
     */
    public static void pDocument$set(MemorySegment seg, MemorySegment x) {
        constants$2836.const$5.set(seg, x);
    }
    public static MemorySegment pDocument$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2836.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pDocument$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2836.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pDatatype$VH() {
        return constants$2837.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pDatatype;
     * }
     */
    public static MemorySegment pDatatype$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2837.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pDatatype;
     * }
     */
    public static void pDatatype$set(MemorySegment seg, MemorySegment x) {
        constants$2837.const$0.set(seg, x);
    }
    public static MemorySegment pDatatype$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2837.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pDatatype$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2837.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pStatus$VH() {
        return constants$2837.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pStatus;
     * }
     */
    public static MemorySegment pStatus$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2837.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pStatus;
     * }
     */
    public static void pStatus$set(MemorySegment seg, MemorySegment x) {
        constants$2837.const$1.set(seg, x);
    }
    public static MemorySegment pStatus$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2837.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pStatus$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2837.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Status$VH() {
        return constants$2837.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Status;
     * }
     */
    public static int Status$get(MemorySegment seg) {
        return (int)constants$2837.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Status;
     * }
     */
    public static void Status$set(MemorySegment seg, int x) {
        constants$2837.const$2.set(seg, x);
    }
    public static int Status$get(MemorySegment seg, long index) {
        return (int)constants$2837.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Status$set(MemorySegment seg, long index, int x) {
        constants$2837.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Priority$VH() {
        return constants$2837.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Priority;
     * }
     */
    public static int Priority$get(MemorySegment seg) {
        return (int)constants$2837.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Priority;
     * }
     */
    public static void Priority$set(MemorySegment seg, int x) {
        constants$2837.const$3.set(seg, x);
    }
    public static int Priority$get(MemorySegment seg, long index) {
        return (int)constants$2837.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Priority$set(MemorySegment seg, long index, int x) {
        constants$2837.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Position$VH() {
        return constants$2837.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Position;
     * }
     */
    public static int Position$get(MemorySegment seg) {
        return (int)constants$2837.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Position;
     * }
     */
    public static void Position$set(MemorySegment seg, int x) {
        constants$2837.const$4.set(seg, x);
    }
    public static int Position$get(MemorySegment seg, long index) {
        return (int)constants$2837.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Position$set(MemorySegment seg, long index, int x) {
        constants$2837.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TotalPages$VH() {
        return constants$2837.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TotalPages;
     * }
     */
    public static int TotalPages$get(MemorySegment seg) {
        return (int)constants$2837.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TotalPages;
     * }
     */
    public static void TotalPages$set(MemorySegment seg, int x) {
        constants$2837.const$5.set(seg, x);
    }
    public static int TotalPages$get(MemorySegment seg, long index) {
        return (int)constants$2837.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void TotalPages$set(MemorySegment seg, long index, int x) {
        constants$2837.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PagesPrinted$VH() {
        return constants$2838.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD PagesPrinted;
     * }
     */
    public static int PagesPrinted$get(MemorySegment seg) {
        return (int)constants$2838.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD PagesPrinted;
     * }
     */
    public static void PagesPrinted$set(MemorySegment seg, int x) {
        constants$2838.const$0.set(seg, x);
    }
    public static int PagesPrinted$get(MemorySegment seg, long index) {
        return (int)constants$2838.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void PagesPrinted$set(MemorySegment seg, long index, int x) {
        constants$2838.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Submitted$slice(MemorySegment seg) {
        return seg.asSlice(76, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


