// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMENUBARINFO {
 *     DWORD cbSize;
 *     RECT rcBar;
 *     HMENU hMenu;
 *     HWND hwndMenu;
 *      *     BOOL fBarFocused;
 *     BOOL fFocused;
 *     BOOL fUnused;
 * };
 * }
 */
public class tagMENUBARINFO {

    public static MemoryLayout $LAYOUT() {
        return constants$1378.const$4;
    }
    public static VarHandle cbSize$VH() {
        return constants$1378.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$1378.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$1378.const$5.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$1378.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$1378.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment rcBar$slice(MemorySegment seg) {
        return seg.asSlice(4, 16);
    }
    public static VarHandle hMenu$VH() {
        return constants$1379.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HMENU hMenu;
     * }
     */
    public static MemorySegment hMenu$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1379.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HMENU hMenu;
     * }
     */
    public static void hMenu$set(MemorySegment seg, MemorySegment x) {
        constants$1379.const$0.set(seg, x);
    }
    public static MemorySegment hMenu$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1379.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hMenu$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1379.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hwndMenu$VH() {
        return constants$1379.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndMenu;
     * }
     */
    public static MemorySegment hwndMenu$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1379.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndMenu;
     * }
     */
    public static void hwndMenu$set(MemorySegment seg, MemorySegment x) {
        constants$1379.const$1.set(seg, x);
    }
    public static MemorySegment hwndMenu$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1379.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndMenu$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1379.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


