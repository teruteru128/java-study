// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagEMRTRANSPARENTBLT {
 *     EMR emr;
 *     RECTL rclBounds;
 *     LONG xDest;
 *     LONG yDest;
 *     LONG cxDest;
 *     LONG cyDest;
 *     DWORD dwRop;
 *     LONG xSrc;
 *     LONG ySrc;
 *     XFORM xformSrc;
 *     COLORREF crBkColorSrc;
 *     DWORD iUsageSrc;
 *     DWORD offBmiSrc;
 *     DWORD cbBmiSrc;
 *     DWORD offBitsSrc;
 *     DWORD cbBitsSrc;
 *     LONG cxSrc;
 *     LONG cySrc;
 * };
 * }
 */
public class tagEMRTRANSPARENTBLT {

    public static MemoryLayout $LAYOUT() {
        return constants$1119.const$3;
    }
    public static MemorySegment emr$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static MemorySegment rclBounds$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static VarHandle xDest$VH() {
        return constants$1119.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG xDest;
     * }
     */
    public static int xDest$get(MemorySegment seg) {
        return (int)constants$1119.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG xDest;
     * }
     */
    public static void xDest$set(MemorySegment seg, int x) {
        constants$1119.const$4.set(seg, x);
    }
    public static int xDest$get(MemorySegment seg, long index) {
        return (int)constants$1119.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void xDest$set(MemorySegment seg, long index, int x) {
        constants$1119.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle yDest$VH() {
        return constants$1119.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG yDest;
     * }
     */
    public static int yDest$get(MemorySegment seg) {
        return (int)constants$1119.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG yDest;
     * }
     */
    public static void yDest$set(MemorySegment seg, int x) {
        constants$1119.const$5.set(seg, x);
    }
    public static int yDest$get(MemorySegment seg, long index) {
        return (int)constants$1119.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void yDest$set(MemorySegment seg, long index, int x) {
        constants$1119.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cxDest$VH() {
        return constants$1120.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG cxDest;
     * }
     */
    public static int cxDest$get(MemorySegment seg) {
        return (int)constants$1120.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG cxDest;
     * }
     */
    public static void cxDest$set(MemorySegment seg, int x) {
        constants$1120.const$0.set(seg, x);
    }
    public static int cxDest$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cxDest$set(MemorySegment seg, long index, int x) {
        constants$1120.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cyDest$VH() {
        return constants$1120.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG cyDest;
     * }
     */
    public static int cyDest$get(MemorySegment seg) {
        return (int)constants$1120.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG cyDest;
     * }
     */
    public static void cyDest$set(MemorySegment seg, int x) {
        constants$1120.const$1.set(seg, x);
    }
    public static int cyDest$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cyDest$set(MemorySegment seg, long index, int x) {
        constants$1120.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwRop$VH() {
        return constants$1120.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwRop;
     * }
     */
    public static int dwRop$get(MemorySegment seg) {
        return (int)constants$1120.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwRop;
     * }
     */
    public static void dwRop$set(MemorySegment seg, int x) {
        constants$1120.const$2.set(seg, x);
    }
    public static int dwRop$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwRop$set(MemorySegment seg, long index, int x) {
        constants$1120.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle xSrc$VH() {
        return constants$1120.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG xSrc;
     * }
     */
    public static int xSrc$get(MemorySegment seg) {
        return (int)constants$1120.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG xSrc;
     * }
     */
    public static void xSrc$set(MemorySegment seg, int x) {
        constants$1120.const$3.set(seg, x);
    }
    public static int xSrc$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void xSrc$set(MemorySegment seg, long index, int x) {
        constants$1120.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ySrc$VH() {
        return constants$1120.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG ySrc;
     * }
     */
    public static int ySrc$get(MemorySegment seg) {
        return (int)constants$1120.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG ySrc;
     * }
     */
    public static void ySrc$set(MemorySegment seg, int x) {
        constants$1120.const$4.set(seg, x);
    }
    public static int ySrc$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ySrc$set(MemorySegment seg, long index, int x) {
        constants$1120.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment xformSrc$slice(MemorySegment seg) {
        return seg.asSlice(52, 24);
    }
    public static VarHandle crBkColorSrc$VH() {
        return constants$1120.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * COLORREF crBkColorSrc;
     * }
     */
    public static int crBkColorSrc$get(MemorySegment seg) {
        return (int)constants$1120.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * COLORREF crBkColorSrc;
     * }
     */
    public static void crBkColorSrc$set(MemorySegment seg, int x) {
        constants$1120.const$5.set(seg, x);
    }
    public static int crBkColorSrc$get(MemorySegment seg, long index) {
        return (int)constants$1120.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void crBkColorSrc$set(MemorySegment seg, long index, int x) {
        constants$1120.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iUsageSrc$VH() {
        return constants$1121.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD iUsageSrc;
     * }
     */
    public static int iUsageSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD iUsageSrc;
     * }
     */
    public static void iUsageSrc$set(MemorySegment seg, int x) {
        constants$1121.const$0.set(seg, x);
    }
    public static int iUsageSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void iUsageSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offBmiSrc$VH() {
        return constants$1121.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD offBmiSrc;
     * }
     */
    public static int offBmiSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD offBmiSrc;
     * }
     */
    public static void offBmiSrc$set(MemorySegment seg, int x) {
        constants$1121.const$1.set(seg, x);
    }
    public static int offBmiSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void offBmiSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbBmiSrc$VH() {
        return constants$1121.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbBmiSrc;
     * }
     */
    public static int cbBmiSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbBmiSrc;
     * }
     */
    public static void cbBmiSrc$set(MemorySegment seg, int x) {
        constants$1121.const$2.set(seg, x);
    }
    public static int cbBmiSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbBmiSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offBitsSrc$VH() {
        return constants$1121.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD offBitsSrc;
     * }
     */
    public static int offBitsSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD offBitsSrc;
     * }
     */
    public static void offBitsSrc$set(MemorySegment seg, int x) {
        constants$1121.const$3.set(seg, x);
    }
    public static int offBitsSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void offBitsSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbBitsSrc$VH() {
        return constants$1121.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbBitsSrc;
     * }
     */
    public static int cbBitsSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbBitsSrc;
     * }
     */
    public static void cbBitsSrc$set(MemorySegment seg, int x) {
        constants$1121.const$4.set(seg, x);
    }
    public static int cbBitsSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cbBitsSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cxSrc$VH() {
        return constants$1121.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG cxSrc;
     * }
     */
    public static int cxSrc$get(MemorySegment seg) {
        return (int)constants$1121.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG cxSrc;
     * }
     */
    public static void cxSrc$set(MemorySegment seg, int x) {
        constants$1121.const$5.set(seg, x);
    }
    public static int cxSrc$get(MemorySegment seg, long index) {
        return (int)constants$1121.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cxSrc$set(MemorySegment seg, long index, int x) {
        constants$1121.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cySrc$VH() {
        return constants$1122.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG cySrc;
     * }
     */
    public static int cySrc$get(MemorySegment seg) {
        return (int)constants$1122.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG cySrc;
     * }
     */
    public static void cySrc$set(MemorySegment seg, int x) {
        constants$1122.const$0.set(seg, x);
    }
    public static int cySrc$get(MemorySegment seg, long index) {
        return (int)constants$1122.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cySrc$set(MemorySegment seg, long index, int x) {
        constants$1122.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


