// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _TXFS_QUERY_RM_INFORMATION {
 *     DWORD BytesRequired;
 *     DWORDLONG TailLsn;
 *     DWORDLONG CurrentLsn;
 *     DWORDLONG ArchiveTailLsn;
 *     DWORDLONG LogContainerSize;
 *     LARGE_INTEGER HighestVirtualClock;
 *     DWORD LogContainerCount;
 *     DWORD LogContainerCountMax;
 *     DWORD LogContainerCountMin;
 *     DWORD LogGrowthIncrement;
 *     DWORD LogAutoShrinkPercentage;
 *     DWORD Flags;
 *     WORD LoggingMode;
 *     WORD Reserved;
 *     DWORD RmState;
 *     DWORDLONG LogCapacity;
 *     DWORDLONG LogFree;
 *     DWORDLONG TopsSize;
 *     DWORDLONG TopsUsed;
 *     DWORDLONG TransactionCount;
 *     DWORDLONG OnePCCount;
 *     DWORDLONG TwoPCCount;
 *     DWORDLONG NumberLogFileFull;
 *     DWORDLONG OldestTransactionAge;
 *     GUID RMName;
 *     DWORD TmLogPathOffset;
 * };
 * }
 */
public class _TXFS_QUERY_RM_INFORMATION {

    public static MemoryLayout $LAYOUT() {
        return constants$2648.const$2;
    }
    public static VarHandle BytesRequired$VH() {
        return constants$2648.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD BytesRequired;
     * }
     */
    public static int BytesRequired$get(MemorySegment seg) {
        return (int)constants$2648.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD BytesRequired;
     * }
     */
    public static void BytesRequired$set(MemorySegment seg, int x) {
        constants$2648.const$3.set(seg, x);
    }
    public static int BytesRequired$get(MemorySegment seg, long index) {
        return (int)constants$2648.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void BytesRequired$set(MemorySegment seg, long index, int x) {
        constants$2648.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TailLsn$VH() {
        return constants$2648.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG TailLsn;
     * }
     */
    public static long TailLsn$get(MemorySegment seg) {
        return (long)constants$2648.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG TailLsn;
     * }
     */
    public static void TailLsn$set(MemorySegment seg, long x) {
        constants$2648.const$4.set(seg, x);
    }
    public static long TailLsn$get(MemorySegment seg, long index) {
        return (long)constants$2648.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void TailLsn$set(MemorySegment seg, long index, long x) {
        constants$2648.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CurrentLsn$VH() {
        return constants$2648.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG CurrentLsn;
     * }
     */
    public static long CurrentLsn$get(MemorySegment seg) {
        return (long)constants$2648.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG CurrentLsn;
     * }
     */
    public static void CurrentLsn$set(MemorySegment seg, long x) {
        constants$2648.const$5.set(seg, x);
    }
    public static long CurrentLsn$get(MemorySegment seg, long index) {
        return (long)constants$2648.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void CurrentLsn$set(MemorySegment seg, long index, long x) {
        constants$2648.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ArchiveTailLsn$VH() {
        return constants$2649.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG ArchiveTailLsn;
     * }
     */
    public static long ArchiveTailLsn$get(MemorySegment seg) {
        return (long)constants$2649.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG ArchiveTailLsn;
     * }
     */
    public static void ArchiveTailLsn$set(MemorySegment seg, long x) {
        constants$2649.const$0.set(seg, x);
    }
    public static long ArchiveTailLsn$get(MemorySegment seg, long index) {
        return (long)constants$2649.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ArchiveTailLsn$set(MemorySegment seg, long index, long x) {
        constants$2649.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogContainerSize$VH() {
        return constants$2649.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogContainerSize;
     * }
     */
    public static long LogContainerSize$get(MemorySegment seg) {
        return (long)constants$2649.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogContainerSize;
     * }
     */
    public static void LogContainerSize$set(MemorySegment seg, long x) {
        constants$2649.const$1.set(seg, x);
    }
    public static long LogContainerSize$get(MemorySegment seg, long index) {
        return (long)constants$2649.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void LogContainerSize$set(MemorySegment seg, long index, long x) {
        constants$2649.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment HighestVirtualClock$slice(MemorySegment seg) {
        return seg.asSlice(40, 8);
    }
    public static VarHandle LogContainerCount$VH() {
        return constants$2649.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogContainerCount;
     * }
     */
    public static int LogContainerCount$get(MemorySegment seg) {
        return (int)constants$2649.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogContainerCount;
     * }
     */
    public static void LogContainerCount$set(MemorySegment seg, int x) {
        constants$2649.const$2.set(seg, x);
    }
    public static int LogContainerCount$get(MemorySegment seg, long index) {
        return (int)constants$2649.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void LogContainerCount$set(MemorySegment seg, long index, int x) {
        constants$2649.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogContainerCountMax$VH() {
        return constants$2649.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogContainerCountMax;
     * }
     */
    public static int LogContainerCountMax$get(MemorySegment seg) {
        return (int)constants$2649.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogContainerCountMax;
     * }
     */
    public static void LogContainerCountMax$set(MemorySegment seg, int x) {
        constants$2649.const$3.set(seg, x);
    }
    public static int LogContainerCountMax$get(MemorySegment seg, long index) {
        return (int)constants$2649.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void LogContainerCountMax$set(MemorySegment seg, long index, int x) {
        constants$2649.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogContainerCountMin$VH() {
        return constants$2649.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogContainerCountMin;
     * }
     */
    public static int LogContainerCountMin$get(MemorySegment seg) {
        return (int)constants$2649.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogContainerCountMin;
     * }
     */
    public static void LogContainerCountMin$set(MemorySegment seg, int x) {
        constants$2649.const$4.set(seg, x);
    }
    public static int LogContainerCountMin$get(MemorySegment seg, long index) {
        return (int)constants$2649.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void LogContainerCountMin$set(MemorySegment seg, long index, int x) {
        constants$2649.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogGrowthIncrement$VH() {
        return constants$2649.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogGrowthIncrement;
     * }
     */
    public static int LogGrowthIncrement$get(MemorySegment seg) {
        return (int)constants$2649.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogGrowthIncrement;
     * }
     */
    public static void LogGrowthIncrement$set(MemorySegment seg, int x) {
        constants$2649.const$5.set(seg, x);
    }
    public static int LogGrowthIncrement$get(MemorySegment seg, long index) {
        return (int)constants$2649.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void LogGrowthIncrement$set(MemorySegment seg, long index, int x) {
        constants$2649.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogAutoShrinkPercentage$VH() {
        return constants$2650.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogAutoShrinkPercentage;
     * }
     */
    public static int LogAutoShrinkPercentage$get(MemorySegment seg) {
        return (int)constants$2650.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogAutoShrinkPercentage;
     * }
     */
    public static void LogAutoShrinkPercentage$set(MemorySegment seg, int x) {
        constants$2650.const$0.set(seg, x);
    }
    public static int LogAutoShrinkPercentage$get(MemorySegment seg, long index) {
        return (int)constants$2650.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void LogAutoShrinkPercentage$set(MemorySegment seg, long index, int x) {
        constants$2650.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$2650.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$2650.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$2650.const$1.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$2650.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$2650.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LoggingMode$VH() {
        return constants$2650.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD LoggingMode;
     * }
     */
    public static short LoggingMode$get(MemorySegment seg) {
        return (short)constants$2650.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD LoggingMode;
     * }
     */
    public static void LoggingMode$set(MemorySegment seg, short x) {
        constants$2650.const$2.set(seg, x);
    }
    public static short LoggingMode$get(MemorySegment seg, long index) {
        return (short)constants$2650.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void LoggingMode$set(MemorySegment seg, long index, short x) {
        constants$2650.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved$VH() {
        return constants$2650.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static short Reserved$get(MemorySegment seg) {
        return (short)constants$2650.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, short x) {
        constants$2650.const$3.set(seg, x);
    }
    public static short Reserved$get(MemorySegment seg, long index) {
        return (short)constants$2650.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, short x) {
        constants$2650.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RmState$VH() {
        return constants$2650.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD RmState;
     * }
     */
    public static int RmState$get(MemorySegment seg) {
        return (int)constants$2650.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD RmState;
     * }
     */
    public static void RmState$set(MemorySegment seg, int x) {
        constants$2650.const$4.set(seg, x);
    }
    public static int RmState$get(MemorySegment seg, long index) {
        return (int)constants$2650.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void RmState$set(MemorySegment seg, long index, int x) {
        constants$2650.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogCapacity$VH() {
        return constants$2650.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogCapacity;
     * }
     */
    public static long LogCapacity$get(MemorySegment seg) {
        return (long)constants$2650.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogCapacity;
     * }
     */
    public static void LogCapacity$set(MemorySegment seg, long x) {
        constants$2650.const$5.set(seg, x);
    }
    public static long LogCapacity$get(MemorySegment seg, long index) {
        return (long)constants$2650.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void LogCapacity$set(MemorySegment seg, long index, long x) {
        constants$2650.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogFree$VH() {
        return constants$2651.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogFree;
     * }
     */
    public static long LogFree$get(MemorySegment seg) {
        return (long)constants$2651.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogFree;
     * }
     */
    public static void LogFree$set(MemorySegment seg, long x) {
        constants$2651.const$0.set(seg, x);
    }
    public static long LogFree$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFree$set(MemorySegment seg, long index, long x) {
        constants$2651.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TopsSize$VH() {
        return constants$2651.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG TopsSize;
     * }
     */
    public static long TopsSize$get(MemorySegment seg) {
        return (long)constants$2651.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG TopsSize;
     * }
     */
    public static void TopsSize$set(MemorySegment seg, long x) {
        constants$2651.const$1.set(seg, x);
    }
    public static long TopsSize$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void TopsSize$set(MemorySegment seg, long index, long x) {
        constants$2651.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TopsUsed$VH() {
        return constants$2651.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG TopsUsed;
     * }
     */
    public static long TopsUsed$get(MemorySegment seg) {
        return (long)constants$2651.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG TopsUsed;
     * }
     */
    public static void TopsUsed$set(MemorySegment seg, long x) {
        constants$2651.const$2.set(seg, x);
    }
    public static long TopsUsed$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void TopsUsed$set(MemorySegment seg, long index, long x) {
        constants$2651.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TransactionCount$VH() {
        return constants$2651.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG TransactionCount;
     * }
     */
    public static long TransactionCount$get(MemorySegment seg) {
        return (long)constants$2651.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG TransactionCount;
     * }
     */
    public static void TransactionCount$set(MemorySegment seg, long x) {
        constants$2651.const$3.set(seg, x);
    }
    public static long TransactionCount$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void TransactionCount$set(MemorySegment seg, long index, long x) {
        constants$2651.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OnePCCount$VH() {
        return constants$2651.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG OnePCCount;
     * }
     */
    public static long OnePCCount$get(MemorySegment seg) {
        return (long)constants$2651.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG OnePCCount;
     * }
     */
    public static void OnePCCount$set(MemorySegment seg, long x) {
        constants$2651.const$4.set(seg, x);
    }
    public static long OnePCCount$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void OnePCCount$set(MemorySegment seg, long index, long x) {
        constants$2651.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TwoPCCount$VH() {
        return constants$2651.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG TwoPCCount;
     * }
     */
    public static long TwoPCCount$get(MemorySegment seg) {
        return (long)constants$2651.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG TwoPCCount;
     * }
     */
    public static void TwoPCCount$set(MemorySegment seg, long x) {
        constants$2651.const$5.set(seg, x);
    }
    public static long TwoPCCount$get(MemorySegment seg, long index) {
        return (long)constants$2651.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void TwoPCCount$set(MemorySegment seg, long index, long x) {
        constants$2651.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumberLogFileFull$VH() {
        return constants$2652.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumberLogFileFull;
     * }
     */
    public static long NumberLogFileFull$get(MemorySegment seg) {
        return (long)constants$2652.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumberLogFileFull;
     * }
     */
    public static void NumberLogFileFull$set(MemorySegment seg, long x) {
        constants$2652.const$0.set(seg, x);
    }
    public static long NumberLogFileFull$get(MemorySegment seg, long index) {
        return (long)constants$2652.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberLogFileFull$set(MemorySegment seg, long index, long x) {
        constants$2652.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OldestTransactionAge$VH() {
        return constants$2652.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG OldestTransactionAge;
     * }
     */
    public static long OldestTransactionAge$get(MemorySegment seg) {
        return (long)constants$2652.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG OldestTransactionAge;
     * }
     */
    public static void OldestTransactionAge$set(MemorySegment seg, long x) {
        constants$2652.const$1.set(seg, x);
    }
    public static long OldestTransactionAge$get(MemorySegment seg, long index) {
        return (long)constants$2652.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void OldestTransactionAge$set(MemorySegment seg, long index, long x) {
        constants$2652.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment RMName$slice(MemorySegment seg) {
        return seg.asSlice(152, 16);
    }
    public static VarHandle TmLogPathOffset$VH() {
        return constants$2652.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TmLogPathOffset;
     * }
     */
    public static int TmLogPathOffset$get(MemorySegment seg) {
        return (int)constants$2652.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TmLogPathOffset;
     * }
     */
    public static void TmLogPathOffset$set(MemorySegment seg, int x) {
        constants$2652.const$2.set(seg, x);
    }
    public static int TmLogPathOffset$get(MemorySegment seg, long index) {
        return (int)constants$2652.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void TmLogPathOffset$set(MemorySegment seg, long index, int x) {
        constants$2652.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


