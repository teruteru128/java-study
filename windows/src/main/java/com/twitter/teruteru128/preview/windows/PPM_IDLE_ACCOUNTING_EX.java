// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     DWORD StateCount;
 *     DWORD TotalTransitions;
 *     DWORD ResetCount;
 *     DWORD AbortCount;
 *     DWORD64 StartTime;
 *     PPM_IDLE_STATE_ACCOUNTING_EX State[1];
 * };
 * }
 */
public class PPM_IDLE_ACCOUNTING_EX {

    public static MemoryLayout $LAYOUT() {
        return constants$325.const$2;
    }
    public static VarHandle StateCount$VH() {
        return constants$325.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD StateCount;
     * }
     */
    public static int StateCount$get(MemorySegment seg) {
        return (int)constants$325.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD StateCount;
     * }
     */
    public static void StateCount$set(MemorySegment seg, int x) {
        constants$325.const$3.set(seg, x);
    }
    public static int StateCount$get(MemorySegment seg, long index) {
        return (int)constants$325.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void StateCount$set(MemorySegment seg, long index, int x) {
        constants$325.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TotalTransitions$VH() {
        return constants$325.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TotalTransitions;
     * }
     */
    public static int TotalTransitions$get(MemorySegment seg) {
        return (int)constants$325.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TotalTransitions;
     * }
     */
    public static void TotalTransitions$set(MemorySegment seg, int x) {
        constants$325.const$4.set(seg, x);
    }
    public static int TotalTransitions$get(MemorySegment seg, long index) {
        return (int)constants$325.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void TotalTransitions$set(MemorySegment seg, long index, int x) {
        constants$325.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ResetCount$VH() {
        return constants$325.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ResetCount;
     * }
     */
    public static int ResetCount$get(MemorySegment seg) {
        return (int)constants$325.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ResetCount;
     * }
     */
    public static void ResetCount$set(MemorySegment seg, int x) {
        constants$325.const$5.set(seg, x);
    }
    public static int ResetCount$get(MemorySegment seg, long index) {
        return (int)constants$325.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ResetCount$set(MemorySegment seg, long index, int x) {
        constants$325.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AbortCount$VH() {
        return constants$326.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AbortCount;
     * }
     */
    public static int AbortCount$get(MemorySegment seg) {
        return (int)constants$326.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AbortCount;
     * }
     */
    public static void AbortCount$set(MemorySegment seg, int x) {
        constants$326.const$0.set(seg, x);
    }
    public static int AbortCount$get(MemorySegment seg, long index) {
        return (int)constants$326.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AbortCount$set(MemorySegment seg, long index, int x) {
        constants$326.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle StartTime$VH() {
        return constants$326.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 StartTime;
     * }
     */
    public static long StartTime$get(MemorySegment seg) {
        return (long)constants$326.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 StartTime;
     * }
     */
    public static void StartTime$set(MemorySegment seg, long x) {
        constants$326.const$1.set(seg, x);
    }
    public static long StartTime$get(MemorySegment seg, long index) {
        return (long)constants$326.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void StartTime$set(MemorySegment seg, long index, long x) {
        constants$326.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment State$slice(MemorySegment seg) {
        return seg.asSlice(24, 416);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


