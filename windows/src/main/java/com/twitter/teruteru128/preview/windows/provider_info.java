// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct provider_info {
 *     PQUERYHANDLER pi_R0_1val;
 *     PQUERYHANDLER pi_R0_allvals;
 *     PQUERYHANDLER pi_R3_1val;
 *     PQUERYHANDLER pi_R3_allvals;
 *     DWORD pi_flags;
 *     LPVOID pi_key_context;
 * };
 * }
 */
public class provider_info {

    public static MemoryLayout $LAYOUT() {
        return constants$1483.const$0;
    }
    public static VarHandle pi_R0_1val$VH() {
        return constants$1483.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R0_1val;
     * }
     */
    public static MemorySegment pi_R0_1val$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R0_1val;
     * }
     */
    public static void pi_R0_1val$set(MemorySegment seg, MemorySegment x) {
        constants$1483.const$1.set(seg, x);
    }
    public static MemorySegment pi_R0_1val$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_R0_1val$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1483.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static PQUERYHANDLER pi_R0_1val(MemorySegment segment, Arena scope) {
        return PQUERYHANDLER.ofAddress(pi_R0_1val$get(segment), scope);
    }
    public static VarHandle pi_R0_allvals$VH() {
        return constants$1483.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R0_allvals;
     * }
     */
    public static MemorySegment pi_R0_allvals$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R0_allvals;
     * }
     */
    public static void pi_R0_allvals$set(MemorySegment seg, MemorySegment x) {
        constants$1483.const$2.set(seg, x);
    }
    public static MemorySegment pi_R0_allvals$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_R0_allvals$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1483.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static PQUERYHANDLER pi_R0_allvals(MemorySegment segment, Arena scope) {
        return PQUERYHANDLER.ofAddress(pi_R0_allvals$get(segment), scope);
    }
    public static VarHandle pi_R3_1val$VH() {
        return constants$1483.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R3_1val;
     * }
     */
    public static MemorySegment pi_R3_1val$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R3_1val;
     * }
     */
    public static void pi_R3_1val$set(MemorySegment seg, MemorySegment x) {
        constants$1483.const$3.set(seg, x);
    }
    public static MemorySegment pi_R3_1val$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_R3_1val$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1483.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static PQUERYHANDLER pi_R3_1val(MemorySegment segment, Arena scope) {
        return PQUERYHANDLER.ofAddress(pi_R3_1val$get(segment), scope);
    }
    public static VarHandle pi_R3_allvals$VH() {
        return constants$1483.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R3_allvals;
     * }
     */
    public static MemorySegment pi_R3_allvals$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PQUERYHANDLER pi_R3_allvals;
     * }
     */
    public static void pi_R3_allvals$set(MemorySegment seg, MemorySegment x) {
        constants$1483.const$4.set(seg, x);
    }
    public static MemorySegment pi_R3_allvals$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1483.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_R3_allvals$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1483.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static PQUERYHANDLER pi_R3_allvals(MemorySegment segment, Arena scope) {
        return PQUERYHANDLER.ofAddress(pi_R3_allvals$get(segment), scope);
    }
    public static VarHandle pi_flags$VH() {
        return constants$1483.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD pi_flags;
     * }
     */
    public static int pi_flags$get(MemorySegment seg) {
        return (int)constants$1483.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD pi_flags;
     * }
     */
    public static void pi_flags$set(MemorySegment seg, int x) {
        constants$1483.const$5.set(seg, x);
    }
    public static int pi_flags$get(MemorySegment seg, long index) {
        return (int)constants$1483.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_flags$set(MemorySegment seg, long index, int x) {
        constants$1483.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pi_key_context$VH() {
        return constants$1484.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPVOID pi_key_context;
     * }
     */
    public static MemorySegment pi_key_context$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1484.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPVOID pi_key_context;
     * }
     */
    public static void pi_key_context$set(MemorySegment seg, MemorySegment x) {
        constants$1484.const$0.set(seg, x);
    }
    public static MemorySegment pi_key_context$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1484.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pi_key_context$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1484.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


