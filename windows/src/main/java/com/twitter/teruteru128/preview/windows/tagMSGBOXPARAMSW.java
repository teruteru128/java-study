// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMSGBOXPARAMSW {
 *     UINT cbSize;
 *     HWND hwndOwner;
 *     HINSTANCE hInstance;
 *     LPCWSTR lpszText;
 *     LPCWSTR lpszCaption;
 *     DWORD dwStyle;
 *     LPCWSTR lpszIcon;
 *     DWORD_PTR dwContextHelpId;
 *     MSGBOXCALLBACK lpfnMsgBoxCallback;
 *     DWORD dwLanguageId;
 * };
 * }
 */
public class tagMSGBOXPARAMSW {

    public static MemoryLayout $LAYOUT() {
        return constants$1293.const$0;
    }
    public static VarHandle cbSize$VH() {
        return constants$1293.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$1293.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$1293.const$1.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$1293.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$1293.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hwndOwner$VH() {
        return constants$1293.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static MemorySegment hwndOwner$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static void hwndOwner$set(MemorySegment seg, MemorySegment x) {
        constants$1293.const$2.set(seg, x);
    }
    public static MemorySegment hwndOwner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndOwner$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1293.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hInstance$VH() {
        return constants$1293.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static MemorySegment hInstance$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static void hInstance$set(MemorySegment seg, MemorySegment x) {
        constants$1293.const$3.set(seg, x);
    }
    public static MemorySegment hInstance$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void hInstance$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1293.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszText$VH() {
        return constants$1293.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpszText;
     * }
     */
    public static MemorySegment lpszText$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpszText;
     * }
     */
    public static void lpszText$set(MemorySegment seg, MemorySegment x) {
        constants$1293.const$4.set(seg, x);
    }
    public static MemorySegment lpszText$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszText$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1293.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszCaption$VH() {
        return constants$1293.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpszCaption;
     * }
     */
    public static MemorySegment lpszCaption$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpszCaption;
     * }
     */
    public static void lpszCaption$set(MemorySegment seg, MemorySegment x) {
        constants$1293.const$5.set(seg, x);
    }
    public static MemorySegment lpszCaption$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1293.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszCaption$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1293.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStyle$VH() {
        return constants$1294.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static int dwStyle$get(MemorySegment seg) {
        return (int)constants$1294.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static void dwStyle$set(MemorySegment seg, int x) {
        constants$1294.const$0.set(seg, x);
    }
    public static int dwStyle$get(MemorySegment seg, long index) {
        return (int)constants$1294.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStyle$set(MemorySegment seg, long index, int x) {
        constants$1294.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszIcon$VH() {
        return constants$1294.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpszIcon;
     * }
     */
    public static MemorySegment lpszIcon$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1294.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpszIcon;
     * }
     */
    public static void lpszIcon$set(MemorySegment seg, MemorySegment x) {
        constants$1294.const$1.set(seg, x);
    }
    public static MemorySegment lpszIcon$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1294.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszIcon$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1294.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwContextHelpId$VH() {
        return constants$1294.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD_PTR dwContextHelpId;
     * }
     */
    public static long dwContextHelpId$get(MemorySegment seg) {
        return (long)constants$1294.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD_PTR dwContextHelpId;
     * }
     */
    public static void dwContextHelpId$set(MemorySegment seg, long x) {
        constants$1294.const$2.set(seg, x);
    }
    public static long dwContextHelpId$get(MemorySegment seg, long index) {
        return (long)constants$1294.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwContextHelpId$set(MemorySegment seg, long index, long x) {
        constants$1294.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpfnMsgBoxCallback$VH() {
        return constants$1294.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * MSGBOXCALLBACK lpfnMsgBoxCallback;
     * }
     */
    public static MemorySegment lpfnMsgBoxCallback$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1294.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * MSGBOXCALLBACK lpfnMsgBoxCallback;
     * }
     */
    public static void lpfnMsgBoxCallback$set(MemorySegment seg, MemorySegment x) {
        constants$1294.const$3.set(seg, x);
    }
    public static MemorySegment lpfnMsgBoxCallback$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1294.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnMsgBoxCallback$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1294.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MSGBOXCALLBACK lpfnMsgBoxCallback(MemorySegment segment, Arena scope) {
        return MSGBOXCALLBACK.ofAddress(lpfnMsgBoxCallback$get(segment), scope);
    }
    public static VarHandle dwLanguageId$VH() {
        return constants$1294.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLanguageId;
     * }
     */
    public static int dwLanguageId$get(MemorySegment seg) {
        return (int)constants$1294.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLanguageId;
     * }
     */
    public static void dwLanguageId$set(MemorySegment seg, int x) {
        constants$1294.const$4.set(seg, x);
    }
    public static int dwLanguageId$get(MemorySegment seg, long index) {
        return (int)constants$1294.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLanguageId$set(MemorySegment seg, long index, int x) {
        constants$1294.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


