// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
 *     DWORD ulFlags;
 *     DWORD ulFilenameLength;
 *     DWORD ulPathLength;
 *     PCWSTR lpFileName;
 *     PCWSTR lpFilePath;
 * };
 * }
 */
public class _ASSEMBLY_FILE_DETAILED_INFORMATION {

    public static MemoryLayout $LAYOUT() {
        return constants$498.const$1;
    }
    public static VarHandle ulFlags$VH() {
        return constants$498.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulFlags;
     * }
     */
    public static int ulFlags$get(MemorySegment seg) {
        return (int)constants$498.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulFlags;
     * }
     */
    public static void ulFlags$set(MemorySegment seg, int x) {
        constants$498.const$2.set(seg, x);
    }
    public static int ulFlags$get(MemorySegment seg, long index) {
        return (int)constants$498.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ulFlags$set(MemorySegment seg, long index, int x) {
        constants$498.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulFilenameLength$VH() {
        return constants$498.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulFilenameLength;
     * }
     */
    public static int ulFilenameLength$get(MemorySegment seg) {
        return (int)constants$498.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulFilenameLength;
     * }
     */
    public static void ulFilenameLength$set(MemorySegment seg, int x) {
        constants$498.const$3.set(seg, x);
    }
    public static int ulFilenameLength$get(MemorySegment seg, long index) {
        return (int)constants$498.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ulFilenameLength$set(MemorySegment seg, long index, int x) {
        constants$498.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulPathLength$VH() {
        return constants$498.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulPathLength;
     * }
     */
    public static int ulPathLength$get(MemorySegment seg) {
        return (int)constants$498.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulPathLength;
     * }
     */
    public static void ulPathLength$set(MemorySegment seg, int x) {
        constants$498.const$4.set(seg, x);
    }
    public static int ulPathLength$get(MemorySegment seg, long index) {
        return (int)constants$498.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ulPathLength$set(MemorySegment seg, long index, int x) {
        constants$498.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpFileName$VH() {
        return constants$498.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCWSTR lpFileName;
     * }
     */
    public static MemorySegment lpFileName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$498.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCWSTR lpFileName;
     * }
     */
    public static void lpFileName$set(MemorySegment seg, MemorySegment x) {
        constants$498.const$5.set(seg, x);
    }
    public static MemorySegment lpFileName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$498.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lpFileName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$498.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpFilePath$VH() {
        return constants$499.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCWSTR lpFilePath;
     * }
     */
    public static MemorySegment lpFilePath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$499.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCWSTR lpFilePath;
     * }
     */
    public static void lpFilePath$set(MemorySegment seg, MemorySegment x) {
        constants$499.const$0.set(seg, x);
    }
    public static MemorySegment lpFilePath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$499.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void lpFilePath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$499.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


