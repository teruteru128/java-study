// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_PHYSICAL_NODE_DATA {
 *     DWORD NodeId;
 *     DWORD AdapterCount;
 *     DWORD AdapterDataLength;
 *     DWORD AdapterDataOffset;
 *     DWORD DeviceCount;
 *     DWORD DeviceDataLength;
 *     DWORD DeviceDataOffset;
 *     DWORD Reserved[3];
 * };
 * }
 */
public class _STORAGE_PHYSICAL_NODE_DATA {

    public static MemoryLayout $LAYOUT() {
        return constants$2423.const$0;
    }
    public static VarHandle NodeId$VH() {
        return constants$2423.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD NodeId;
     * }
     */
    public static int NodeId$get(MemorySegment seg) {
        return (int)constants$2423.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD NodeId;
     * }
     */
    public static void NodeId$set(MemorySegment seg, int x) {
        constants$2423.const$1.set(seg, x);
    }
    public static int NodeId$get(MemorySegment seg, long index) {
        return (int)constants$2423.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void NodeId$set(MemorySegment seg, long index, int x) {
        constants$2423.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AdapterCount$VH() {
        return constants$2423.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AdapterCount;
     * }
     */
    public static int AdapterCount$get(MemorySegment seg) {
        return (int)constants$2423.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AdapterCount;
     * }
     */
    public static void AdapterCount$set(MemorySegment seg, int x) {
        constants$2423.const$2.set(seg, x);
    }
    public static int AdapterCount$get(MemorySegment seg, long index) {
        return (int)constants$2423.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterCount$set(MemorySegment seg, long index, int x) {
        constants$2423.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AdapterDataLength$VH() {
        return constants$2423.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AdapterDataLength;
     * }
     */
    public static int AdapterDataLength$get(MemorySegment seg) {
        return (int)constants$2423.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AdapterDataLength;
     * }
     */
    public static void AdapterDataLength$set(MemorySegment seg, int x) {
        constants$2423.const$3.set(seg, x);
    }
    public static int AdapterDataLength$get(MemorySegment seg, long index) {
        return (int)constants$2423.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterDataLength$set(MemorySegment seg, long index, int x) {
        constants$2423.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AdapterDataOffset$VH() {
        return constants$2423.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AdapterDataOffset;
     * }
     */
    public static int AdapterDataOffset$get(MemorySegment seg) {
        return (int)constants$2423.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AdapterDataOffset;
     * }
     */
    public static void AdapterDataOffset$set(MemorySegment seg, int x) {
        constants$2423.const$4.set(seg, x);
    }
    public static int AdapterDataOffset$get(MemorySegment seg, long index) {
        return (int)constants$2423.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterDataOffset$set(MemorySegment seg, long index, int x) {
        constants$2423.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DeviceCount$VH() {
        return constants$2423.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DeviceCount;
     * }
     */
    public static int DeviceCount$get(MemorySegment seg) {
        return (int)constants$2423.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DeviceCount;
     * }
     */
    public static void DeviceCount$set(MemorySegment seg, int x) {
        constants$2423.const$5.set(seg, x);
    }
    public static int DeviceCount$get(MemorySegment seg, long index) {
        return (int)constants$2423.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void DeviceCount$set(MemorySegment seg, long index, int x) {
        constants$2423.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DeviceDataLength$VH() {
        return constants$2424.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DeviceDataLength;
     * }
     */
    public static int DeviceDataLength$get(MemorySegment seg) {
        return (int)constants$2424.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DeviceDataLength;
     * }
     */
    public static void DeviceDataLength$set(MemorySegment seg, int x) {
        constants$2424.const$0.set(seg, x);
    }
    public static int DeviceDataLength$get(MemorySegment seg, long index) {
        return (int)constants$2424.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void DeviceDataLength$set(MemorySegment seg, long index, int x) {
        constants$2424.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DeviceDataOffset$VH() {
        return constants$2424.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DeviceDataOffset;
     * }
     */
    public static int DeviceDataOffset$get(MemorySegment seg) {
        return (int)constants$2424.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DeviceDataOffset;
     * }
     */
    public static void DeviceDataOffset$set(MemorySegment seg, int x) {
        constants$2424.const$1.set(seg, x);
    }
    public static int DeviceDataOffset$get(MemorySegment seg, long index) {
        return (int)constants$2424.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void DeviceDataOffset$set(MemorySegment seg, long index, int x) {
        constants$2424.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Reserved$slice(MemorySegment seg) {
        return seg.asSlice(28, 12);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


