// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _FS_BPIO_OUTPUT {
 *     FS_BPIO_OPERATIONS Operation;
 *     FS_BPIO_OUTFLAGS OutFlags;
 *     DWORDLONG Reserved1;
 *     DWORDLONG Reserved2;
 *     union {
 *         FS_BPIO_RESULTS Enable;
 *         FS_BPIO_RESULTS Query;
 *         FS_BPIO_RESULTS VolumeStackResume;
 *         FS_BPIO_RESULTS StreamResume;
 *         FS_BPIO_INFO GetInfo;
 *     };
 * };
 * }
 */
public class _FS_BPIO_OUTPUT {

    public static MemoryLayout $LAYOUT() {
        return constants$2740.const$2;
    }
    public static VarHandle Operation$VH() {
        return constants$2740.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FS_BPIO_OPERATIONS Operation;
     * }
     */
    public static int Operation$get(MemorySegment seg) {
        return (int)constants$2740.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FS_BPIO_OPERATIONS Operation;
     * }
     */
    public static void Operation$set(MemorySegment seg, int x) {
        constants$2740.const$3.set(seg, x);
    }
    public static int Operation$get(MemorySegment seg, long index) {
        return (int)constants$2740.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Operation$set(MemorySegment seg, long index, int x) {
        constants$2740.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OutFlags$VH() {
        return constants$2740.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FS_BPIO_OUTFLAGS OutFlags;
     * }
     */
    public static int OutFlags$get(MemorySegment seg) {
        return (int)constants$2740.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FS_BPIO_OUTFLAGS OutFlags;
     * }
     */
    public static void OutFlags$set(MemorySegment seg, int x) {
        constants$2740.const$4.set(seg, x);
    }
    public static int OutFlags$get(MemorySegment seg, long index) {
        return (int)constants$2740.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void OutFlags$set(MemorySegment seg, long index, int x) {
        constants$2740.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved1$VH() {
        return constants$2740.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG Reserved1;
     * }
     */
    public static long Reserved1$get(MemorySegment seg) {
        return (long)constants$2740.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG Reserved1;
     * }
     */
    public static void Reserved1$set(MemorySegment seg, long x) {
        constants$2740.const$5.set(seg, x);
    }
    public static long Reserved1$get(MemorySegment seg, long index) {
        return (long)constants$2740.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, long x) {
        constants$2740.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved2$VH() {
        return constants$2741.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG Reserved2;
     * }
     */
    public static long Reserved2$get(MemorySegment seg) {
        return (long)constants$2741.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG Reserved2;
     * }
     */
    public static void Reserved2$set(MemorySegment seg, long x) {
        constants$2741.const$0.set(seg, x);
    }
    public static long Reserved2$get(MemorySegment seg, long index) {
        return (long)constants$2741.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, long x) {
        constants$2741.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Enable$slice(MemorySegment seg) {
        return seg.asSlice(24, 328);
    }
    public static MemorySegment Query$slice(MemorySegment seg) {
        return seg.asSlice(24, 328);
    }
    public static MemorySegment VolumeStackResume$slice(MemorySegment seg) {
        return seg.asSlice(24, 328);
    }
    public static MemorySegment StreamResume$slice(MemorySegment seg) {
        return seg.asSlice(24, 328);
    }
    public static MemorySegment GetInfo$slice(MemorySegment seg) {
        return seg.asSlice(24, 72);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


