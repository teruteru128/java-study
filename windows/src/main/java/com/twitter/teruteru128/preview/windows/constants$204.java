// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$204 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$204() {}
    static final VarHandle const$0 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("PriorityClass"));
    static final VarHandle const$1 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("SchedulingClass"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("LowPart"),
                    JAVA_INT.withName("HighPart")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("LowPart"),
                    JAVA_INT.withName("HighPart")
                ).withName("u"),
                JAVA_LONG.withName("QuadPart")
            ).withName("PerProcessUserTimeLimit"),
            MemoryLayout.unionLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("LowPart"),
                    JAVA_INT.withName("HighPart")
                ).withName("$anon$0"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("LowPart"),
                    JAVA_INT.withName("HighPart")
                ).withName("u"),
                JAVA_LONG.withName("QuadPart")
            ).withName("PerJobUserTimeLimit"),
            JAVA_INT.withName("LimitFlags"),
            MemoryLayout.paddingLayout(4),
            JAVA_LONG.withName("MinimumWorkingSetSize"),
            JAVA_LONG.withName("MaximumWorkingSetSize"),
            JAVA_INT.withName("ActiveProcessLimit"),
            MemoryLayout.paddingLayout(4),
            JAVA_LONG.withName("Affinity"),
            JAVA_INT.withName("PriorityClass"),
            JAVA_INT.withName("SchedulingClass")
        ).withName("BasicLimitInformation"),
        MemoryLayout.structLayout(
            JAVA_LONG.withName("ReadOperationCount"),
            JAVA_LONG.withName("WriteOperationCount"),
            JAVA_LONG.withName("OtherOperationCount"),
            JAVA_LONG.withName("ReadTransferCount"),
            JAVA_LONG.withName("WriteTransferCount"),
            JAVA_LONG.withName("OtherTransferCount")
        ).withName("IoInfo"),
        JAVA_LONG.withName("ProcessMemoryLimit"),
        JAVA_LONG.withName("JobMemoryLimit"),
        JAVA_LONG.withName("PeakProcessMemoryUsed"),
        JAVA_LONG.withName("PeakJobMemoryUsed")
    ).withName("_JOBOBJECT_EXTENDED_LIMIT_INFORMATION");
    static final VarHandle const$3 = constants$204.const$2.varHandle(MemoryLayout.PathElement.groupElement("ProcessMemoryLimit"));
    static final VarHandle const$4 = constants$204.const$2.varHandle(MemoryLayout.PathElement.groupElement("JobMemoryLimit"));
    static final VarHandle const$5 = constants$204.const$2.varHandle(MemoryLayout.PathElement.groupElement("PeakProcessMemoryUsed"));
}


