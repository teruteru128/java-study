// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class Windows_h_22 extends Windows_h_21 {

    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_5A* LPDRIVER_INFO_5A;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_5A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_5W* PDRIVER_INFO_5W;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_5W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_5W* LPDRIVER_INFO_5W;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_5W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_5A* PDRIVER_INFO_5;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_5 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_5A* LPDRIVER_INFO_5;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_5 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6A* PDRIVER_INFO_6A;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_6A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6A* LPDRIVER_INFO_6A;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_6A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6W* PDRIVER_INFO_6W;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_6W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6W* LPDRIVER_INFO_6W;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_6W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6A* PDRIVER_INFO_6;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_6 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_6A* LPDRIVER_INFO_6;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_6 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8A* PDRIVER_INFO_8A;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_8A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8A* LPDRIVER_INFO_8A;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_8A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8W* PDRIVER_INFO_8W;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_8W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8W* LPDRIVER_INFO_8W;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_8W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8A* PDRIVER_INFO_8;
     * }
     */
    public static final AddressLayout PDRIVER_INFO_8 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DRIVER_INFO_8A* LPDRIVER_INFO_8;
     * }
     */
    public static final AddressLayout LPDRIVER_INFO_8 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1A* PDOC_INFO_1A;
     * }
     */
    public static final AddressLayout PDOC_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1A* LPDOC_INFO_1A;
     * }
     */
    public static final AddressLayout LPDOC_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1W* PDOC_INFO_1W;
     * }
     */
    public static final AddressLayout PDOC_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1W* LPDOC_INFO_1W;
     * }
     */
    public static final AddressLayout LPDOC_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1A* PDOC_INFO_1;
     * }
     */
    public static final AddressLayout PDOC_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_1A* LPDOC_INFO_1;
     * }
     */
    public static final AddressLayout LPDOC_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1A* PFORM_INFO_1A;
     * }
     */
    public static final AddressLayout PFORM_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1A* LPFORM_INFO_1A;
     * }
     */
    public static final AddressLayout LPFORM_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1W* PFORM_INFO_1W;
     * }
     */
    public static final AddressLayout PFORM_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1W* LPFORM_INFO_1W;
     * }
     */
    public static final AddressLayout LPFORM_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1A* PFORM_INFO_1;
     * }
     */
    public static final AddressLayout PFORM_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_1A* LPFORM_INFO_1;
     * }
     */
    public static final AddressLayout LPFORM_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2A* PFORM_INFO_2A;
     * }
     */
    public static final AddressLayout PFORM_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2A* LPFORM_INFO_2A;
     * }
     */
    public static final AddressLayout LPFORM_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2W* PFORM_INFO_2W;
     * }
     */
    public static final AddressLayout PFORM_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2W* LPFORM_INFO_2W;
     * }
     */
    public static final AddressLayout LPFORM_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2A* PFORM_INFO_2;
     * }
     */
    public static final AddressLayout PFORM_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FORM_INFO_2A* LPFORM_INFO_2;
     * }
     */
    public static final AddressLayout LPFORM_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2A* PDOC_INFO_2A;
     * }
     */
    public static final AddressLayout PDOC_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2A* LPDOC_INFO_2A;
     * }
     */
    public static final AddressLayout LPDOC_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2W* PDOC_INFO_2W;
     * }
     */
    public static final AddressLayout PDOC_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2W* LPDOC_INFO_2W;
     * }
     */
    public static final AddressLayout LPDOC_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2A* PDOC_INFO_2;
     * }
     */
    public static final AddressLayout PDOC_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_2A* LPDOC_INFO_2;
     * }
     */
    public static final AddressLayout LPDOC_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3A* PDOC_INFO_3A;
     * }
     */
    public static final AddressLayout PDOC_INFO_3A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3A* LPDOC_INFO_3A;
     * }
     */
    public static final AddressLayout LPDOC_INFO_3A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3W* PDOC_INFO_3W;
     * }
     */
    public static final AddressLayout PDOC_INFO_3W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3W* LPDOC_INFO_3W;
     * }
     */
    public static final AddressLayout LPDOC_INFO_3W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3A* PDOC_INFO_3;
     * }
     */
    public static final AddressLayout PDOC_INFO_3 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DOC_INFO_3A* LPDOC_INFO_3;
     * }
     */
    public static final AddressLayout LPDOC_INFO_3 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1A* PPRINTPROCESSOR_INFO_1A;
     * }
     */
    public static final AddressLayout PPRINTPROCESSOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1A* LPPRINTPROCESSOR_INFO_1A;
     * }
     */
    public static final AddressLayout LPPRINTPROCESSOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1W* PPRINTPROCESSOR_INFO_1W;
     * }
     */
    public static final AddressLayout PPRINTPROCESSOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1W* LPPRINTPROCESSOR_INFO_1W;
     * }
     */
    public static final AddressLayout LPPRINTPROCESSOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1A* PPRINTPROCESSOR_INFO_1;
     * }
     */
    public static final AddressLayout PPRINTPROCESSOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_INFO_1A* LPPRINTPROCESSOR_INFO_1;
     * }
     */
    public static final AddressLayout LPPRINTPROCESSOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_CAPS_1* PPRINTPROCESSOR_CAPS_1;
     * }
     */
    public static final AddressLayout PPRINTPROCESSOR_CAPS_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTPROCESSOR_CAPS_2* PPRINTPROCESSOR_CAPS_2;
     * }
     */
    public static final AddressLayout PPRINTPROCESSOR_CAPS_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1A* PPORT_INFO_1A;
     * }
     */
    public static final AddressLayout PPORT_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1A* LPPORT_INFO_1A;
     * }
     */
    public static final AddressLayout LPPORT_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1W* PPORT_INFO_1W;
     * }
     */
    public static final AddressLayout PPORT_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1W* LPPORT_INFO_1W;
     * }
     */
    public static final AddressLayout LPPORT_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1A* PPORT_INFO_1;
     * }
     */
    public static final AddressLayout PPORT_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_1A* LPPORT_INFO_1;
     * }
     */
    public static final AddressLayout LPPORT_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2A* PPORT_INFO_2A;
     * }
     */
    public static final AddressLayout PPORT_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2A* LPPORT_INFO_2A;
     * }
     */
    public static final AddressLayout LPPORT_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2W* PPORT_INFO_2W;
     * }
     */
    public static final AddressLayout PPORT_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2W* LPPORT_INFO_2W;
     * }
     */
    public static final AddressLayout LPPORT_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2A* PPORT_INFO_2;
     * }
     */
    public static final AddressLayout PPORT_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_2A* LPPORT_INFO_2;
     * }
     */
    public static final AddressLayout LPPORT_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3A* PPORT_INFO_3A;
     * }
     */
    public static final AddressLayout PPORT_INFO_3A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3A* LPPORT_INFO_3A;
     * }
     */
    public static final AddressLayout LPPORT_INFO_3A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3W* PPORT_INFO_3W;
     * }
     */
    public static final AddressLayout PPORT_INFO_3W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3W* LPPORT_INFO_3W;
     * }
     */
    public static final AddressLayout LPPORT_INFO_3W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3A* PPORT_INFO_3;
     * }
     */
    public static final AddressLayout PPORT_INFO_3 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PORT_INFO_3A* LPPORT_INFO_3;
     * }
     */
    public static final AddressLayout LPPORT_INFO_3 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1A* PMONITOR_INFO_1A;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1A* LPMONITOR_INFO_1A;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1W* PMONITOR_INFO_1W;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1W* LPMONITOR_INFO_1W;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1A* PMONITOR_INFO_1;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_1A* LPMONITOR_INFO_1;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2A* PMONITOR_INFO_2A;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2A* LPMONITOR_INFO_2A;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2W* PMONITOR_INFO_2W;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2W* LPMONITOR_INFO_2W;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2A* PMONITOR_INFO_2;
     * }
     */
    public static final AddressLayout PMONITOR_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MONITOR_INFO_2A* LPMONITOR_INFO_2;
     * }
     */
    public static final AddressLayout LPMONITOR_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1A* PDATATYPES_INFO_1A;
     * }
     */
    public static final AddressLayout PDATATYPES_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1A* LPDATATYPES_INFO_1A;
     * }
     */
    public static final AddressLayout LPDATATYPES_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1W* PDATATYPES_INFO_1W;
     * }
     */
    public static final AddressLayout PDATATYPES_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1W* LPDATATYPES_INFO_1W;
     * }
     */
    public static final AddressLayout LPDATATYPES_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1A* PDATATYPES_INFO_1;
     * }
     */
    public static final AddressLayout PDATATYPES_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DATATYPES_INFO_1A* LPDATATYPES_INFO_1;
     * }
     */
    public static final AddressLayout LPDATATYPES_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSA* PPRINTER_DEFAULTSA;
     * }
     */
    public static final AddressLayout PPRINTER_DEFAULTSA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSA* LPPRINTER_DEFAULTSA;
     * }
     */
    public static final AddressLayout LPPRINTER_DEFAULTSA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSW* PPRINTER_DEFAULTSW;
     * }
     */
    public static final AddressLayout PPRINTER_DEFAULTSW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSW* LPPRINTER_DEFAULTSW;
     * }
     */
    public static final AddressLayout LPPRINTER_DEFAULTSW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSA* PPRINTER_DEFAULTS;
     * }
     */
    public static final AddressLayout PPRINTER_DEFAULTS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_DEFAULTSA* LPPRINTER_DEFAULTS;
     * }
     */
    public static final AddressLayout LPPRINTER_DEFAULTS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESA* PPRINTER_ENUM_VALUESA;
     * }
     */
    public static final AddressLayout PPRINTER_ENUM_VALUESA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESA* LPPRINTER_ENUM_VALUESA;
     * }
     */
    public static final AddressLayout LPPRINTER_ENUM_VALUESA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESW* PPRINTER_ENUM_VALUESW;
     * }
     */
    public static final AddressLayout PPRINTER_ENUM_VALUESW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESW* LPPRINTER_ENUM_VALUESW;
     * }
     */
    public static final AddressLayout LPPRINTER_ENUM_VALUESW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESA* PPRINTER_ENUM_VALUES;
     * }
     */
    public static final AddressLayout PPRINTER_ENUM_VALUES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_ENUM_VALUESA* LPPRINTER_ENUM_VALUES;
     * }
     */
    public static final AddressLayout LPPRINTER_ENUM_VALUES = RuntimeHelper.POINTER;
    public static MethodHandle EnumPrintersA$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$3,"EnumPrintersA");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintersA(DWORD Flags, LPSTR Name, DWORD Level, LPBYTE pPrinterEnum, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintersA(int Flags, MemorySegment Name, int Level, MemorySegment pPrinterEnum, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintersA$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintersW$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$4,"EnumPrintersW");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintersW(DWORD Flags, LPWSTR Name, DWORD Level, LPBYTE pPrinterEnum, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintersW(int Flags, MemorySegment Name, int Level, MemorySegment pPrinterEnum, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintersW$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2907.const$5,"GetSpoolFileHandle");
    }
    /**
     * {@snippet :
     * HANDLE GetSpoolFileHandle(HANDLE hPrinter);
     * }
     */
    public static MemorySegment GetSpoolFileHandle(MemorySegment hPrinter) {
        var mh$ = GetSpoolFileHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommitSpoolData$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$0,"CommitSpoolData");
    }
    /**
     * {@snippet :
     * HANDLE CommitSpoolData(HANDLE hPrinter, HANDLE hSpoolFile, DWORD cbCommit);
     * }
     */
    public static MemorySegment CommitSpoolData(MemorySegment hPrinter, MemorySegment hSpoolFile, int cbCommit) {
        var mh$ = CommitSpoolData$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hPrinter, hSpoolFile, cbCommit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$1,"CloseSpoolFileHandle");
    }
    /**
     * {@snippet :
     * BOOL CloseSpoolFileHandle(HANDLE hPrinter, HANDLE hSpoolFile);
     * }
     */
    public static int CloseSpoolFileHandle(MemorySegment hPrinter, MemorySegment hSpoolFile) {
        var mh$ = CloseSpoolFileHandle$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, hSpoolFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$2,"OpenPrinterA");
    }
    /**
     * {@snippet :
     * BOOL OpenPrinterA(LPSTR pPrinterName, LPHANDLE phPrinter, LPPRINTER_DEFAULTSA pDefault);
     * }
     */
    public static int OpenPrinterA(MemorySegment pPrinterName, MemorySegment phPrinter, MemorySegment pDefault) {
        var mh$ = OpenPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$3,"OpenPrinterW");
    }
    /**
     * {@snippet :
     * BOOL OpenPrinterW(LPWSTR pPrinterName, LPHANDLE phPrinter, LPPRINTER_DEFAULTSW pDefault);
     * }
     */
    public static int OpenPrinterW(MemorySegment pPrinterName, MemorySegment phPrinter, MemorySegment pDefault) {
        var mh$ = OpenPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$4,"ResetPrinterA");
    }
    /**
     * {@snippet :
     * BOOL ResetPrinterA(HANDLE hPrinter, LPPRINTER_DEFAULTSA pDefault);
     * }
     */
    public static int ResetPrinterA(MemorySegment hPrinter, MemorySegment pDefault) {
        var mh$ = ResetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2908.const$5,"ResetPrinterW");
    }
    /**
     * {@snippet :
     * BOOL ResetPrinterW(HANDLE hPrinter, LPPRINTER_DEFAULTSW pDefault);
     * }
     */
    public static int ResetPrinterW(MemorySegment hPrinter, MemorySegment pDefault) {
        var mh$ = ResetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$2909.const$0,"SetJobA");
    }
    /**
     * {@snippet :
     * BOOL SetJobA(HANDLE hPrinter, DWORD JobId, DWORD Level, LPBYTE pJob, DWORD Command);
     * }
     */
    public static int SetJobA(MemorySegment hPrinter, int JobId, int Level, MemorySegment pJob, int Command) {
        var mh$ = SetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$2909.const$1,"SetJobW");
    }
    /**
     * {@snippet :
     * BOOL SetJobW(HANDLE hPrinter, DWORD JobId, DWORD Level, LPBYTE pJob, DWORD Command);
     * }
     */
    public static int SetJobW(MemorySegment hPrinter, int JobId, int Level, MemorySegment pJob, int Command) {
        var mh$ = SetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$2909.const$2,"GetJobA");
    }
    /**
     * {@snippet :
     * BOOL GetJobA(HANDLE hPrinter, DWORD JobId, DWORD Level, LPBYTE pJob, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetJobA(MemorySegment hPrinter, int JobId, int Level, MemorySegment pJob, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$2909.const$3,"GetJobW");
    }
    /**
     * {@snippet :
     * BOOL GetJobW(HANDLE hPrinter, DWORD JobId, DWORD Level, LPBYTE pJob, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetJobW(MemorySegment hPrinter, int JobId, int Level, MemorySegment pJob, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsA$MH() {
        return RuntimeHelper.requireNonNull(constants$2909.const$5,"EnumJobsA");
    }
    /**
     * {@snippet :
     * BOOL EnumJobsA(HANDLE hPrinter, DWORD FirstJob, DWORD NoJobs, DWORD Level, LPBYTE pJob, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumJobsA(MemorySegment hPrinter, int FirstJob, int NoJobs, int Level, MemorySegment pJob, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumJobsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsW$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$0,"EnumJobsW");
    }
    /**
     * {@snippet :
     * BOOL EnumJobsW(HANDLE hPrinter, DWORD FirstJob, DWORD NoJobs, DWORD Level, LPBYTE pJob, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumJobsW(MemorySegment hPrinter, int FirstJob, int NoJobs, int Level, MemorySegment pJob, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumJobsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$1,"AddPrinterA");
    }
    /**
     * {@snippet :
     * HANDLE AddPrinterA(LPSTR pName, DWORD Level, LPBYTE pPrinter);
     * }
     */
    public static MemorySegment AddPrinterA(MemorySegment pName, int Level, MemorySegment pPrinter) {
        var mh$ = AddPrinterA$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$2,"AddPrinterW");
    }
    /**
     * {@snippet :
     * HANDLE AddPrinterW(LPWSTR pName, DWORD Level, LPBYTE pPrinter);
     * }
     */
    public static MemorySegment AddPrinterW(MemorySegment pName, int Level, MemorySegment pPrinter) {
        var mh$ = AddPrinterW$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$3,"DeletePrinter");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinter(HANDLE hPrinter);
     * }
     */
    public static int DeletePrinter(MemorySegment hPrinter) {
        var mh$ = DeletePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$4,"SetPrinterA");
    }
    /**
     * {@snippet :
     * BOOL SetPrinterA(HANDLE hPrinter, DWORD Level, LPBYTE pPrinter, DWORD Command);
     * }
     */
    public static int SetPrinterA(MemorySegment hPrinter, int Level, MemorySegment pPrinter, int Command) {
        var mh$ = SetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2910.const$5,"SetPrinterW");
    }
    /**
     * {@snippet :
     * BOOL SetPrinterW(HANDLE hPrinter, DWORD Level, LPBYTE pPrinter, DWORD Command);
     * }
     */
    public static int SetPrinterW(MemorySegment hPrinter, int Level, MemorySegment pPrinter, int Command) {
        var mh$ = SetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$0,"GetPrinterA");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterA(HANDLE hPrinter, DWORD Level, LPBYTE pPrinter, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterA(MemorySegment hPrinter, int Level, MemorySegment pPrinter, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$1,"GetPrinterW");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterW(HANDLE hPrinter, DWORD Level, LPBYTE pPrinter, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterW(MemorySegment hPrinter, int Level, MemorySegment pPrinter, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$2,"AddPrinterDriverA");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterDriverA(LPSTR pName, DWORD Level, LPBYTE pDriverInfo);
     * }
     */
    public static int AddPrinterDriverA(MemorySegment pName, int Level, MemorySegment pDriverInfo) {
        var mh$ = AddPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$3,"AddPrinterDriverW");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterDriverW(LPWSTR pName, DWORD Level, LPBYTE pDriverInfo);
     * }
     */
    public static int AddPrinterDriverW(MemorySegment pName, int Level, MemorySegment pDriverInfo) {
        var mh$ = AddPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$4,"AddPrinterDriverExA");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterDriverExA(LPSTR pName, DWORD Level, PBYTE lpbDriverInfo, DWORD dwFileCopyFlags);
     * }
     */
    public static int AddPrinterDriverExA(MemorySegment pName, int Level, MemorySegment lpbDriverInfo, int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2911.const$5,"AddPrinterDriverExW");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterDriverExW(LPWSTR pName, DWORD Level, PBYTE lpbDriverInfo, DWORD dwFileCopyFlags);
     * }
     */
    public static int AddPrinterDriverExW(MemorySegment pName, int Level, MemorySegment lpbDriverInfo, int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$0,"EnumPrinterDriversA");
    }
    /**
     * {@snippet :
     * BOOL EnumPrinterDriversA(LPSTR pName, LPSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrinterDriversA(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$1,"EnumPrinterDriversW");
    }
    /**
     * {@snippet :
     * BOOL EnumPrinterDriversW(LPWSTR pName, LPWSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrinterDriversW(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$2,"GetPrinterDriverA");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriverA(HANDLE hPrinter, LPSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriverA(MemorySegment hPrinter, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$3,"GetPrinterDriverW");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriverW(HANDLE hPrinter, LPWSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriverW(MemorySegment hPrinter, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$4,"GetPrinterDriverDirectoryA");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriverDirectoryA(LPSTR pName, LPSTR pEnvironment, DWORD Level, LPBYTE pDriverDirectory, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriverDirectoryA(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pDriverDirectory, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$2912.const$5,"GetPrinterDriverDirectoryW");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriverDirectoryW(LPWSTR pName, LPWSTR pEnvironment, DWORD Level, LPBYTE pDriverDirectory, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriverDirectoryW(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pDriverDirectory, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$0,"DeletePrinterDriverA");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterDriverA(LPSTR pName, LPSTR pEnvironment, LPSTR pDriverName);
     * }
     */
    public static int DeletePrinterDriverA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pDriverName) {
        var mh$ = DeletePrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$1,"DeletePrinterDriverW");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterDriverW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pDriverName);
     * }
     */
    public static int DeletePrinterDriverW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pDriverName) {
        var mh$ = DeletePrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$2,"DeletePrinterDriverExA");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterDriverExA(LPSTR pName, LPSTR pEnvironment, LPSTR pDriverName, DWORD dwDeleteFlag, DWORD dwVersionFlag);
     * }
     */
    public static int DeletePrinterDriverExA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pDriverName, int dwDeleteFlag, int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$3,"DeletePrinterDriverExW");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterDriverExW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pDriverName, DWORD dwDeleteFlag, DWORD dwVersionFlag);
     * }
     */
    public static int DeletePrinterDriverExW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pDriverName, int dwDeleteFlag, int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$4,"AddPrintProcessorA");
    }
    /**
     * {@snippet :
     * BOOL AddPrintProcessorA(LPSTR pName, LPSTR pEnvironment, LPSTR pPathName, LPSTR pPrintProcessorName);
     * }
     */
    public static int AddPrintProcessorA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPathName, MemorySegment pPrintProcessorName) {
        var mh$ = AddPrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2913.const$5,"AddPrintProcessorW");
    }
    /**
     * {@snippet :
     * BOOL AddPrintProcessorW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pPathName, LPWSTR pPrintProcessorName);
     * }
     */
    public static int AddPrintProcessorW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPathName, MemorySegment pPrintProcessorName) {
        var mh$ = AddPrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$0,"EnumPrintProcessorsA");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintProcessorsA(LPSTR pName, LPSTR pEnvironment, DWORD Level, LPBYTE pPrintProcessorInfo, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintProcessorsA(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pPrintProcessorInfo, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintProcessorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$1,"EnumPrintProcessorsW");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintProcessorsW(LPWSTR pName, LPWSTR pEnvironment, DWORD Level, LPBYTE pPrintProcessorInfo, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintProcessorsW(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pPrintProcessorInfo, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintProcessorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$2,"GetPrintProcessorDirectoryA");
    }
    /**
     * {@snippet :
     * BOOL GetPrintProcessorDirectoryA(LPSTR pName, LPSTR pEnvironment, DWORD Level, LPBYTE pPrintProcessorInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrintProcessorDirectoryA(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pPrintProcessorInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$3,"GetPrintProcessorDirectoryW");
    }
    /**
     * {@snippet :
     * BOOL GetPrintProcessorDirectoryW(LPWSTR pName, LPWSTR pEnvironment, DWORD Level, LPBYTE pPrintProcessorInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrintProcessorDirectoryW(MemorySegment pName, MemorySegment pEnvironment, int Level, MemorySegment pPrintProcessorInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesA$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$4,"EnumPrintProcessorDatatypesA");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintProcessorDatatypesA(LPSTR pName, LPSTR pPrintProcessorName, DWORD Level, LPBYTE pDatatypes, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintProcessorDatatypesA(MemorySegment pName, MemorySegment pPrintProcessorName, int Level, MemorySegment pDatatypes, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesW$MH() {
        return RuntimeHelper.requireNonNull(constants$2914.const$5,"EnumPrintProcessorDatatypesW");
    }
    /**
     * {@snippet :
     * BOOL EnumPrintProcessorDatatypesW(LPWSTR pName, LPWSTR pPrintProcessorName, DWORD Level, LPBYTE pDatatypes, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPrintProcessorDatatypesW(MemorySegment pName, MemorySegment pPrintProcessorName, int Level, MemorySegment pDatatypes, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$0,"DeletePrintProcessorA");
    }
    /**
     * {@snippet :
     * BOOL DeletePrintProcessorA(LPSTR pName, LPSTR pEnvironment, LPSTR pPrintProcessorName);
     * }
     */
    public static int DeletePrintProcessorA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPrintProcessorName) {
        var mh$ = DeletePrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$1,"DeletePrintProcessorW");
    }
    /**
     * {@snippet :
     * BOOL DeletePrintProcessorW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pPrintProcessorName);
     * }
     */
    public static int DeletePrintProcessorW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPrintProcessorName) {
        var mh$ = DeletePrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$2,"StartDocPrinterA");
    }
    /**
     * {@snippet :
     * DWORD StartDocPrinterA(HANDLE hPrinter, DWORD Level, LPBYTE pDocInfo);
     * }
     */
    public static int StartDocPrinterA(MemorySegment hPrinter, int Level, MemorySegment pDocInfo) {
        var mh$ = StartDocPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$3,"StartDocPrinterW");
    }
    /**
     * {@snippet :
     * DWORD StartDocPrinterW(HANDLE hPrinter, DWORD Level, LPBYTE pDocInfo);
     * }
     */
    public static int StartDocPrinterW(MemorySegment hPrinter, int Level, MemorySegment pDocInfo) {
        var mh$ = StartDocPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$4,"StartPagePrinter");
    }
    /**
     * {@snippet :
     * BOOL StartPagePrinter(HANDLE hPrinter);
     * }
     */
    public static int StartPagePrinter(MemorySegment hPrinter) {
        var mh$ = StartPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WritePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2915.const$5,"WritePrinter");
    }
    /**
     * {@snippet :
     * BOOL WritePrinter(HANDLE hPrinter, LPVOID pBuf, DWORD cbBuf, LPDWORD pcWritten);
     * }
     */
    public static int WritePrinter(MemorySegment hPrinter, MemorySegment pBuf, int cbBuf, MemorySegment pcWritten) {
        var mh$ = WritePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlushPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$0,"FlushPrinter");
    }
    /**
     * {@snippet :
     * BOOL FlushPrinter(HANDLE hPrinter, LPVOID pBuf, DWORD cbBuf, LPDWORD pcWritten, DWORD cSleep);
     * }
     */
    public static int FlushPrinter(MemorySegment hPrinter, MemorySegment pBuf, int cbBuf, MemorySegment pcWritten, int cSleep) {
        var mh$ = FlushPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten, cSleep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$1,"EndPagePrinter");
    }
    /**
     * {@snippet :
     * BOOL EndPagePrinter(HANDLE hPrinter);
     * }
     */
    public static int EndPagePrinter(MemorySegment hPrinter) {
        var mh$ = EndPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$2,"AbortPrinter");
    }
    /**
     * {@snippet :
     * BOOL AbortPrinter(HANDLE hPrinter);
     * }
     */
    public static int AbortPrinter(MemorySegment hPrinter) {
        var mh$ = AbortPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$3,"ReadPrinter");
    }
    /**
     * {@snippet :
     * BOOL ReadPrinter(HANDLE hPrinter, LPVOID pBuf, DWORD cbBuf, LPDWORD pNoBytesRead);
     * }
     */
    public static int ReadPrinter(MemorySegment hPrinter, MemorySegment pBuf, int cbBuf, MemorySegment pNoBytesRead) {
        var mh$ = ReadPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pNoBytesRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDocPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$4,"EndDocPrinter");
    }
    /**
     * {@snippet :
     * BOOL EndDocPrinter(HANDLE hPrinter);
     * }
     */
    public static int EndDocPrinter(MemorySegment hPrinter) {
        var mh$ = EndDocPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$2916.const$5,"AddJobA");
    }
    /**
     * {@snippet :
     * BOOL AddJobA(HANDLE hPrinter, DWORD Level, LPBYTE pData, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int AddJobA(MemorySegment hPrinter, int Level, MemorySegment pData, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = AddJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$0,"AddJobW");
    }
    /**
     * {@snippet :
     * BOOL AddJobW(HANDLE hPrinter, DWORD Level, LPBYTE pData, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int AddJobW(MemorySegment hPrinter, int Level, MemorySegment pData, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = AddJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScheduleJob$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$1,"ScheduleJob");
    }
    /**
     * {@snippet :
     * BOOL ScheduleJob(HANDLE hPrinter, DWORD JobId);
     * }
     */
    public static int ScheduleJob(MemorySegment hPrinter, int JobId) {
        var mh$ = ScheduleJob$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$2,"PrinterProperties");
    }
    /**
     * {@snippet :
     * BOOL PrinterProperties(HWND hWnd, HANDLE hPrinter);
     * }
     */
    public static int PrinterProperties(MemorySegment hWnd, MemorySegment hPrinter) {
        var mh$ = PrinterProperties$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$3,"DocumentPropertiesA");
    }
    /**
     * {@snippet :
     * LONG DocumentPropertiesA(HWND hWnd, HANDLE hPrinter, LPSTR pDeviceName, PDEVMODEA pDevModeOutput, PDEVMODEA pDevModeInput, DWORD fMode);
     * }
     */
    public static int DocumentPropertiesA(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pDeviceName, MemorySegment pDevModeOutput, MemorySegment pDevModeInput, int fMode) {
        var mh$ = DocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$4,"DocumentPropertiesW");
    }
    /**
     * {@snippet :
     * LONG DocumentPropertiesW(HWND hWnd, HANDLE hPrinter, LPWSTR pDeviceName, PDEVMODEW pDevModeOutput, PDEVMODEW pDevModeInput, DWORD fMode);
     * }
     */
    public static int DocumentPropertiesW(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pDeviceName, MemorySegment pDevModeOutput, MemorySegment pDevModeInput, int fMode) {
        var mh$ = DocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$2917.const$5,"AdvancedDocumentPropertiesA");
    }
    /**
     * {@snippet :
     * LONG AdvancedDocumentPropertiesA(HWND hWnd, HANDLE hPrinter, LPSTR pDeviceName, PDEVMODEA pDevModeOutput, PDEVMODEA pDevModeInput);
     * }
     */
    public static int AdvancedDocumentPropertiesA(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pDeviceName, MemorySegment pDevModeOutput, MemorySegment pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$0,"AdvancedDocumentPropertiesW");
    }
    /**
     * {@snippet :
     * LONG AdvancedDocumentPropertiesW(HWND hWnd, HANDLE hPrinter, LPWSTR pDeviceName, PDEVMODEW pDevModeOutput, PDEVMODEW pDevModeInput);
     * }
     */
    public static int AdvancedDocumentPropertiesW(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pDeviceName, MemorySegment pDevModeOutput, MemorySegment pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtDeviceMode$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$1,"ExtDeviceMode");
    }
    /**
     * {@snippet :
     * LONG ExtDeviceMode(HWND hWnd, HANDLE hInst, LPDEVMODEA pDevModeOutput, LPSTR pDeviceName, LPSTR pPort, LPDEVMODEA pDevModeInput, LPSTR pProfile, DWORD fMode);
     * }
     */
    public static int ExtDeviceMode(MemorySegment hWnd, MemorySegment hInst, MemorySegment pDevModeOutput, MemorySegment pDeviceName, MemorySegment pPort, MemorySegment pDevModeInput, MemorySegment pProfile, int fMode) {
        var mh$ = ExtDeviceMode$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hInst, pDevModeOutput, pDeviceName, pPort, pDevModeInput, pProfile, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$2,"GetPrinterDataA");
    }
    /**
     * {@snippet :
     * DWORD GetPrinterDataA(HANDLE hPrinter, LPSTR pValueName, LPDWORD pType, LPBYTE pData, DWORD nSize, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDataA(MemorySegment hPrinter, MemorySegment pValueName, MemorySegment pType, MemorySegment pData, int nSize, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$3,"GetPrinterDataW");
    }
    /**
     * {@snippet :
     * DWORD GetPrinterDataW(HANDLE hPrinter, LPWSTR pValueName, LPDWORD pType, LPBYTE pData, DWORD nSize, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDataW(MemorySegment hPrinter, MemorySegment pValueName, MemorySegment pType, MemorySegment pData, int nSize, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$4,"GetPrinterDataExA");
    }
    /**
     * {@snippet :
     * DWORD GetPrinterDataExA(HANDLE hPrinter, LPCSTR pKeyName, LPCSTR pValueName, LPDWORD pType, LPBYTE pData, DWORD nSize, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDataExA(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName, MemorySegment pType, MemorySegment pData, int nSize, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2918.const$5,"GetPrinterDataExW");
    }
    /**
     * {@snippet :
     * DWORD GetPrinterDataExW(HANDLE hPrinter, LPCWSTR pKeyName, LPCWSTR pValueName, LPDWORD pType, LPBYTE pData, DWORD nSize, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDataExW(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName, MemorySegment pType, MemorySegment pData, int nSize, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$1,"EnumPrinterDataA");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterDataA(HANDLE hPrinter, DWORD dwIndex, LPSTR pValueName, DWORD cbValueName, LPDWORD pcbValueName, LPDWORD pType, LPBYTE pData, DWORD cbData, LPDWORD pcbData);
     * }
     */
    public static int EnumPrinterDataA(MemorySegment hPrinter, int dwIndex, MemorySegment pValueName, int cbValueName, MemorySegment pcbValueName, MemorySegment pType, MemorySegment pData, int cbData, MemorySegment pcbData) {
        var mh$ = EnumPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$2,"EnumPrinterDataW");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterDataW(HANDLE hPrinter, DWORD dwIndex, LPWSTR pValueName, DWORD cbValueName, LPDWORD pcbValueName, LPDWORD pType, LPBYTE pData, DWORD cbData, LPDWORD pcbData);
     * }
     */
    public static int EnumPrinterDataW(MemorySegment hPrinter, int dwIndex, MemorySegment pValueName, int cbValueName, MemorySegment pcbValueName, MemorySegment pType, MemorySegment pData, int cbData, MemorySegment pcbData) {
        var mh$ = EnumPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$3,"EnumPrinterDataExA");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterDataExA(HANDLE hPrinter, LPCSTR pKeyName, LPBYTE pEnumValues, DWORD cbEnumValues, LPDWORD pcbEnumValues, LPDWORD pnEnumValues);
     * }
     */
    public static int EnumPrinterDataExA(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pEnumValues, int cbEnumValues, MemorySegment pcbEnumValues, MemorySegment pnEnumValues) {
        var mh$ = EnumPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$4,"EnumPrinterDataExW");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterDataExW(HANDLE hPrinter, LPCWSTR pKeyName, LPBYTE pEnumValues, DWORD cbEnumValues, LPDWORD pcbEnumValues, LPDWORD pnEnumValues);
     * }
     */
    public static int EnumPrinterDataExW(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pEnumValues, int cbEnumValues, MemorySegment pcbEnumValues, MemorySegment pnEnumValues) {
        var mh$ = EnumPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$2919.const$5,"EnumPrinterKeyA");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterKeyA(HANDLE hPrinter, LPCSTR pKeyName, LPSTR pSubkey, DWORD cbSubkey, LPDWORD pcbSubkey);
     * }
     */
    public static int EnumPrinterKeyA(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pSubkey, int cbSubkey, MemorySegment pcbSubkey) {
        var mh$ = EnumPrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$0,"EnumPrinterKeyW");
    }
    /**
     * {@snippet :
     * DWORD EnumPrinterKeyW(HANDLE hPrinter, LPCWSTR pKeyName, LPWSTR pSubkey, DWORD cbSubkey, LPDWORD pcbSubkey);
     * }
     */
    public static int EnumPrinterKeyW(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pSubkey, int cbSubkey, MemorySegment pcbSubkey) {
        var mh$ = EnumPrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$1,"SetPrinterDataA");
    }
    /**
     * {@snippet :
     * DWORD SetPrinterDataA(HANDLE hPrinter, LPSTR pValueName, DWORD Type, LPBYTE pData, DWORD cbData);
     * }
     */
    public static int SetPrinterDataA(MemorySegment hPrinter, MemorySegment pValueName, int Type, MemorySegment pData, int cbData) {
        var mh$ = SetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$2,"SetPrinterDataW");
    }
    /**
     * {@snippet :
     * DWORD SetPrinterDataW(HANDLE hPrinter, LPWSTR pValueName, DWORD Type, LPBYTE pData, DWORD cbData);
     * }
     */
    public static int SetPrinterDataW(MemorySegment hPrinter, MemorySegment pValueName, int Type, MemorySegment pData, int cbData) {
        var mh$ = SetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$3,"SetPrinterDataExA");
    }
    /**
     * {@snippet :
     * DWORD SetPrinterDataExA(HANDLE hPrinter, LPCSTR pKeyName, LPCSTR pValueName, DWORD Type, LPBYTE pData, DWORD cbData);
     * }
     */
    public static int SetPrinterDataExA(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName, int Type, MemorySegment pData, int cbData) {
        var mh$ = SetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$4,"SetPrinterDataExW");
    }
    /**
     * {@snippet :
     * DWORD SetPrinterDataExW(HANDLE hPrinter, LPCWSTR pKeyName, LPCWSTR pValueName, DWORD Type, LPBYTE pData, DWORD cbData);
     * }
     */
    public static int SetPrinterDataExW(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName, int Type, MemorySegment pData, int cbData) {
        var mh$ = SetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$2920.const$5,"DeletePrinterDataA");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterDataA(HANDLE hPrinter, LPSTR pValueName);
     * }
     */
    public static int DeletePrinterDataA(MemorySegment hPrinter, MemorySegment pValueName) {
        var mh$ = DeletePrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$0,"DeletePrinterDataW");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterDataW(HANDLE hPrinter, LPWSTR pValueName);
     * }
     */
    public static int DeletePrinterDataW(MemorySegment hPrinter, MemorySegment pValueName) {
        var mh$ = DeletePrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$1,"DeletePrinterDataExA");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterDataExA(HANDLE hPrinter, LPCSTR pKeyName, LPCSTR pValueName);
     * }
     */
    public static int DeletePrinterDataExA(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName) {
        var mh$ = DeletePrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$2,"DeletePrinterDataExW");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterDataExW(HANDLE hPrinter, LPCWSTR pKeyName, LPCWSTR pValueName);
     * }
     */
    public static int DeletePrinterDataExW(MemorySegment hPrinter, MemorySegment pKeyName, MemorySegment pValueName) {
        var mh$ = DeletePrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$3,"DeletePrinterKeyA");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterKeyA(HANDLE hPrinter, LPCSTR pKeyName);
     * }
     */
    public static int DeletePrinterKeyA(MemorySegment hPrinter, MemorySegment pKeyName) {
        var mh$ = DeletePrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$2921.const$4,"DeletePrinterKeyW");
    }
    /**
     * {@snippet :
     * DWORD DeletePrinterKeyW(HANDLE hPrinter, LPCWSTR pKeyName);
     * }
     */
    public static int DeletePrinterKeyW(MemorySegment hPrinter, MemorySegment pKeyName) {
        var mh$ = DeletePrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE* PPRINTER_NOTIFY_OPTIONS_TYPE;
     * }
     */
    public static final AddressLayout PPRINTER_NOTIFY_OPTIONS_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE* LPPRINTER_NOTIFY_OPTIONS_TYPE;
     * }
     */
    public static final AddressLayout LPPRINTER_NOTIFY_OPTIONS_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_OPTIONS* PPRINTER_NOTIFY_OPTIONS;
     * }
     */
    public static final AddressLayout PPRINTER_NOTIFY_OPTIONS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_OPTIONS* LPPRINTER_NOTIFY_OPTIONS;
     * }
     */
    public static final AddressLayout LPPRINTER_NOTIFY_OPTIONS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_INFO_DATA* PPRINTER_NOTIFY_INFO_DATA;
     * }
     */
    public static final AddressLayout PPRINTER_NOTIFY_INFO_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_INFO_DATA* LPPRINTER_NOTIFY_INFO_DATA;
     * }
     */
    public static final AddressLayout LPPRINTER_NOTIFY_INFO_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_INFO* PPRINTER_NOTIFY_INFO;
     * }
     */
    public static final AddressLayout PPRINTER_NOTIFY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_NOTIFY_INFO* LPPRINTER_NOTIFY_INFO;
     * }
     */
    public static final AddressLayout LPPRINTER_NOTIFY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BINARY_CONTAINER* PBINARY_CONTAINER;
     * }
     */
    public static final AddressLayout PBINARY_CONTAINER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_DATA* PBIDI_DATA;
     * }
     */
    public static final AddressLayout PBIDI_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_DATA* LPBIDI_DATA;
     * }
     */
    public static final AddressLayout LPBIDI_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_REQUEST_DATA* PBIDI_REQUEST_DATA;
     * }
     */
    public static final AddressLayout PBIDI_REQUEST_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_REQUEST_DATA* LPBIDI_REQUEST_DATA;
     * }
     */
    public static final AddressLayout LPBIDI_REQUEST_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_REQUEST_CONTAINER* PBIDI_REQUEST_CONTAINER;
     * }
     */
    public static final AddressLayout PBIDI_REQUEST_CONTAINER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_REQUEST_CONTAINER* LPBIDI_REQUEST_CONTAINER;
     * }
     */
    public static final AddressLayout LPBIDI_REQUEST_CONTAINER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_RESPONSE_DATA* PBIDI_RESPONSE_DATA;
     * }
     */
    public static final AddressLayout PBIDI_RESPONSE_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_RESPONSE_DATA* LPBIDI_RESPONSE_DATA;
     * }
     */
    public static final AddressLayout LPBIDI_RESPONSE_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_RESPONSE_CONTAINER* PBIDI_RESPONSE_CONTAINER;
     * }
     */
    public static final AddressLayout PBIDI_RESPONSE_CONTAINER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _BIDI_RESPONSE_CONTAINER* LPBIDI_RESPONSE_CONTAINER;
     * }
     */
    public static final AddressLayout LPBIDI_RESPONSE_CONTAINER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum .BIDI_NULL = 0;
     * }
     */
    public static int BIDI_NULL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .BIDI_INT = 1;
     * }
     */
    public static int BIDI_INT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .BIDI_FLOAT = 2;
     * }
     */
    public static int BIDI_FLOAT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .BIDI_BOOL = 3;
     * }
     */
    public static int BIDI_BOOL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .BIDI_STRING = 4;
     * }
     */
    public static int BIDI_STRING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .BIDI_TEXT = 5;
     * }
     */
    public static int BIDI_TEXT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .BIDI_ENUM = 6;
     * }
     */
    public static int BIDI_ENUM() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .BIDI_BLOB = 7;
     * }
     */
    public static int BIDI_BLOB() {
        return (int)7L;
    }
    public static MethodHandle WaitForPrinterChange$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$1,"WaitForPrinterChange");
    }
    /**
     * {@snippet :
     * DWORD WaitForPrinterChange(HANDLE hPrinter, DWORD Flags);
     * }
     */
    public static int WaitForPrinterChange(MemorySegment hPrinter, int Flags) {
        var mh$ = WaitForPrinterChange$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindFirstPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$2,"FindFirstPrinterChangeNotification");
    }
    /**
     * {@snippet :
     * HANDLE FindFirstPrinterChangeNotification(HANDLE hPrinter, DWORD fdwFilter, DWORD fdwOptions, PVOID pPrinterNotifyOptions);
     * }
     */
    public static MemorySegment FindFirstPrinterChangeNotification(MemorySegment hPrinter, int fdwFilter, int fdwOptions, MemorySegment pPrinterNotifyOptions) {
        var mh$ = FindFirstPrinterChangeNotification$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hPrinter, fdwFilter, fdwOptions, pPrinterNotifyOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNextPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$3,"FindNextPrinterChangeNotification");
    }
    /**
     * {@snippet :
     * BOOL FindNextPrinterChangeNotification(HANDLE hChange, PDWORD pdwChange, LPVOID pvReserved, LPVOID* ppPrinterNotifyInfo);
     * }
     */
    public static int FindNextPrinterChangeNotification(MemorySegment hChange, MemorySegment pdwChange, MemorySegment pvReserved, MemorySegment ppPrinterNotifyInfo) {
        var mh$ = FindNextPrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange, pdwChange, pvReserved, ppPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrinterNotifyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$4,"FreePrinterNotifyInfo");
    }
    /**
     * {@snippet :
     * BOOL FreePrinterNotifyInfo(PPRINTER_NOTIFY_INFO pPrinterNotifyInfo);
     * }
     */
    public static int FreePrinterNotifyInfo(MemorySegment pPrinterNotifyInfo) {
        var mh$ = FreePrinterNotifyInfo$MH();
        try {
            return (int)mh$.invokeExact(pPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindClosePrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$2930.const$5,"FindClosePrinterChangeNotification");
    }
    /**
     * {@snippet :
     * BOOL FindClosePrinterChangeNotification(HANDLE hChange);
     * }
     */
    public static int FindClosePrinterChangeNotification(MemorySegment hChange) {
        var mh$ = FindClosePrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$0,"PrinterMessageBoxA");
    }
    /**
     * {@snippet :
     * DWORD PrinterMessageBoxA(HANDLE hPrinter, DWORD Error, HWND hWnd, LPSTR pText, LPSTR pCaption, DWORD dwType);
     * }
     */
    public static int PrinterMessageBoxA(MemorySegment hPrinter, int Error, MemorySegment hWnd, MemorySegment pText, MemorySegment pCaption, int dwType) {
        var mh$ = PrinterMessageBoxA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$1,"PrinterMessageBoxW");
    }
    /**
     * {@snippet :
     * DWORD PrinterMessageBoxW(HANDLE hPrinter, DWORD Error, HWND hWnd, LPWSTR pText, LPWSTR pCaption, DWORD dwType);
     * }
     */
    public static int PrinterMessageBoxW(MemorySegment hPrinter, int Error, MemorySegment hWnd, MemorySegment pText, MemorySegment pCaption, int dwType) {
        var mh$ = PrinterMessageBoxW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClosePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$2,"ClosePrinter");
    }
    /**
     * {@snippet :
     * BOOL ClosePrinter(HANDLE hPrinter);
     * }
     */
    public static int ClosePrinter(MemorySegment hPrinter) {
        var mh$ = ClosePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$3,"AddFormA");
    }
    /**
     * {@snippet :
     * BOOL AddFormA(HANDLE hPrinter, DWORD Level, LPBYTE pForm);
     * }
     */
    public static int AddFormA(MemorySegment hPrinter, int Level, MemorySegment pForm) {
        var mh$ = AddFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$4,"AddFormW");
    }
    /**
     * {@snippet :
     * BOOL AddFormW(HANDLE hPrinter, DWORD Level, LPBYTE pForm);
     * }
     */
    public static int AddFormW(MemorySegment hPrinter, int Level, MemorySegment pForm) {
        var mh$ = AddFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$2931.const$5,"DeleteFormA");
    }
    /**
     * {@snippet :
     * BOOL DeleteFormA(HANDLE hPrinter, LPSTR pFormName);
     * }
     */
    public static int DeleteFormA(MemorySegment hPrinter, MemorySegment pFormName) {
        var mh$ = DeleteFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$0,"DeleteFormW");
    }
    /**
     * {@snippet :
     * BOOL DeleteFormW(HANDLE hPrinter, LPWSTR pFormName);
     * }
     */
    public static int DeleteFormW(MemorySegment hPrinter, MemorySegment pFormName) {
        var mh$ = DeleteFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$1,"GetFormA");
    }
    /**
     * {@snippet :
     * BOOL GetFormA(HANDLE hPrinter, LPSTR pFormName, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetFormA(MemorySegment hPrinter, MemorySegment pFormName, int Level, MemorySegment pForm, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$2,"GetFormW");
    }
    /**
     * {@snippet :
     * BOOL GetFormW(HANDLE hPrinter, LPWSTR pFormName, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetFormW(MemorySegment hPrinter, MemorySegment pFormName, int Level, MemorySegment pForm, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$3,"SetFormA");
    }
    /**
     * {@snippet :
     * BOOL SetFormA(HANDLE hPrinter, LPSTR pFormName, DWORD Level, LPBYTE pForm);
     * }
     */
    public static int SetFormA(MemorySegment hPrinter, MemorySegment pFormName, int Level, MemorySegment pForm) {
        var mh$ = SetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$4,"SetFormW");
    }
    /**
     * {@snippet :
     * BOOL SetFormW(HANDLE hPrinter, LPWSTR pFormName, DWORD Level, LPBYTE pForm);
     * }
     */
    public static int SetFormW(MemorySegment hPrinter, MemorySegment pFormName, int Level, MemorySegment pForm) {
        var mh$ = SetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsA$MH() {
        return RuntimeHelper.requireNonNull(constants$2932.const$5,"EnumFormsA");
    }
    /**
     * {@snippet :
     * BOOL EnumFormsA(HANDLE hPrinter, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumFormsA(MemorySegment hPrinter, int Level, MemorySegment pForm, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumFormsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsW$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$0,"EnumFormsW");
    }
    /**
     * {@snippet :
     * BOOL EnumFormsW(HANDLE hPrinter, DWORD Level, LPBYTE pForm, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumFormsW(MemorySegment hPrinter, int Level, MemorySegment pForm, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumFormsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$1,"EnumMonitorsA");
    }
    /**
     * {@snippet :
     * BOOL EnumMonitorsA(LPSTR pName, DWORD Level, LPBYTE pMonitor, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumMonitorsA(MemorySegment pName, int Level, MemorySegment pMonitor, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumMonitorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$2,"EnumMonitorsW");
    }
    /**
     * {@snippet :
     * BOOL EnumMonitorsW(LPWSTR pName, DWORD Level, LPBYTE pMonitor, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumMonitorsW(MemorySegment pName, int Level, MemorySegment pMonitor, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumMonitorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$3,"AddMonitorA");
    }
    /**
     * {@snippet :
     * BOOL AddMonitorA(LPSTR pName, DWORD Level, LPBYTE pMonitors);
     * }
     */
    public static int AddMonitorA(MemorySegment pName, int Level, MemorySegment pMonitors) {
        var mh$ = AddMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$4,"AddMonitorW");
    }
    /**
     * {@snippet :
     * BOOL AddMonitorW(LPWSTR pName, DWORD Level, LPBYTE pMonitors);
     * }
     */
    public static int AddMonitorW(MemorySegment pName, int Level, MemorySegment pMonitors) {
        var mh$ = AddMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2933.const$5,"DeleteMonitorA");
    }
    /**
     * {@snippet :
     * BOOL DeleteMonitorA(LPSTR pName, LPSTR pEnvironment, LPSTR pMonitorName);
     * }
     */
    public static int DeleteMonitorA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pMonitorName) {
        var mh$ = DeleteMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$0,"DeleteMonitorW");
    }
    /**
     * {@snippet :
     * BOOL DeleteMonitorW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pMonitorName);
     * }
     */
    public static int DeleteMonitorW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pMonitorName) {
        var mh$ = DeleteMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsA$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$1,"EnumPortsA");
    }
    /**
     * {@snippet :
     * BOOL EnumPortsA(LPSTR pName, DWORD Level, LPBYTE pPort, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPortsA(MemorySegment pName, int Level, MemorySegment pPort, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPortsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsW$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$2,"EnumPortsW");
    }
    /**
     * {@snippet :
     * BOOL EnumPortsW(LPWSTR pName, DWORD Level, LPBYTE pPort, DWORD cbBuf, LPDWORD pcbNeeded, LPDWORD pcReturned);
     * }
     */
    public static int EnumPortsW(MemorySegment pName, int Level, MemorySegment pPort, int cbBuf, MemorySegment pcbNeeded, MemorySegment pcReturned) {
        var mh$ = EnumPortsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$3,"AddPortA");
    }
    /**
     * {@snippet :
     * BOOL AddPortA(LPSTR pName, HWND hWnd, LPSTR pMonitorName);
     * }
     */
    public static int AddPortA(MemorySegment pName, MemorySegment hWnd, MemorySegment pMonitorName) {
        var mh$ = AddPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$4,"AddPortW");
    }
    /**
     * {@snippet :
     * BOOL AddPortW(LPWSTR pName, HWND hWnd, LPWSTR pMonitorName);
     * }
     */
    public static int AddPortW(MemorySegment pName, MemorySegment hWnd, MemorySegment pMonitorName) {
        var mh$ = AddPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$2934.const$5,"ConfigurePortA");
    }
    /**
     * {@snippet :
     * BOOL ConfigurePortA(LPSTR pName, HWND hWnd, LPSTR pPortName);
     * }
     */
    public static int ConfigurePortA(MemorySegment pName, MemorySegment hWnd, MemorySegment pPortName) {
        var mh$ = ConfigurePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$0,"ConfigurePortW");
    }
    /**
     * {@snippet :
     * BOOL ConfigurePortW(LPWSTR pName, HWND hWnd, LPWSTR pPortName);
     * }
     */
    public static int ConfigurePortW(MemorySegment pName, MemorySegment hWnd, MemorySegment pPortName) {
        var mh$ = ConfigurePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$1,"DeletePortA");
    }
    /**
     * {@snippet :
     * BOOL DeletePortA(LPSTR pName, HWND hWnd, LPSTR pPortName);
     * }
     */
    public static int DeletePortA(MemorySegment pName, MemorySegment hWnd, MemorySegment pPortName) {
        var mh$ = DeletePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$2,"DeletePortW");
    }
    /**
     * {@snippet :
     * BOOL DeletePortW(LPWSTR pName, HWND hWnd, LPWSTR pPortName);
     * }
     */
    public static int DeletePortW(MemorySegment pName, MemorySegment hWnd, MemorySegment pPortName) {
        var mh$ = DeletePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle XcvDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$4,"XcvDataW");
    }
    /**
     * {@snippet :
     * BOOL XcvDataW(HANDLE hXcv, PCWSTR pszDataName, PBYTE pInputData, DWORD cbInputData, PBYTE pOutputData, DWORD cbOutputData, PDWORD pcbOutputNeeded, PDWORD pdwStatus);
     * }
     */
    public static int XcvDataW(MemorySegment hXcv, MemorySegment pszDataName, MemorySegment pInputData, int cbInputData, MemorySegment pOutputData, int cbOutputData, MemorySegment pcbOutputNeeded, MemorySegment pdwStatus) {
        var mh$ = XcvDataW$MH();
        try {
            return (int)mh$.invokeExact(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2935.const$5,"GetDefaultPrinterA");
    }
    /**
     * {@snippet :
     * BOOL GetDefaultPrinterA(LPSTR pszBuffer, LPDWORD pcchBuffer);
     * }
     */
    public static int GetDefaultPrinterA(MemorySegment pszBuffer, MemorySegment pcchBuffer) {
        var mh$ = GetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$0,"GetDefaultPrinterW");
    }
    /**
     * {@snippet :
     * BOOL GetDefaultPrinterW(LPWSTR pszBuffer, LPDWORD pcchBuffer);
     * }
     */
    public static int GetDefaultPrinterW(MemorySegment pszBuffer, MemorySegment pcchBuffer) {
        var mh$ = GetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$1,"SetDefaultPrinterA");
    }
    /**
     * {@snippet :
     * BOOL SetDefaultPrinterA(LPCSTR pszPrinter);
     * }
     */
    public static int SetDefaultPrinterA(MemorySegment pszPrinter) {
        var mh$ = SetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$2,"SetDefaultPrinterW");
    }
    /**
     * {@snippet :
     * BOOL SetDefaultPrinterW(LPCWSTR pszPrinter);
     * }
     */
    public static int SetDefaultPrinterW(MemorySegment pszPrinter) {
        var mh$ = SetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$3,"SetPortA");
    }
    /**
     * {@snippet :
     * BOOL SetPortA(LPSTR pName, LPSTR pPortName, DWORD dwLevel, LPBYTE pPortInfo);
     * }
     */
    public static int SetPortA(MemorySegment pName, MemorySegment pPortName, int dwLevel, MemorySegment pPortInfo) {
        var mh$ = SetPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$4,"SetPortW");
    }
    /**
     * {@snippet :
     * BOOL SetPortW(LPWSTR pName, LPWSTR pPortName, DWORD dwLevel, LPBYTE pPortInfo);
     * }
     */
    public static int SetPortW(MemorySegment pName, MemorySegment pPortName, int dwLevel, MemorySegment pPortInfo) {
        var mh$ = SetPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$2936.const$5,"AddPrinterConnectionA");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterConnectionA(LPSTR pName);
     * }
     */
    public static int AddPrinterConnectionA(MemorySegment pName) {
        var mh$ = AddPrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$0,"AddPrinterConnectionW");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterConnectionW(LPWSTR pName);
     * }
     */
    public static int AddPrinterConnectionW(MemorySegment pName) {
        var mh$ = AddPrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$1,"DeletePrinterConnectionA");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterConnectionA(LPSTR pName);
     * }
     */
    public static int DeletePrinterConnectionA(MemorySegment pName) {
        var mh$ = DeletePrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$2,"DeletePrinterConnectionW");
    }
    /**
     * {@snippet :
     * BOOL DeletePrinterConnectionW(LPWSTR pName);
     * }
     */
    public static int DeletePrinterConnectionW(MemorySegment pName) {
        var mh$ = DeletePrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConnectToPrinterDlg$MH() {
        return RuntimeHelper.requireNonNull(constants$2937.const$3,"ConnectToPrinterDlg");
    }
    /**
     * {@snippet :
     * HANDLE ConnectToPrinterDlg(HWND hwnd, DWORD Flags);
     * }
     */
    public static MemorySegment ConnectToPrinterDlg(MemorySegment hwnd, int Flags) {
        var mh$ = ConnectToPrinterDlg$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hwnd, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1A* PPROVIDOR_INFO_1A;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1A* LPPROVIDOR_INFO_1A;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1W* PPROVIDOR_INFO_1W;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1W* LPPROVIDOR_INFO_1W;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1A* PPROVIDOR_INFO_1;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_1A* LPPROVIDOR_INFO_1;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_1 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2A* PPROVIDOR_INFO_2A;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2A* LPPROVIDOR_INFO_2A;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_2A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2W* PPROVIDOR_INFO_2W;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2W* LPPROVIDOR_INFO_2W;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_2W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2A* PPROVIDOR_INFO_2;
     * }
     */
    public static final AddressLayout PPROVIDOR_INFO_2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PROVIDOR_INFO_2A* LPPROVIDOR_INFO_2;
     * }
     */
    public static final AddressLayout LPPROVIDOR_INFO_2 = RuntimeHelper.POINTER;
    public static MethodHandle AddPrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$4,"AddPrintProvidorA");
    }
    /**
     * {@snippet :
     * BOOL AddPrintProvidorA(LPSTR pName, DWORD Level, LPBYTE pProvidorInfo);
     * }
     */
    public static int AddPrintProvidorA(MemorySegment pName, int Level, MemorySegment pProvidorInfo) {
        var mh$ = AddPrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2939.const$5,"AddPrintProvidorW");
    }
    /**
     * {@snippet :
     * BOOL AddPrintProvidorW(LPWSTR pName, DWORD Level, LPBYTE pProvidorInfo);
     * }
     */
    public static int AddPrintProvidorW(MemorySegment pName, int Level, MemorySegment pProvidorInfo) {
        var mh$ = AddPrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$0,"DeletePrintProvidorA");
    }
    /**
     * {@snippet :
     * BOOL DeletePrintProvidorA(LPSTR pName, LPSTR pEnvironment, LPSTR pPrintProvidorName);
     * }
     */
    public static int DeletePrintProvidorA(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPrintProvidorName) {
        var mh$ = DeletePrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$1,"DeletePrintProvidorW");
    }
    /**
     * {@snippet :
     * BOOL DeletePrintProvidorW(LPWSTR pName, LPWSTR pEnvironment, LPWSTR pPrintProvidorName);
     * }
     */
    public static int DeletePrintProvidorW(MemorySegment pName, MemorySegment pEnvironment, MemorySegment pPrintProvidorName) {
        var mh$ = DeletePrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeA$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$2,"IsValidDevmodeA");
    }
    /**
     * {@snippet :
     * BOOL IsValidDevmodeA(PDEVMODEA pDevmode, size_t DevmodeSize);
     * }
     */
    public static int IsValidDevmodeA(MemorySegment pDevmode, long DevmodeSize) {
        var mh$ = IsValidDevmodeA$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeW$MH() {
        return RuntimeHelper.requireNonNull(constants$2940.const$3,"IsValidDevmodeW");
    }
    /**
     * {@snippet :
     * BOOL IsValidDevmodeW(PDEVMODEW pDevmode, size_t DevmodeSize);
     * }
     */
    public static int IsValidDevmodeW(MemorySegment pDevmode, long DevmodeSize) {
        var mh$ = IsValidDevmodeW$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _PRINTER_OPTION_FLAGS.PRINTER_OPTION_NO_CACHE = 1;
     * }
     */
    public static int PRINTER_OPTION_NO_CACHE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _PRINTER_OPTION_FLAGS.PRINTER_OPTION_CACHE = 2;
     * }
     */
    public static int PRINTER_OPTION_CACHE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _PRINTER_OPTION_FLAGS.PRINTER_OPTION_CLIENT_CHANGE = 4;
     * }
     */
    public static int PRINTER_OPTION_CLIENT_CHANGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _PRINTER_OPTION_FLAGS.PRINTER_OPTION_NO_CLIENT_DATA = 8;
     * }
     */
    public static int PRINTER_OPTION_NO_CLIENT_DATA() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSA* PPRINTER_OPTIONSA;
     * }
     */
    public static final AddressLayout PPRINTER_OPTIONSA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSA* LPPRINTER_OPTIONSA;
     * }
     */
    public static final AddressLayout LPPRINTER_OPTIONSA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSW* PPRINTER_OPTIONSW;
     * }
     */
    public static final AddressLayout PPRINTER_OPTIONSW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSW* LPPRINTER_OPTIONSW;
     * }
     */
    public static final AddressLayout LPPRINTER_OPTIONSW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSA* PPRINTER_OPTIONS;
     * }
     */
    public static final AddressLayout PPRINTER_OPTIONS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_OPTIONSA* LPPRINTER_OPTIONS;
     * }
     */
    public static final AddressLayout LPPRINTER_OPTIONS = RuntimeHelper.POINTER;
    public static MethodHandle OpenPrinter2A$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$4,"OpenPrinter2A");
    }
    /**
     * {@snippet :
     * BOOL OpenPrinter2A(LPCSTR pPrinterName, LPHANDLE phPrinter, PPRINTER_DEFAULTSA pDefault, PPRINTER_OPTIONSA pOptions);
     * }
     */
    public static int OpenPrinter2A(MemorySegment pPrinterName, MemorySegment phPrinter, MemorySegment pDefault, MemorySegment pOptions) {
        var mh$ = OpenPrinter2A$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinter2W$MH() {
        return RuntimeHelper.requireNonNull(constants$2941.const$5,"OpenPrinter2W");
    }
    /**
     * {@snippet :
     * BOOL OpenPrinter2W(LPCWSTR pPrinterName, LPHANDLE phPrinter, PPRINTER_DEFAULTSW pDefault, PPRINTER_OPTIONSW pOptions);
     * }
     */
    public static int OpenPrinter2W(MemorySegment pPrinterName, MemorySegment phPrinter, MemorySegment pDefault, MemorySegment pOptions) {
        var mh$ = OpenPrinter2W$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PRINTER_CONNECTION_INFO_1A* PPRINTER_CONNECTION_INFO_1A;
     * }
     */
    public static final AddressLayout PPRINTER_CONNECTION_INFO_1A = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_CONNECTION_INFO_1W* PPRINTER_CONNECTION_INFO_1W;
     * }
     */
    public static final AddressLayout PPRINTER_CONNECTION_INFO_1W = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PRINTER_CONNECTION_INFO_1A* PPRINTER_CONNECTION_INFO_1;
     * }
     */
    public static final AddressLayout PPRINTER_CONNECTION_INFO_1 = RuntimeHelper.POINTER;
    public static MethodHandle AddPrinterConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$0,"AddPrinterConnection2A");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterConnection2A(HWND hWnd, LPCSTR pszName, DWORD dwLevel, PVOID pConnectionInfo);
     * }
     */
    public static int AddPrinterConnection2A(MemorySegment hWnd, MemorySegment pszName, int dwLevel, MemorySegment pConnectionInfo) {
        var mh$ = AddPrinterConnection2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$1,"AddPrinterConnection2W");
    }
    /**
     * {@snippet :
     * BOOL AddPrinterConnection2W(HWND hWnd, LPCWSTR pszName, DWORD dwLevel, PVOID pConnectionInfo);
     * }
     */
    public static int AddPrinterConnection2W(MemorySegment hWnd, MemorySegment pszName, int dwLevel, MemorySegment pConnectionInfo) {
        var mh$ = AddPrinterConnection2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$2,"InstallPrinterDriverFromPackageA");
    }
    /**
     * {@snippet :
     * HRESULT InstallPrinterDriverFromPackageA(LPCSTR pszServer, LPCSTR pszInfPath, LPCSTR pszDriverName, LPCSTR pszEnvironment, DWORD dwFlags);
     * }
     */
    public static int InstallPrinterDriverFromPackageA(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszDriverName, MemorySegment pszEnvironment, int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$3,"InstallPrinterDriverFromPackageW");
    }
    /**
     * {@snippet :
     * HRESULT InstallPrinterDriverFromPackageW(LPCWSTR pszServer, LPCWSTR pszInfPath, LPCWSTR pszDriverName, LPCWSTR pszEnvironment, DWORD dwFlags);
     * }
     */
    public static int InstallPrinterDriverFromPackageW(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszDriverName, MemorySegment pszEnvironment, int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$4,"UploadPrinterDriverPackageA");
    }
    /**
     * {@snippet :
     * HRESULT UploadPrinterDriverPackageA(LPCSTR pszServer, LPCSTR pszInfPath, LPCSTR pszEnvironment, DWORD dwFlags, HWND hwnd, LPSTR pszDestInfPath, PULONG pcchDestInfPath);
     * }
     */
    public static int UploadPrinterDriverPackageA(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszEnvironment, int dwFlags, MemorySegment hwnd, MemorySegment pszDestInfPath, MemorySegment pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$2943.const$5,"UploadPrinterDriverPackageW");
    }
    /**
     * {@snippet :
     * HRESULT UploadPrinterDriverPackageW(LPCWSTR pszServer, LPCWSTR pszInfPath, LPCWSTR pszEnvironment, DWORD dwFlags, HWND hwnd, LPWSTR pszDestInfPath, PULONG pcchDestInfPath);
     * }
     */
    public static int UploadPrinterDriverPackageW(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszEnvironment, int dwFlags, MemorySegment hwnd, MemorySegment pszDestInfPath, MemorySegment pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CORE_PRINTER_DRIVERA* PCORE_PRINTER_DRIVERA;
     * }
     */
    public static final AddressLayout PCORE_PRINTER_DRIVERA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CORE_PRINTER_DRIVERW* PCORE_PRINTER_DRIVERW;
     * }
     */
    public static final AddressLayout PCORE_PRINTER_DRIVERW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CORE_PRINTER_DRIVERA* PCORE_PRINTER_DRIVER;
     * }
     */
    public static final AddressLayout PCORE_PRINTER_DRIVER = RuntimeHelper.POINTER;
    public static MethodHandle GetCorePrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$2944.const$4,"GetCorePrinterDriversA");
    }
    /**
     * {@snippet :
     * HRESULT GetCorePrinterDriversA(LPCSTR pszServer, LPCSTR pszEnvironment, LPCSTR pszzCoreDriverDependencies, DWORD cCorePrinterDrivers, PCORE_PRINTER_DRIVERA pCorePrinterDrivers);
     * }
     */
    public static int GetCorePrinterDriversA(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment pszzCoreDriverDependencies, int cCorePrinterDrivers, MemorySegment pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCorePrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$2944.const$5,"GetCorePrinterDriversW");
    }
    /**
     * {@snippet :
     * HRESULT GetCorePrinterDriversW(LPCWSTR pszServer, LPCWSTR pszEnvironment, LPCWSTR pszzCoreDriverDependencies, DWORD cCorePrinterDrivers, PCORE_PRINTER_DRIVERW pCorePrinterDrivers);
     * }
     */
    public static int GetCorePrinterDriversW(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment pszzCoreDriverDependencies, int cCorePrinterDrivers, MemorySegment pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledA$MH() {
        return RuntimeHelper.requireNonNull(constants$2945.const$1,"CorePrinterDriverInstalledA");
    }
    /**
     * {@snippet :
     * HRESULT CorePrinterDriverInstalledA(LPCSTR pszServer, LPCSTR pszEnvironment, GUID CoreDriverGUID, FILETIME ftDriverDate, DWORDLONG dwlDriverVersion, BOOL* pbDriverInstalled);
     * }
     */
    public static int CorePrinterDriverInstalledA(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment CoreDriverGUID, MemorySegment ftDriverDate, long dwlDriverVersion, MemorySegment pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledW$MH() {
        return RuntimeHelper.requireNonNull(constants$2945.const$2,"CorePrinterDriverInstalledW");
    }
    /**
     * {@snippet :
     * HRESULT CorePrinterDriverInstalledW(LPCWSTR pszServer, LPCWSTR pszEnvironment, GUID CoreDriverGUID, FILETIME ftDriverDate, DWORDLONG dwlDriverVersion, BOOL* pbDriverInstalled);
     * }
     */
    public static int CorePrinterDriverInstalledW(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment CoreDriverGUID, MemorySegment ftDriverDate, long dwlDriverVersion, MemorySegment pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathA$MH() {
        return RuntimeHelper.requireNonNull(constants$2945.const$3,"GetPrinterDriverPackagePathA");
    }
    /**
     * {@snippet :
     * HRESULT GetPrinterDriverPackagePathA(LPCSTR pszServer, LPCSTR pszEnvironment, LPCSTR pszLanguage, LPCSTR pszPackageID, LPSTR pszDriverPackageCab, DWORD cchDriverPackageCab, LPDWORD pcchRequiredSize);
     * }
     */
    public static int GetPrinterDriverPackagePathA(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment pszLanguage, MemorySegment pszPackageID, MemorySegment pszDriverPackageCab, int cchDriverPackageCab, MemorySegment pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathW$MH() {
        return RuntimeHelper.requireNonNull(constants$2945.const$4,"GetPrinterDriverPackagePathW");
    }
    /**
     * {@snippet :
     * HRESULT GetPrinterDriverPackagePathW(LPCWSTR pszServer, LPCWSTR pszEnvironment, LPCWSTR pszLanguage, LPCWSTR pszPackageID, LPWSTR pszDriverPackageCab, DWORD cchDriverPackageCab, LPDWORD pcchRequiredSize);
     * }
     */
    public static int GetPrinterDriverPackagePathW(MemorySegment pszServer, MemorySegment pszEnvironment, MemorySegment pszLanguage, MemorySegment pszPackageID, MemorySegment pszDriverPackageCab, int cchDriverPackageCab, MemorySegment pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$2945.const$5,"DeletePrinterDriverPackageA");
    }
    /**
     * {@snippet :
     * HRESULT DeletePrinterDriverPackageA(LPCSTR pszServer, LPCSTR pszInfPath, LPCSTR pszEnvironment);
     * }
     */
    public static int DeletePrinterDriverPackageA(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$2946.const$0,"DeletePrinterDriverPackageW");
    }
    /**
     * {@snippet :
     * HRESULT DeletePrinterDriverPackageW(LPCWSTR pszServer, LPCWSTR pszInfPath, LPCWSTR pszEnvironment);
     * }
     */
    public static int DeletePrinterDriverPackageW(MemorySegment pszServer, MemorySegment pszInfPath, MemorySegment pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeString = 1;
     * }
     */
    public static int kPropertyTypeString() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeInt32 = 2;
     * }
     */
    public static int kPropertyTypeInt32() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeInt64 = 3;
     * }
     */
    public static int kPropertyTypeInt64() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeByte = 4;
     * }
     */
    public static int kPropertyTypeByte() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeTime = 5;
     * }
     */
    public static int kPropertyTypeTime() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeDevMode = 6;
     * }
     */
    public static int kPropertyTypeDevMode() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeSD = 7;
     * }
     */
    public static int kPropertyTypeSD() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeNotificationReply = 8;
     * }
     */
    public static int kPropertyTypeNotificationReply() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeNotificationOptions = 9;
     * }
     */
    public static int kPropertyTypeNotificationOptions() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .kPropertyTypeBuffer = 10;
     * }
     */
    public static int kPropertyTypeBuffer() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum .kAddingDocumentSequence = 0;
     * }
     */
    public static int kAddingDocumentSequence() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .kDocumentSequenceAdded = 1;
     * }
     */
    public static int kDocumentSequenceAdded() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .kAddingFixedDocument = 2;
     * }
     */
    public static int kAddingFixedDocument() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .kFixedDocumentAdded = 3;
     * }
     */
    public static int kFixedDocumentAdded() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .kAddingFixedPage = 4;
     * }
     */
    public static int kAddingFixedPage() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum .kFixedPageAdded = 5;
     * }
     */
    public static int kFixedPageAdded() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum .kResourceAdded = 6;
     * }
     */
    public static int kResourceAdded() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum .kFontAdded = 7;
     * }
     */
    public static int kFontAdded() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum .kImageAdded = 8;
     * }
     */
    public static int kImageAdded() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum .kXpsDocumentCommitted = 9;
     * }
     */
    public static int kXpsDocumentCommitted() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum .kJobProduction = 1;
     * }
     */
    public static int kJobProduction() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .kJobConsumption = 2;
     * }
     */
    public static int kJobConsumption() {
        return (int)2L;
    }
    public static MethodHandle ReportJobProcessingProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$3,"ReportJobProcessingProgress");
    }
    /**
     * {@snippet :
     * HRESULT ReportJobProcessingProgress(HANDLE printerHandle, ULONG jobId, EPrintXPSJobOperation jobOperation, EPrintXPSJobProgress jobProgress);
     * }
     */
    public static int ReportJobProcessingProgress(MemorySegment printerHandle, int jobId, int jobOperation, int jobProgress) {
        var mh$ = ReportJobProcessingProgress$MH();
        try {
            return (int)mh$.invokeExact(printerHandle, jobId, jobOperation, jobProgress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2A$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$4,"GetPrinterDriver2A");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriver2A(HWND hWnd, HANDLE hPrinter, LPSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriver2A(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriver2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2W$MH() {
        return RuntimeHelper.requireNonNull(constants$2948.const$5,"GetPrinterDriver2W");
    }
    /**
     * {@snippet :
     * BOOL GetPrinterDriver2W(HWND hWnd, HANDLE hPrinter, LPWSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD cbBuf, LPDWORD pcbNeeded);
     * }
     */
    public static int GetPrinterDriver2W(MemorySegment hWnd, MemorySegment hPrinter, MemorySegment pEnvironment, int Level, MemorySegment pDriverInfo, int cbBuf, MemorySegment pcbNeeded) {
        var mh$ = GetPrinterDriver2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .PRINT_EXECUTION_CONTEXT_APPLICATION = 0;
     * }
     */
    public static int PRINT_EXECUTION_CONTEXT_APPLICATION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE = 1;
     * }
     */
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST = 2;
     * }
     */
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE = 3;
     * }
     */
    public static int PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .PRINT_EXECUTION_CONTEXT_WOW64 = 4;
     * }
     */
    public static int PRINT_EXECUTION_CONTEXT_WOW64() {
        return (int)4L;
    }
    public static MethodHandle GetPrintExecutionData$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$3,"GetPrintExecutionData");
    }
    /**
     * {@snippet :
     * BOOL GetPrintExecutionData(PRINT_EXECUTION_DATA* pData);
     * }
     */
    public static int GetPrintExecutionData(MemorySegment pData) {
        var mh$ = GetPrintExecutionData$MH();
        try {
            return (int)mh$.invokeExact(pData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobNamedPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$4,"GetJobNamedPropertyValue");
    }
    /**
     * {@snippet :
     * DWORD GetJobNamedPropertyValue(HANDLE hPrinter, DWORD JobId, PCWSTR pszName, PrintPropertyValue* pValue);
     * }
     */
    public static int GetJobNamedPropertyValue(MemorySegment hPrinter, int JobId, MemorySegment pszName, MemorySegment pValue) {
        var mh$ = GetJobNamedPropertyValue$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName, pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$2949.const$5,"FreePrintPropertyValue");
    }
    /**
     * {@snippet :
     * void FreePrintPropertyValue(PrintPropertyValue* pValue);
     * }
     */
    public static void FreePrintPropertyValue(MemorySegment pValue) {
        var mh$ = FreePrintPropertyValue$MH();
        try {
            mh$.invokeExact(pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintNamedPropertyArray$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$0,"FreePrintNamedPropertyArray");
    }
    /**
     * {@snippet :
     * void FreePrintNamedPropertyArray(DWORD cProperties, PrintNamedProperty** ppProperties);
     * }
     */
    public static void FreePrintNamedPropertyArray(int cProperties, MemorySegment ppProperties) {
        var mh$ = FreePrintNamedPropertyArray$MH();
        try {
            mh$.invokeExact(cProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$1,"SetJobNamedProperty");
    }
    /**
     * {@snippet :
     * DWORD SetJobNamedProperty(HANDLE hPrinter, DWORD JobId, const PrintNamedProperty* pProperty);
     * }
     */
    public static int SetJobNamedProperty(MemorySegment hPrinter, int JobId, MemorySegment pProperty) {
        var mh$ = SetJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$2,"DeleteJobNamedProperty");
    }
    /**
     * {@snippet :
     * DWORD DeleteJobNamedProperty(HANDLE hPrinter, DWORD JobId, PCWSTR pszName);
     * }
     */
    public static int DeleteJobNamedProperty(MemorySegment hPrinter, int JobId, MemorySegment pszName) {
        var mh$ = DeleteJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobNamedProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$3,"EnumJobNamedProperties");
    }
    /**
     * {@snippet :
     * DWORD EnumJobNamedProperties(HANDLE hPrinter, DWORD JobId, DWORD* pcProperties, PrintNamedProperty** ppProperties);
     * }
     */
    public static int EnumJobNamedProperties(MemorySegment hPrinter, int JobId, MemorySegment pcProperties, MemorySegment ppProperties) {
        var mh$ = EnumJobNamedProperties$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pcProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintOutputInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$4,"GetPrintOutputInfo");
    }
    /**
     * {@snippet :
     * HRESULT GetPrintOutputInfo(HWND hWnd, PCWSTR pszPrinter, HANDLE* phFile, PWSTR* ppszOutputFile);
     * }
     */
    public static int GetPrintOutputInfo(MemorySegment hWnd, MemorySegment pszPrinter, MemorySegment phFile, MemorySegment ppszOutputFile) {
        var mh$ = GetPrintOutputInfo$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszPrinter, phFile, ppszOutputFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _calloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2950.const$6,"_calloc_base");
    }
    /**
     * {@snippet :
     * void* _calloc_base(size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _calloc_base(long _Count, long _Size) {
        var mh$ = _calloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$0,"calloc");
    }
    /**
     * {@snippet :
     * void* calloc(size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment calloc(long _Count, long _Size) {
        var mh$ = calloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _callnewh$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$1,"_callnewh");
    }
    /**
     * {@snippet :
     * int _callnewh(size_t _Size);
     * }
     */
    public static int _callnewh(long _Size) {
        var mh$ = _callnewh$MH();
        try {
            return (int)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _expand$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$2,"_expand");
    }
    /**
     * {@snippet :
     * void* _expand(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment _expand(MemorySegment _Block, long _Size) {
        var mh$ = _expand$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _free_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$3,"_free_base");
    }
    /**
     * {@snippet :
     * void _free_base(void* _Block);
     * }
     */
    public static void _free_base(MemorySegment _Block) {
        var mh$ = _free_base$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$4,"free");
    }
    /**
     * {@snippet :
     * void free(void* _Block);
     * }
     */
    public static void free(MemorySegment _Block) {
        var mh$ = free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _malloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2951.const$5,"_malloc_base");
    }
    /**
     * {@snippet :
     * void* _malloc_base(size_t _Size);
     * }
     */
    public static MemorySegment _malloc_base(long _Size) {
        var mh$ = _malloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$0,"malloc");
    }
    /**
     * {@snippet :
     * void* malloc(size_t _Size);
     * }
     */
    public static MemorySegment malloc(long _Size) {
        var mh$ = malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$1,"_msize_base");
    }
    /**
     * {@snippet :
     * size_t _msize_base(void* _Block);
     * }
     */
    public static long _msize_base(MemorySegment _Block) {
        var mh$ = _msize_base$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$2,"_msize");
    }
    /**
     * {@snippet :
     * size_t _msize(void* _Block);
     * }
     */
    public static long _msize(MemorySegment _Block) {
        var mh$ = _msize$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _realloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$3,"_realloc_base");
    }
    /**
     * {@snippet :
     * void* _realloc_base(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment _realloc_base(MemorySegment _Block, long _Size) {
        var mh$ = _realloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$4,"realloc");
    }
    /**
     * {@snippet :
     * void* realloc(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment realloc(MemorySegment _Block, long _Size) {
        var mh$ = realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2952.const$6,"_recalloc_base");
    }
    /**
     * {@snippet :
     * void* _recalloc_base(void* _Block, size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _recalloc_base(MemorySegment _Block, long _Count, long _Size) {
        var mh$ = _recalloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$0,"_recalloc");
    }
    /**
     * {@snippet :
     * void* _recalloc(void* _Block, size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _recalloc(MemorySegment _Block, long _Count, long _Size) {
        var mh$ = _recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$1,"_aligned_free");
    }
    /**
     * {@snippet :
     * void _aligned_free(void* _Block);
     * }
     */
    public static void _aligned_free(MemorySegment _Block) {
        var mh$ = _aligned_free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$2,"_aligned_malloc");
    }
    /**
     * {@snippet :
     * void* _aligned_malloc(size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_malloc(long _Size, long _Alignment) {
        var mh$ = _aligned_malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$4,"_aligned_offset_malloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_malloc(long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_msize$MH() {
        return RuntimeHelper.requireNonNull(constants$2953.const$5,"_aligned_msize");
    }
    /**
     * {@snippet :
     * size_t _aligned_msize(void* _Block, size_t _Alignment, size_t _Offset);
     * }
     */
    public static long _aligned_msize(MemorySegment _Block, long _Alignment, long _Offset) {
        var mh$ = _aligned_msize$MH();
        try {
            return (long)mh$.invokeExact(_Block, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$1,"_aligned_offset_realloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_realloc(void* _Block, size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_realloc(MemorySegment _Block, long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$3,"_aligned_offset_recalloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_recalloc(void* _Block, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_recalloc(MemorySegment _Block, long _Count, long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$4,"_aligned_realloc");
    }
    /**
     * {@snippet :
     * void* _aligned_realloc(void* _Block, size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_realloc(MemorySegment _Block, long _Size, long _Alignment) {
        var mh$ = _aligned_realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2954.const$5,"_aligned_recalloc");
    }
    /**
     * {@snippet :
     * void* _aligned_recalloc(void* _Block, size_t _Count, size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_recalloc(MemorySegment _Block, long _Count, long _Size, long _Alignment) {
        var mh$ = _aligned_recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef double max_align_t;
     * }
     */
    public static final OfDouble max_align_t = JAVA_DOUBLE;
    public static MethodHandle bsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2955.const$3,"bsearch_s");
    }
    /**
     * {@snippet :
     * void* bsearch_s(void* _Key, void* _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment bsearch_s(MemorySegment _Key, MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = bsearch_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2955.const$5,"qsort_s");
    }
    /**
     * {@snippet :
     * void qsort_s(void* _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static void qsort_s(MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = qsort_s$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$1,"bsearch");
    }
    /**
     * {@snippet :
     * void* bsearch(void* _Key, void* _Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment bsearch(MemorySegment _Key, MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = bsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$3,"qsort");
    }
    /**
     * {@snippet :
     * void qsort(void* _Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static void qsort(MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = qsort$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2956.const$5,"_lfind_s");
    }
    /**
     * {@snippet :
     * void* _lfind_s(void* _Key, void* _Base, unsigned int* _NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment _lfind_s(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = _lfind_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$1,"_lfind");
    }
    /**
     * {@snippet :
     * void* _lfind(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment _lfind(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = _lfind$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$2,"_lsearch_s");
    }
    /**
     * {@snippet :
     * void* _lsearch_s(void* _Key, void* _Base, unsigned int* _NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment _lsearch_s(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = _lsearch_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$3,"_lsearch");
    }
    /**
     * {@snippet :
     * void* _lsearch(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment _lsearch(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = _lsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$4,"lfind");
    }
    /**
     * {@snippet :
     * void* lfind(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment lfind(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = lfind$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$2957.const$5,"lsearch");
    }
    /**
     * {@snippet :
     * void* lsearch(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment lsearch(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = lsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$1,"_itow_s");
    }
    /**
     * {@snippet :
     * errno_t _itow_s(int _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _itow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _itow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$2,"_itow");
    }
    /**
     * {@snippet :
     * wchar_t* _itow(int _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _itow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _itow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$3,"_ltow_s");
    }
    /**
     * {@snippet :
     * errno_t _ltow_s(long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ltow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ltow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$4,"_ltow");
    }
    /**
     * {@snippet :
     * wchar_t* _ltow(long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ltow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ltow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2958.const$5,"_ultow_s");
    }
    /**
     * {@snippet :
     * errno_t _ultow_s(unsigned long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ultow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ultow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$0,"_ultow");
    }
    /**
     * {@snippet :
     * wchar_t* _ultow(unsigned long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ultow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ultow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstod$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$2,"wcstod");
    }
    /**
     * {@snippet :
     * double wcstod(const wchar_t* _String, wchar_t** _EndPtr);
     * }
     */
    public static double wcstod(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = wcstod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$4,"_wcstod_l");
    }
    /**
     * {@snippet :
     * double _wcstod_l(const wchar_t* _String, wchar_t** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _wcstod_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _wcstod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstol$MH() {
        return RuntimeHelper.requireNonNull(constants$2959.const$5,"wcstol");
    }
    /**
     * {@snippet :
     * long wcstol(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static int wcstol(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$0,"_wcstol_l");
    }
    /**
     * {@snippet :
     * long _wcstol_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _wcstol_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoll$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$2,"wcstoll");
    }
    /**
     * {@snippet :
     * long long wcstoll(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long wcstoll(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$4,"_wcstoll_l");
    }
    /**
     * {@snippet :
     * long long _wcstoll_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoll_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoul$MH() {
        return RuntimeHelper.requireNonNull(constants$2960.const$5,"wcstoul");
    }
    /**
     * {@snippet :
     * unsigned long wcstoul(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static int wcstoul(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$0,"_wcstoul_l");
    }
    /**
     * {@snippet :
     * unsigned long _wcstoul_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _wcstoul_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoull$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$1,"wcstoull");
    }
    /**
     * {@snippet :
     * unsigned long long wcstoull(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long wcstoull(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$2,"_wcstoull_l");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoull_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoull_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstold$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$3,"wcstold");
    }
    /**
     * {@snippet :
     * long double wcstold(const wchar_t* _String, wchar_t** _EndPtr);
     * }
     */
    public static double wcstold(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = wcstold$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstold_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$4,"_wcstold_l");
    }
    /**
     * {@snippet :
     * long double _wcstold_l(const wchar_t* _String, wchar_t** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _wcstold_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _wcstold_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstof$MH() {
        return RuntimeHelper.requireNonNull(constants$2961.const$6,"wcstof");
    }
    /**
     * {@snippet :
     * float wcstof(const wchar_t* _String, wchar_t** _EndPtr);
     * }
     */
    public static float wcstof(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = wcstof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$1,"_wcstof_l");
    }
    /**
     * {@snippet :
     * float _wcstof_l(const wchar_t* _String, wchar_t** _EndPtr, _locale_t _Locale);
     * }
     */
    public static float _wcstof_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _wcstof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$3,"_wtof");
    }
    /**
     * {@snippet :
     * double _wtof(const wchar_t* _String);
     * }
     */
    public static double _wtof(MemorySegment _String) {
        var mh$ = _wtof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$4,"_wtof_l");
    }
    /**
     * {@snippet :
     * double _wtof_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static double _wtof_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi$MH() {
        return RuntimeHelper.requireNonNull(constants$2962.const$5,"_wtoi");
    }
    /**
     * {@snippet :
     * int _wtoi(const wchar_t* _String);
     * }
     */
    public static int _wtoi(MemorySegment _String) {
        var mh$ = _wtoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$0,"_wtoi_l");
    }
    /**
     * {@snippet :
     * int _wtoi_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static int _wtoi_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$1,"_wtol");
    }
    /**
     * {@snippet :
     * long _wtol(const wchar_t* _String);
     * }
     */
    public static int _wtol(MemorySegment _String) {
        var mh$ = _wtol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$2,"_wtol_l");
    }
    /**
     * {@snippet :
     * long _wtol_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static int _wtol_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$3,"_wtoll");
    }
    /**
     * {@snippet :
     * long long _wtoll(const wchar_t* _String);
     * }
     */
    public static long _wtoll(MemorySegment _String) {
        var mh$ = _wtoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$4,"_wtoll_l");
    }
    /**
     * {@snippet :
     * long long _wtoll_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static long _wtoll_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2963.const$6,"_i64tow_s");
    }
    /**
     * {@snippet :
     * errno_t _i64tow_s(long long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _i64tow_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _i64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$1,"_i64tow");
    }
    /**
     * {@snippet :
     * wchar_t* _i64tow(long long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _i64tow(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _i64tow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$2,"_ui64tow_s");
    }
    /**
     * {@snippet :
     * errno_t _ui64tow_s(unsigned long long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ui64tow_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ui64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$3,"_ui64tow");
    }
    /**
     * {@snippet :
     * wchar_t* _ui64tow(unsigned long long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ui64tow(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ui64tow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$4,"_wtoi64");
    }
    /**
     * {@snippet :
     * long long _wtoi64(const wchar_t* _String);
     * }
     */
    public static long _wtoi64(MemorySegment _String) {
        var mh$ = _wtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2964.const$5,"_wtoi64_l");
    }
    /**
     * {@snippet :
     * long long _wtoi64_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static long _wtoi64_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$0,"_wcstoi64");
    }
    /**
     * {@snippet :
     * long long _wcstoi64(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long _wcstoi64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _wcstoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$1,"_wcstoi64_l");
    }
    /**
     * {@snippet :
     * long long _wcstoi64_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoi64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$2,"_wcstoui64");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoui64(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long _wcstoui64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _wcstoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$3,"_wcstoui64_l");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoui64_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoui64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$4,"_wfullpath");
    }
    /**
     * {@snippet :
     * wchar_t* _wfullpath(wchar_t* _Buffer, const wchar_t* _Path, size_t _BufferCount);
     * }
     */
    public static MemorySegment _wfullpath(MemorySegment _Buffer, MemorySegment _Path, long _BufferCount) {
        var mh$ = _wfullpath$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2965.const$6,"_wmakepath_s");
    }
    /**
     * {@snippet :
     * errno_t _wmakepath_s(wchar_t* _Buffer, size_t _BufferCount, const wchar_t* _Drive, const wchar_t* _Dir, const wchar_t* _Filename, const wchar_t* _Ext);
     * }
     */
    public static int _wmakepath_s(MemorySegment _Buffer, long _BufferCount, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wmakepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath$MH() {
        return RuntimeHelper.requireNonNull(constants$2966.const$1,"_wmakepath");
    }
    /**
     * {@snippet :
     * void _wmakepath(wchar_t* _Buffer, const wchar_t* _Drive, const wchar_t* _Dir, const wchar_t* _Filename, const wchar_t* _Ext);
     * }
     */
    public static void _wmakepath(MemorySegment _Buffer, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wmakepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$2966.const$2,"_wperror");
    }
    /**
     * {@snippet :
     * void _wperror(const wchar_t* _ErrorMessage);
     * }
     */
    public static void _wperror(MemorySegment _ErrorMessage) {
        var mh$ = _wperror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$2966.const$3,"_wsplitpath");
    }
    /**
     * {@snippet :
     * void _wsplitpath(const wchar_t* _FullPath, wchar_t* _Drive, wchar_t* _Dir, wchar_t* _Filename, wchar_t* _Ext);
     * }
     */
    public static void _wsplitpath(MemorySegment _FullPath, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wsplitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2966.const$5,"_wsplitpath_s");
    }
    /**
     * {@snippet :
     * errno_t _wsplitpath_s(const wchar_t* _FullPath, wchar_t* _Drive, size_t _DriveCount, wchar_t* _Dir, size_t _DirCount, wchar_t* _Filename, size_t _FilenameCount, wchar_t* _Ext, size_t _ExtCount);
     * }
     */
    public static int _wsplitpath_s(MemorySegment _FullPath, MemorySegment _Drive, long _DriveCount, MemorySegment _Dir, long _DirCount, MemorySegment _Filename, long _FilenameCount, MemorySegment _Ext, long _ExtCount) {
        var mh$ = _wsplitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wdupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$0,"_wdupenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wdupenv_s(wchar_t** _Buffer, size_t* _BufferCount, const wchar_t* _VarName);
     * }
     */
    public static int _wdupenv_s(MemorySegment _Buffer, MemorySegment _BufferCount, MemorySegment _VarName) {
        var mh$ = _wdupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$1,"_wgetenv");
    }
    /**
     * {@snippet :
     * wchar_t* _wgetenv(const wchar_t* _VarName);
     * }
     */
    public static MemorySegment _wgetenv(MemorySegment _VarName) {
        var mh$ = _wgetenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$2,"_wgetenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wgetenv_s(size_t* _RequiredCount, wchar_t* _Buffer, size_t _BufferCount, const wchar_t* _VarName);
     * }
     */
    public static int _wgetenv_s(MemorySegment _RequiredCount, MemorySegment _Buffer, long _BufferCount, MemorySegment _VarName) {
        var mh$ = _wgetenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$3,"_wputenv");
    }
    /**
     * {@snippet :
     * int _wputenv(const wchar_t* _EnvString);
     * }
     */
    public static int _wputenv(MemorySegment _EnvString) {
        var mh$ = _wputenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$4,"_wputenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wputenv_s(const wchar_t* _Name, const wchar_t* _Value);
     * }
     */
    public static int _wputenv_s(MemorySegment _Name, MemorySegment _Value) {
        var mh$ = _wputenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2967.const$5,"_wsearchenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wsearchenv_s(const wchar_t* _Filename, const wchar_t* _VarName, wchar_t* _Buffer, size_t _BufferCount);
     * }
     */
    public static int _wsearchenv_s(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer, long _BufferCount) {
        var mh$ = _wsearchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$0,"_wsearchenv");
    }
    /**
     * {@snippet :
     * void _wsearchenv(const wchar_t* _Filename, const wchar_t* _VarName, wchar_t* _ResultPath);
     * }
     */
    public static void _wsearchenv(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _ResultPath) {
        var mh$ = _wsearchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _ResultPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$1,"_wsystem");
    }
    /**
     * {@snippet :
     * int _wsystem(const wchar_t* _Command);
     * }
     */
    public static int _wsystem(MemorySegment _Command) {
        var mh$ = _wsystem$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swab$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$2,"_swab");
    }
    /**
     * {@snippet :
     * void _swab(char* _Buf1, char* _Buf2, int _SizeInBytes);
     * }
     */
    public static void _swab(MemorySegment _Buf1, MemorySegment _Buf2, int _SizeInBytes) {
        var mh$ = _swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$3,"exit");
    }
    /**
     * {@snippet :
     * void exit(int _Code);
     * }
     */
    public static void exit(int _Code) {
        var mh$ = exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$4,"_exit");
    }
    /**
     * {@snippet :
     * void _exit(int _Code);
     * }
     */
    public static void _exit(int _Code) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$2968.const$5,"_Exit");
    }
    /**
     * {@snippet :
     * void _Exit(int _Code);
     * }
     */
    public static void _Exit(int _Code) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$0,"quick_exit");
    }
    /**
     * {@snippet :
     * void quick_exit(int _Code);
     * }
     */
    public static void quick_exit(int _Code) {
        var mh$ = quick_exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$1,"abort");
    }
    /**
     * {@snippet :
     * void abort();
     * }
     */
    public static void abort() {
        var mh$ = abort$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_abort_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$2,"_set_abort_behavior");
    }
    /**
     * {@snippet :
     * unsigned int _set_abort_behavior(unsigned int _Flags, unsigned int _Mask);
     * }
     */
    public static int _set_abort_behavior(int _Flags, int _Mask) {
        var mh$ = _set_abort_behavior$MH();
        try {
            return (int)mh$.invokeExact(_Flags, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$2969.const$5,"atexit");
    }
    /**
     * {@snippet :
     * int atexit(void (*)());
     * }
     */
    public static int atexit(MemorySegment x0) {
        var mh$ = atexit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$2970.const$0,"_onexit");
    }
    /**
     * {@snippet :
     * _onexit_t _onexit(_onexit_t _Func);
     * }
     */
    public static MemorySegment _onexit(MemorySegment _Func) {
        var mh$ = _onexit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$2970.const$2,"at_quick_exit");
    }
    /**
     * {@snippet :
     * int at_quick_exit(void (*)());
     * }
     */
    public static int at_quick_exit(MemorySegment x0) {
        var mh$ = at_quick_exit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$0,"_set_purecall_handler");
    }
    /**
     * {@snippet :
     * _purecall_handler _set_purecall_handler(_purecall_handler _Handler);
     * }
     */
    public static MemorySegment _set_purecall_handler(MemorySegment _Handler) {
        var mh$ = _set_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$1,"_get_purecall_handler");
    }
    /**
     * {@snippet :
     * _purecall_handler _get_purecall_handler();
     * }
     */
    public static MemorySegment _get_purecall_handler() {
        var mh$ = _get_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$2,"_set_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _set_invalid_parameter_handler(_invalid_parameter_handler _Handler);
     * }
     */
    public static MemorySegment _set_invalid_parameter_handler(MemorySegment _Handler) {
        var mh$ = _set_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$3,"_get_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _get_invalid_parameter_handler();
     * }
     */
    public static MemorySegment _get_invalid_parameter_handler() {
        var mh$ = _get_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$4,"_set_thread_local_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _set_thread_local_invalid_parameter_handler(_invalid_parameter_handler _Handler);
     * }
     */
    public static MemorySegment _set_thread_local_invalid_parameter_handler(MemorySegment _Handler) {
        var mh$ = _set_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$2971.const$5,"_get_thread_local_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _get_thread_local_invalid_parameter_handler();
     * }
     */
    public static MemorySegment _get_thread_local_invalid_parameter_handler() {
        var mh$ = _get_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_error_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$0,"_set_error_mode");
    }
    /**
     * {@snippet :
     * int _set_error_mode(int _Mode);
     * }
     */
    public static int _set_error_mode(int _Mode) {
        var mh$ = _set_error_mode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_errlist$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$1,"__sys_errlist");
    }
    /**
     * {@snippet :
     * char** __sys_errlist();
     * }
     */
    public static MemorySegment __sys_errlist() {
        var mh$ = __sys_errlist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_nerr$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$2,"__sys_nerr");
    }
    /**
     * {@snippet :
     * int* __sys_nerr();
     * }
     */
    public static MemorySegment __sys_nerr() {
        var mh$ = __sys_nerr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$3,"perror");
    }
    /**
     * {@snippet :
     * void perror(char* _ErrMsg);
     * }
     */
    public static void perror(MemorySegment _ErrMsg) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(_ErrMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$4,"__p__pgmptr");
    }
    /**
     * {@snippet :
     * char** __p__pgmptr();
     * }
     */
    public static MemorySegment __p__pgmptr() {
        var mh$ = __p__pgmptr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$2972.const$5,"__p__wpgmptr");
    }
    /**
     * {@snippet :
     * wchar_t** __p__wpgmptr();
     * }
     */
    public static MemorySegment __p__wpgmptr() {
        var mh$ = __p__wpgmptr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$2973.const$0,"__p__fmode");
    }
    /**
     * {@snippet :
     * int* __p__fmode();
     * }
     */
    public static MemorySegment __p__fmode() {
        var mh$ = __p__fmode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$2973.const$1,"_get_pgmptr");
    }
    /**
     * {@snippet :
     * errno_t _get_pgmptr(char** _Value);
     * }
     */
    public static int _get_pgmptr(MemorySegment _Value) {
        var mh$ = _get_pgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$2973.const$2,"_get_wpgmptr");
    }
    /**
     * {@snippet :
     * errno_t _get_wpgmptr(wchar_t** _Value);
     * }
     */
    public static int _get_wpgmptr(MemorySegment _Value) {
        var mh$ = _get_wpgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$2973.const$3,"_set_fmode");
    }
    /**
     * {@snippet :
     * errno_t _set_fmode(int _Mode);
     * }
     */
    public static int _set_fmode(int _Mode) {
        var mh$ = _set_fmode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$2973.const$4,"_get_fmode");
    }
    /**
     * {@snippet :
     * errno_t _get_fmode(int* _PMode);
     * }
     */
    public static int _get_fmode(MemorySegment _PMode) {
        var mh$ = _get_fmode$MH();
        try {
            return (int)mh$.invokeExact(_PMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$2975.const$2,"abs");
    }
    /**
     * {@snippet :
     * int abs(int _Number);
     * }
     */
    public static int abs(int _Number) {
        var mh$ = abs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$2975.const$3,"labs");
    }
    /**
     * {@snippet :
     * long labs(long _Number);
     * }
     */
    public static int labs(int _Number) {
        var mh$ = labs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$2975.const$4,"llabs");
    }
    /**
     * {@snippet :
     * long long llabs(long long _Number);
     * }
     */
    public static long llabs(long _Number) {
        var mh$ = llabs$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abs64$MH() {
        return RuntimeHelper.requireNonNull(constants$2975.const$5,"_abs64");
    }
    /**
     * {@snippet :
     * long long _abs64(long long _Number);
     * }
     */
    public static long _abs64(long _Number) {
        var mh$ = _abs64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$0,"_byteswap_ushort");
    }
    /**
     * {@snippet :
     * unsigned short _byteswap_ushort(unsigned short _Number);
     * }
     */
    public static short _byteswap_ushort(short _Number) {
        var mh$ = _byteswap_ushort$MH();
        try {
            return (short)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$1,"_byteswap_ulong");
    }
    /**
     * {@snippet :
     * unsigned long _byteswap_ulong(unsigned long _Number);
     * }
     */
    public static int _byteswap_ulong(int _Number) {
        var mh$ = _byteswap_ulong$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$2,"_byteswap_uint64");
    }
    /**
     * {@snippet :
     * unsigned long long _byteswap_uint64(unsigned long long _Number);
     * }
     */
    public static long _byteswap_uint64(long _Number) {
        var mh$ = _byteswap_uint64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$4,"div");
    }
    /**
     * {@snippet :
     * div_t div(int _Numerator, int _Denominator);
     * }
     */
    public static MemorySegment div(SegmentAllocator allocator, int _Numerator, int _Denominator) {
        var mh$ = div$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$2976.const$6,"ldiv");
    }
    /**
     * {@snippet :
     * ldiv_t ldiv(long _Numerator, long _Denominator);
     * }
     */
    public static MemorySegment ldiv(SegmentAllocator allocator, int _Numerator, int _Denominator) {
        var mh$ = ldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$1,"lldiv");
    }
    /**
     * {@snippet :
     * lldiv_t lldiv(long long _Numerator, long long _Denominator);
     * }
     */
    public static MemorySegment lldiv(SegmentAllocator allocator, long _Numerator, long _Denominator) {
        var mh$ = lldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotl$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$2,"_lrotl");
    }
    /**
     * {@snippet :
     * unsigned long _lrotl(unsigned long _Value, int _Shift);
     * }
     */
    public static int _lrotl(int _Value, int _Shift) {
        var mh$ = _lrotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotr$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$3,"_lrotr");
    }
    /**
     * {@snippet :
     * unsigned long _lrotr(unsigned long _Value, int _Shift);
     * }
     */
    public static int _lrotr(int _Value, int _Shift) {
        var mh$ = _lrotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$4,"srand");
    }
    /**
     * {@snippet :
     * void srand(unsigned int _Seed);
     * }
     */
    public static void srand(int _Seed) {
        var mh$ = srand$MH();
        try {
            mh$.invokeExact(_Seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$2977.const$5,"rand");
    }
    /**
     * {@snippet :
     * int rand();
     * }
     */
    public static int rand() {
        var mh$ = rand$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$1,"atof");
    }
    /**
     * {@snippet :
     * double atof(char* _String);
     * }
     */
    public static double atof(MemorySegment _String) {
        var mh$ = atof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$2,"atoi");
    }
    /**
     * {@snippet :
     * int atoi(char* _String);
     * }
     */
    public static int atoi(MemorySegment _String) {
        var mh$ = atoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$3,"atol");
    }
    /**
     * {@snippet :
     * long atol(char* _String);
     * }
     */
    public static int atol(MemorySegment _String) {
        var mh$ = atol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$4,"atoll");
    }
    /**
     * {@snippet :
     * long long atoll(char* _String);
     * }
     */
    public static long atoll(MemorySegment _String) {
        var mh$ = atoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$2979.const$5,"_atoi64");
    }
    /**
     * {@snippet :
     * long long _atoi64(char* _String);
     * }
     */
    public static long _atoi64(MemorySegment _String) {
        var mh$ = _atoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$0,"_atof_l");
    }
    /**
     * {@snippet :
     * double _atof_l(char* _String, _locale_t _Locale);
     * }
     */
    public static double _atof_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$1,"_atoi_l");
    }
    /**
     * {@snippet :
     * int _atoi_l(char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoi_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$2,"_atol_l");
    }
    /**
     * {@snippet :
     * long _atol_l(char* _String, _locale_t _Locale);
     * }
     */
    public static int _atol_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$3,"_atoll_l");
    }
    /**
     * {@snippet :
     * long long _atoll_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _atoll_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$4,"_atoi64_l");
    }
    /**
     * {@snippet :
     * long long _atoi64_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _atoi64_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt$MH() {
        return RuntimeHelper.requireNonNull(constants$2980.const$5,"_atoflt");
    }
    /**
     * {@snippet :
     * int _atoflt(_CRT_FLOAT* _Result, char* _String);
     * }
     */
    public static int _atoflt(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atoflt$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$0,"_atodbl");
    }
    /**
     * {@snippet :
     * int _atodbl(_CRT_DOUBLE* _Result, char* _String);
     * }
     */
    public static int _atodbl(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atodbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$1,"_atoldbl");
    }
    /**
     * {@snippet :
     * int _atoldbl(_LDOUBLE* _Result, char* _String);
     * }
     */
    public static int _atoldbl(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atoldbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$2,"_atoflt_l");
    }
    /**
     * {@snippet :
     * int _atoflt_l(_CRT_FLOAT* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoflt_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoflt_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$3,"_atodbl_l");
    }
    /**
     * {@snippet :
     * int _atodbl_l(_CRT_DOUBLE* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atodbl_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atodbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$4,"_atoldbl_l");
    }
    /**
     * {@snippet :
     * int _atoldbl_l(_LDOUBLE* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoldbl_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoldbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$2981.const$5,"strtof");
    }
    /**
     * {@snippet :
     * float strtof(char* _String, char** _EndPtr);
     * }
     */
    public static float strtof(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = strtof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$0,"_strtof_l");
    }
    /**
     * {@snippet :
     * float _strtof_l(char* _String, char** _EndPtr, _locale_t _Locale);
     * }
     */
    public static float _strtof_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _strtof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$1,"strtod");
    }
    /**
     * {@snippet :
     * double strtod(char* _String, char** _EndPtr);
     * }
     */
    public static double strtod(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = strtod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$2,"_strtod_l");
    }
    /**
     * {@snippet :
     * double _strtod_l(char* _String, char** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _strtod_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _strtod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtold$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$3,"strtold");
    }
    /**
     * {@snippet :
     * long double strtold(char* _String, char** _EndPtr);
     * }
     */
    public static double strtold(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = strtold$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtold_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$4,"_strtold_l");
    }
    /**
     * {@snippet :
     * long double _strtold_l(char* _String, char** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _strtold_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _strtold_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$2982.const$5,"strtol");
    }
    /**
     * {@snippet :
     * long strtol(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static int strtol(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$0,"_strtol_l");
    }
    /**
     * {@snippet :
     * long _strtol_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _strtol_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$1,"strtoll");
    }
    /**
     * {@snippet :
     * long long strtoll(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long strtoll(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$2,"_strtoll_l");
    }
    /**
     * {@snippet :
     * long long _strtoll_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoll_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$3,"strtoul");
    }
    /**
     * {@snippet :
     * unsigned long strtoul(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static int strtoul(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$4,"_strtoul_l");
    }
    /**
     * {@snippet :
     * unsigned long _strtoul_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _strtoul_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$2983.const$5,"strtoull");
    }
    /**
     * {@snippet :
     * unsigned long long strtoull(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long strtoull(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$0,"_strtoull_l");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoull_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoull_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$1,"_strtoi64");
    }
    /**
     * {@snippet :
     * long long _strtoi64(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long _strtoi64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _strtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$2,"_strtoi64_l");
    }
    /**
     * {@snippet :
     * long long _strtoi64_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoi64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$3,"_strtoui64");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoui64(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long _strtoui64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _strtoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$4,"_strtoui64_l");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoui64_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoui64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2984.const$5,"_itoa_s");
    }
    /**
     * {@snippet :
     * errno_t _itoa_s(int _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _itoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _itoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$0,"_itoa");
    }
    /**
     * {@snippet :
     * char* _itoa(int _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _itoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _itoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$1,"_ltoa_s");
    }
    /**
     * {@snippet :
     * errno_t _ltoa_s(long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ltoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ltoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$2,"_ltoa");
    }
    /**
     * {@snippet :
     * char* _ltoa(long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ltoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ltoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$3,"_ultoa_s");
    }
    /**
     * {@snippet :
     * errno_t _ultoa_s(unsigned long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ultoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ultoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$4,"_ultoa");
    }
    /**
     * {@snippet :
     * char* _ultoa(unsigned long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ultoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ultoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2985.const$5,"_i64toa_s");
    }
    /**
     * {@snippet :
     * errno_t _i64toa_s(long long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _i64toa_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _i64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$0,"_i64toa");
    }
    /**
     * {@snippet :
     * char* _i64toa(long long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _i64toa(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _i64toa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$1,"_ui64toa_s");
    }
    /**
     * {@snippet :
     * errno_t _ui64toa_s(unsigned long long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ui64toa_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ui64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$2,"_ui64toa");
    }
    /**
     * {@snippet :
     * char* _ui64toa(unsigned long long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ui64toa(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ui64toa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$4,"_ecvt_s");
    }
    /**
     * {@snippet :
     * errno_t _ecvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static int _ecvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _ecvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2986.const$6,"_ecvt");
    }
    /**
     * {@snippet :
     * char* _ecvt(double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment _ecvt(double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _ecvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2987.const$0,"_fcvt_s");
    }
    /**
     * {@snippet :
     * errno_t _fcvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static int _fcvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _fcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2987.const$1,"_fcvt");
    }
    /**
     * {@snippet :
     * char* _fcvt(double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment _fcvt(double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _fcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2987.const$3,"_gcvt_s");
    }
    /**
     * {@snippet :
     * errno_t _gcvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _DigitCount);
     * }
     */
    public static int _gcvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _DigitCount) {
        var mh$ = _gcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2987.const$5,"_gcvt");
    }
    /**
     * {@snippet :
     * char* _gcvt(double _Value, int _DigitCount, char* _Buffer);
     * }
     */
    public static MemorySegment _gcvt(double _Value, int _DigitCount, MemorySegment _Buffer) {
        var mh$ = _gcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mblen$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$0,"mblen");
    }
    /**
     * {@snippet :
     * int mblen(char* _Ch, size_t _MaxCount);
     * }
     */
    public static int mblen(MemorySegment _Ch, long _MaxCount) {
        var mh$ = mblen$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mblen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$1,"_mblen_l");
    }
    /**
     * {@snippet :
     * int _mblen_l(char* _Ch, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static int _mblen_l(MemorySegment _Ch, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mblen_l$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$2,"_mbstrlen");
    }
    /**
     * {@snippet :
     * size_t _mbstrlen(char* _String);
     * }
     */
    public static long _mbstrlen(MemorySegment _String) {
        var mh$ = _mbstrlen$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$3,"_mbstrlen_l");
    }
    /**
     * {@snippet :
     * size_t _mbstrlen_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _mbstrlen_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _mbstrlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$4,"_mbstrnlen");
    }
    /**
     * {@snippet :
     * size_t _mbstrnlen(char* _String, size_t _MaxCount);
     * }
     */
    public static long _mbstrnlen(MemorySegment _String, long _MaxCount) {
        var mh$ = _mbstrnlen$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2988.const$6,"_mbstrnlen_l");
    }
    /**
     * {@snippet :
     * size_t _mbstrnlen_l(char* _String, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _mbstrnlen_l(MemorySegment _String, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstrnlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbtowc$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$0,"mbtowc");
    }
    /**
     * {@snippet :
     * int mbtowc(wchar_t* _DstCh, char* _SrcCh, size_t _SrcSizeInBytes);
     * }
     */
    public static int mbtowc(MemorySegment _DstCh, MemorySegment _SrcCh, long _SrcSizeInBytes) {
        var mh$ = mbtowc$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbtowc_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$1,"_mbtowc_l");
    }
    /**
     * {@snippet :
     * int _mbtowc_l(wchar_t* _DstCh, char* _SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale);
     * }
     */
    public static int _mbtowc_l(MemorySegment _DstCh, MemorySegment _SrcCh, long _SrcSizeInBytes, MemorySegment _Locale) {
        var mh$ = _mbtowc_l$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$3,"mbstowcs_s");
    }
    /**
     * {@snippet :
     * errno_t mbstowcs_s(size_t* _PtNumOfCharConverted, wchar_t* _DstBuf, size_t _SizeInWords, char* _SrcBuf, size_t _MaxCount);
     * }
     */
    public static int mbstowcs_s(MemorySegment _PtNumOfCharConverted, MemorySegment _DstBuf, long _SizeInWords, MemorySegment _SrcBuf, long _MaxCount) {
        var mh$ = mbstowcs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$4,"mbstowcs");
    }
    /**
     * {@snippet :
     * size_t mbstowcs(wchar_t* _Dest, char* _Source, size_t _MaxCount);
     * }
     */
    public static long mbstowcs(MemorySegment _Dest, MemorySegment _Source, long _MaxCount) {
        var mh$ = mbstowcs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2989.const$6,"_mbstowcs_s_l");
    }
    /**
     * {@snippet :
     * errno_t _mbstowcs_s_l(size_t* _PtNumOfCharConverted, wchar_t* _DstBuf, size_t _SizeInWords, char* _SrcBuf, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static int _mbstowcs_s_l(MemorySegment _PtNumOfCharConverted, MemorySegment _DstBuf, long _SizeInWords, MemorySegment _SrcBuf, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstowcs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$0,"_mbstowcs_l");
    }
    /**
     * {@snippet :
     * size_t _mbstowcs_l(wchar_t* _Dest, char* _Source, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _mbstowcs_l(MemorySegment _Dest, MemorySegment _Source, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstowcs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$1,"wctomb");
    }
    /**
     * {@snippet :
     * int wctomb(char* _MbCh, wchar_t _WCh);
     * }
     */
    public static int wctomb(MemorySegment _MbCh, short _WCh) {
        var mh$ = wctomb$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$2,"_wctomb_l");
    }
    /**
     * {@snippet :
     * int _wctomb_l(char* _MbCh, wchar_t _WCh, _locale_t _Locale);
     * }
     */
    public static int _wctomb_l(MemorySegment _MbCh, short _WCh, MemorySegment _Locale) {
        var mh$ = _wctomb_l$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$4,"wctomb_s");
    }
    /**
     * {@snippet :
     * errno_t wctomb_s(int* _SizeConverted, char* _MbCh, rsize_t _SizeInBytes, wchar_t _WCh);
     * }
     */
    public static int wctomb_s(MemorySegment _SizeConverted, MemorySegment _MbCh, long _SizeInBytes, short _WCh) {
        var mh$ = wctomb_s$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2990.const$6,"_wctomb_s_l");
    }
    /**
     * {@snippet :
     * errno_t _wctomb_s_l(int* _SizeConverted, char* _MbCh, size_t _SizeInBytes, wchar_t _WCh, _locale_t _Locale);
     * }
     */
    public static int _wctomb_s_l(MemorySegment _SizeConverted, MemorySegment _MbCh, long _SizeInBytes, short _WCh, MemorySegment _Locale) {
        var mh$ = _wctomb_s_l$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$0,"wcstombs_s");
    }
    /**
     * {@snippet :
     * errno_t wcstombs_s(size_t* _PtNumOfCharConverted, char* _Dst, size_t _DstSizeInBytes, const wchar_t* _Src, size_t _MaxCountInBytes);
     * }
     */
    public static int wcstombs_s(MemorySegment _PtNumOfCharConverted, MemorySegment _Dst, long _DstSizeInBytes, MemorySegment _Src, long _MaxCountInBytes) {
        var mh$ = wcstombs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$1,"wcstombs");
    }
    /**
     * {@snippet :
     * size_t wcstombs(char* _Dest, const wchar_t* _Source, size_t _MaxCount);
     * }
     */
    public static long wcstombs(MemorySegment _Dest, MemorySegment _Source, long _MaxCount) {
        var mh$ = wcstombs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$2,"_wcstombs_s_l");
    }
    /**
     * {@snippet :
     * errno_t _wcstombs_s_l(size_t* _PtNumOfCharConverted, char* _Dst, size_t _DstSizeInBytes, const wchar_t* _Src, size_t _MaxCountInBytes, _locale_t _Locale);
     * }
     */
    public static int _wcstombs_s_l(MemorySegment _PtNumOfCharConverted, MemorySegment _Dst, long _DstSizeInBytes, MemorySegment _Src, long _MaxCountInBytes, MemorySegment _Locale) {
        var mh$ = _wcstombs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$3,"_wcstombs_l");
    }
    /**
     * {@snippet :
     * size_t _wcstombs_l(char* _Dest, const wchar_t* _Source, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _wcstombs_l(MemorySegment _Dest, MemorySegment _Source, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _wcstombs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$4,"_fullpath");
    }
    /**
     * {@snippet :
     * char* _fullpath(char* _Buffer, char* _Path, size_t _BufferCount);
     * }
     */
    public static MemorySegment _fullpath(MemorySegment _Buffer, MemorySegment _Path, long _BufferCount) {
        var mh$ = _fullpath$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2991.const$5,"_makepath_s");
    }
    /**
     * {@snippet :
     * errno_t _makepath_s(char* _Buffer, size_t _BufferCount, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static int _makepath_s(MemorySegment _Buffer, long _BufferCount, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _makepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$0,"_makepath");
    }
    /**
     * {@snippet :
     * void _makepath(char* _Buffer, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static void _makepath(MemorySegment _Buffer, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _makepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$1,"_splitpath");
    }
    /**
     * {@snippet :
     * void _splitpath(char* _FullPath, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static void _splitpath(MemorySegment _FullPath, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _splitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$2,"_splitpath_s");
    }
    /**
     * {@snippet :
     * errno_t _splitpath_s(char* _FullPath, char* _Drive, size_t _DriveCount, char* _Dir, size_t _DirCount, char* _Filename, size_t _FilenameCount, char* _Ext, size_t _ExtCount);
     * }
     */
    public static int _splitpath_s(MemorySegment _FullPath, MemorySegment _Drive, long _DriveCount, MemorySegment _Dir, long _DirCount, MemorySegment _Filename, long _FilenameCount, MemorySegment _Ext, long _ExtCount) {
        var mh$ = _splitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$3,"getenv_s");
    }
    /**
     * {@snippet :
     * errno_t getenv_s(size_t* _RequiredCount, char* _Buffer, rsize_t _BufferCount, char* _VarName);
     * }
     */
    public static int getenv_s(MemorySegment _RequiredCount, MemorySegment _Buffer, long _BufferCount, MemorySegment _VarName) {
        var mh$ = getenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argc$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$4,"__p___argc");
    }
    /**
     * {@snippet :
     * int* __p___argc();
     * }
     */
    public static MemorySegment __p___argc() {
        var mh$ = __p___argc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argv$MH() {
        return RuntimeHelper.requireNonNull(constants$2992.const$5,"__p___argv");
    }
    /**
     * {@snippet :
     * char*** __p___argv();
     * }
     */
    public static MemorySegment __p___argv() {
        var mh$ = __p___argv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___wargv$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$0,"__p___wargv");
    }
    /**
     * {@snippet :
     * wchar_t*** __p___wargv();
     * }
     */
    public static MemorySegment __p___wargv() {
        var mh$ = __p___wargv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__environ$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$1,"__p__environ");
    }
    /**
     * {@snippet :
     * char*** __p__environ();
     * }
     */
    public static MemorySegment __p__environ() {
        var mh$ = __p__environ$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wenviron$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$2,"__p__wenviron");
    }
    /**
     * {@snippet :
     * wchar_t*** __p__wenviron();
     * }
     */
    public static MemorySegment __p__wenviron() {
        var mh$ = __p__wenviron$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$3,"getenv");
    }
    /**
     * {@snippet :
     * char* getenv(char* _VarName);
     * }
     */
    public static MemorySegment getenv(MemorySegment _VarName) {
        var mh$ = getenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$4,"_dupenv_s");
    }
    /**
     * {@snippet :
     * errno_t _dupenv_s(char** _Buffer, size_t* _BufferCount, char* _VarName);
     * }
     */
    public static int _dupenv_s(MemorySegment _Buffer, MemorySegment _BufferCount, MemorySegment _VarName) {
        var mh$ = _dupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$2993.const$5,"system");
    }
    /**
     * {@snippet :
     * int system(char* _Command);
     * }
     */
    public static int system(MemorySegment _Command) {
        var mh$ = system$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$0,"_putenv");
    }
    /**
     * {@snippet :
     * int _putenv(char* _EnvString);
     * }
     */
    public static int _putenv(MemorySegment _EnvString) {
        var mh$ = _putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$1,"_putenv_s");
    }
    /**
     * {@snippet :
     * errno_t _putenv_s(char* _Name, char* _Value);
     * }
     */
    public static int _putenv_s(MemorySegment _Name, MemorySegment _Value) {
        var mh$ = _putenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$2,"_searchenv_s");
    }
    /**
     * {@snippet :
     * errno_t _searchenv_s(char* _Filename, char* _VarName, char* _Buffer, size_t _BufferCount);
     * }
     */
    public static int _searchenv_s(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer, long _BufferCount) {
        var mh$ = _searchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$3,"_searchenv");
    }
    /**
     * {@snippet :
     * void _searchenv(char* _Filename, char* _VarName, char* _Buffer);
     * }
     */
    public static void _searchenv(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer) {
        var mh$ = _searchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _seterrormode$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$4,"_seterrormode");
    }
    /**
     * {@snippet :
     * void _seterrormode(int _Mode);
     * }
     */
    public static void _seterrormode(int _Mode) {
        var mh$ = _seterrormode$MH();
        try {
            mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beep$MH() {
        return RuntimeHelper.requireNonNull(constants$2994.const$5,"_beep");
    }
    /**
     * {@snippet :
     * void _beep(unsigned int _Frequency, unsigned int _Duration);
     * }
     */
    public static void _beep(int _Frequency, int _Duration) {
        var mh$ = _beep$MH();
        try {
            mh$.invokeExact(_Frequency, _Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$0,"_sleep");
    }
    /**
     * {@snippet :
     * void _sleep(unsigned long _Duration);
     * }
     */
    public static void _sleep(int _Duration) {
        var mh$ = _sleep$MH();
        try {
            mh$.invokeExact(_Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$1,"ecvt");
    }
    /**
     * {@snippet :
     * char* ecvt(double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment ecvt(double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = ecvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$2,"fcvt");
    }
    /**
     * {@snippet :
     * char* fcvt(double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment fcvt(double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = fcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$3,"gcvt");
    }
    /**
     * {@snippet :
     * char* gcvt(double _Value, int _DigitCount, char* _DstBuf);
     * }
     */
    public static MemorySegment gcvt(double _Value, int _DigitCount, MemorySegment _DstBuf) {
        var mh$ = gcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _DstBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$4,"itoa");
    }
    /**
     * {@snippet :
     * char* itoa(int _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment itoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = itoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2995.const$5,"ltoa");
    }
    /**
     * {@snippet :
     * char* ltoa(long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment ltoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = ltoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swab$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$0,"swab");
    }
    /**
     * {@snippet :
     * void swab(char* _Buf1, char* _Buf2, int _SizeInBytes);
     * }
     */
    public static void swab(MemorySegment _Buf1, MemorySegment _Buf2, int _SizeInBytes) {
        var mh$ = swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$1,"ultoa");
    }
    /**
     * {@snippet :
     * char* ultoa(unsigned long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment ultoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = ultoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$2,"putenv");
    }
    /**
     * {@snippet :
     * int putenv(char* _EnvString);
     * }
     */
    public static int putenv(MemorySegment _EnvString) {
        var mh$ = putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$2996.const$3,"onexit");
    }
    /**
     * {@snippet :
     * _onexit_t onexit(_onexit_t _Func);
     * }
     */
    public static MemorySegment onexit(MemorySegment _Func) {
        var mh$ = onexit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_SINGLEUSE = 0;
     * }
     */
    public static int REGCLS_SINGLEUSE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_MULTIPLEUSE = 1;
     * }
     */
    public static int REGCLS_MULTIPLEUSE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_MULTI_SEPARATE = 2;
     * }
     */
    public static int REGCLS_MULTI_SEPARATE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_SUSPENDED = 4;
     * }
     */
    public static int REGCLS_SUSPENDED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_SURROGATE = 8;
     * }
     */
    public static int REGCLS_SURROGATE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagREGCLS.REGCLS_AGILE = 16;
     * }
     */
    public static int REGCLS_AGILE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagCOINITBASE.COINITBASE_MULTITHREADED = 0;
     * }
     */
    public static int COINITBASE_MULTITHREADED() {
        return (int)0L;
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2996.const$4,"__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2996.const$4, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2996.const$4, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2996.const$5,"__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2996.const$5, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2996.const$5, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct IUnknown* LPUNKNOWN;
     * }
     */
    public static final AddressLayout LPUNKNOWN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IUnknown;
     * }
     */
    public static MemorySegment IID_IUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2997.const$0,"IID_IUnknown");
    }
    public static MethodHandle IUnknown_QueryInterface_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2998.const$4,"IUnknown_QueryInterface_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IUnknown_QueryInterface_Proxy(IUnknown* This, const IID* riid, void** ppvObject);
     * }
     */
    public static int IUnknown_QueryInterface_Proxy(MemorySegment This, MemorySegment riid, MemorySegment ppvObject) {
        var mh$ = IUnknown_QueryInterface_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_QueryInterface_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$2998.const$5,"IUnknown_QueryInterface_Stub");
    }
    /**
     * {@snippet :
     * void IUnknown_QueryInterface_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IUnknown_QueryInterface_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IUnknown_QueryInterface_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_AddRef_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$0,"IUnknown_AddRef_Proxy");
    }
    /**
     * {@snippet :
     * ULONG IUnknown_AddRef_Proxy(IUnknown* This);
     * }
     */
    public static int IUnknown_AddRef_Proxy(MemorySegment This) {
        var mh$ = IUnknown_AddRef_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_AddRef_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$1,"IUnknown_AddRef_Stub");
    }
    /**
     * {@snippet :
     * void IUnknown_AddRef_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IUnknown_AddRef_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IUnknown_AddRef_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_Release_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$2,"IUnknown_Release_Proxy");
    }
    /**
     * {@snippet :
     * ULONG IUnknown_Release_Proxy(IUnknown* This);
     * }
     */
    public static int IUnknown_Release_Proxy(MemorySegment This) {
        var mh$ = IUnknown_Release_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_Release_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$2999.const$3,"IUnknown_Release_Stub");
    }
    /**
     * {@snippet :
     * void IUnknown_Release_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IUnknown_Release_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IUnknown_Release_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2999.const$4,"__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2999.const$4, "__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2999.const$4, "__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2999.const$5,"__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2999.const$5, "__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2999.const$5, "__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_AsyncIUnknown;
     * }
     */
    public static MemorySegment IID_AsyncIUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3000.const$0,"IID_AsyncIUnknown");
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3003.const$4,"__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3003.const$4, "__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3003.const$4, "__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3003.const$5,"__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3003.const$5, "__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3003.const$5, "__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct IClassFactory* LPCLASSFACTORY;
     * }
     */
    public static final AddressLayout LPCLASSFACTORY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IClassFactory;
     * }
     */
    public static MemorySegment IID_IClassFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3004.const$0,"IID_IClassFactory");
    }
    public static MethodHandle IClassFactory_RemoteCreateInstance_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$2,"IClassFactory_RemoteCreateInstance_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_RemoteCreateInstance_Proxy(IClassFactory* This, const IID* riid, IUnknown** ppvObject);
     * }
     */
    public static int IClassFactory_RemoteCreateInstance_Proxy(MemorySegment This, MemorySegment riid, MemorySegment ppvObject) {
        var mh$ = IClassFactory_RemoteCreateInstance_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteCreateInstance_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$3,"IClassFactory_RemoteCreateInstance_Stub");
    }
    /**
     * {@snippet :
     * void IClassFactory_RemoteCreateInstance_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IClassFactory_RemoteCreateInstance_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IClassFactory_RemoteCreateInstance_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteLockServer_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$4,"IClassFactory_RemoteLockServer_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_RemoteLockServer_Proxy(IClassFactory* This, BOOL fLock);
     * }
     */
    public static int IClassFactory_RemoteLockServer_Proxy(MemorySegment This, int fLock) {
        var mh$ = IClassFactory_RemoteLockServer_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteLockServer_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3006.const$5,"IClassFactory_RemoteLockServer_Stub");
    }
    /**
     * {@snippet :
     * void IClassFactory_RemoteLockServer_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IClassFactory_RemoteLockServer_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IClassFactory_RemoteLockServer_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3007.const$0,"__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3007.const$0, "__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3007.const$0, "__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3007.const$1,"__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3007.const$1, "__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3007.const$1, "__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec"), x);
    }
    public static MethodHandle IClassFactory_CreateInstance_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$2,"IClassFactory_CreateInstance_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_CreateInstance_Proxy(IClassFactory* This, IUnknown* pUnkOuter, const IID* riid, void** ppvObject);
     * }
     */
    public static int IClassFactory_CreateInstance_Proxy(MemorySegment This, MemorySegment pUnkOuter, MemorySegment riid, MemorySegment ppvObject) {
        var mh$ = IClassFactory_CreateInstance_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pUnkOuter, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_CreateInstance_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$3,"IClassFactory_CreateInstance_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_CreateInstance_Stub(IClassFactory* This, const IID* riid, IUnknown** ppvObject);
     * }
     */
    public static int IClassFactory_CreateInstance_Stub(MemorySegment This, MemorySegment riid, MemorySegment ppvObject) {
        var mh$ = IClassFactory_CreateInstance_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_LockServer_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$4,"IClassFactory_LockServer_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_LockServer_Proxy(IClassFactory* This, BOOL fLock);
     * }
     */
    public static int IClassFactory_LockServer_Proxy(MemorySegment This, int fLock) {
        var mh$ = IClassFactory_LockServer_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_LockServer_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3007.const$5,"IClassFactory_LockServer_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IClassFactory_LockServer_Stub(IClassFactory* This, BOOL fLock);
     * }
     */
    public static int IClassFactory_LockServer_Stub(MemorySegment This, int fLock) {
        var mh$ = IClassFactory_LockServer_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3008.const$5,"__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3008.const$5, "__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3008.const$5, "__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3009.const$0,"__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3009.const$0, "__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3009.const$0, "__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct IMarshal* LPMARSHAL;
     * }
     */
    public static final AddressLayout LPMARSHAL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IMarshal;
     * }
     */
    public static MemorySegment IID_IMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3009.const$1,"IID_IMarshal");
    }
    /**
     * {@snippet :
     * const IID IID_INoMarshal;
     * }
     */
    public static MemorySegment IID_INoMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3013.const$1,"IID_INoMarshal");
    }
    /**
     * {@snippet :
     * const IID IID_IAgileObject;
     * }
     */
    public static MemorySegment IID_IAgileObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3014.const$5,"IID_IAgileObject");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3016.const$3,"__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3016.const$3, "__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3016.const$3, "__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3016.const$4,"__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3016.const$4, "__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3016.const$4, "__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_UNCATEGORIZED = 0;
     * }
     */
    public static int ACTIVATIONTYPE_UNCATEGORIZED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_FROM_MONIKER = 1;
     * }
     */
    public static int ACTIVATIONTYPE_FROM_MONIKER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_FROM_DATA = 2;
     * }
     */
    public static int ACTIVATIONTYPE_FROM_DATA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_FROM_STORAGE = 4;
     * }
     */
    public static int ACTIVATIONTYPE_FROM_STORAGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_FROM_STREAM = 8;
     * }
     */
    public static int ACTIVATIONTYPE_FROM_STREAM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagACTIVATIONTYPE.ACTIVATIONTYPE_FROM_FILE = 16;
     * }
     */
    public static int ACTIVATIONTYPE_FROM_FILE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * const IID IID_IActivationFilter;
     * }
     */
    public static MemorySegment IID_IActivationFilter$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3016.const$5,"IID_IActivationFilter");
    }
    /**
     * {@snippet :
     * typedef struct IMarshal2* LPMARSHAL2;
     * }
     */
    public static final AddressLayout LPMARSHAL2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IMarshal2;
     * }
     */
    public static MemorySegment IID_IMarshal2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3018.const$5,"IID_IMarshal2");
    }
    /**
     * {@snippet :
     * typedef struct IMalloc* LPMALLOC;
     * }
     */
    public static final AddressLayout LPMALLOC = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IMalloc;
     * }
     */
    public static MemorySegment IID_IMalloc$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3022.const$3,"IID_IMalloc");
    }
    /**
     * {@snippet :
     * typedef struct IStdMarshalInfo* LPSTDMARSHALINFO;
     * }
     */
    public static final AddressLayout LPSTDMARSHALINFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IStdMarshalInfo;
     * }
     */
    public static MemorySegment IID_IStdMarshalInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3026.const$4,"IID_IStdMarshalInfo");
    }
    /**
     * {@snippet :
     * typedef struct IExternalConnection* LPEXTERNALCONNECTION;
     * }
     */
    public static final AddressLayout LPEXTERNALCONNECTION = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum tagEXTCONN.EXTCONN_STRONG = 1;
     * }
     */
    public static int EXTCONN_STRONG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagEXTCONN.EXTCONN_WEAK = 2;
     * }
     */
    public static int EXTCONN_WEAK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagEXTCONN.EXTCONN_CALLABLE = 4;
     * }
     */
    public static int EXTCONN_CALLABLE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * const IID IID_IExternalConnection;
     * }
     */
    public static MemorySegment IID_IExternalConnection$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3028.const$4,"IID_IExternalConnection");
    }
    /**
     * {@snippet :
     * typedef struct IMultiQI* LPMULTIQI;
     * }
     */
    public static final AddressLayout LPMULTIQI = RuntimeHelper.POINTER;
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3031.const$5,"__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3031.const$5, "__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3031.const$5, "__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3032.const$0,"__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3032.const$0, "__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3032.const$0, "__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IMultiQI;
     * }
     */
    public static MemorySegment IID_IMultiQI$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3032.const$1,"IID_IMultiQI");
    }
    /**
     * {@snippet :
     * const IID IID_AsyncIMultiQI;
     * }
     */
    public static MemorySegment IID_AsyncIMultiQI$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3034.const$1,"IID_AsyncIMultiQI");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3036.const$3,"__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3036.const$3, "__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3036.const$3, "__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3036.const$4,"__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3036.const$4, "__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3036.const$4, "__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IInternalUnknown;
     * }
     */
    public static MemorySegment IID_IInternalUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3036.const$5,"IID_IInternalUnknown");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3038.const$5,"__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3038.const$5, "__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3038.const$5, "__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3039.const$0,"__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3039.const$0, "__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3039.const$0, "__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct IEnumUnknown* LPENUMUNKNOWN;
     * }
     */
    public static final AddressLayout LPENUMUNKNOWN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IEnumUnknown;
     * }
     */
    public static MemorySegment IID_IEnumUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3039.const$1,"IID_IEnumUnknown");
    }
    public static MethodHandle IEnumUnknown_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$1,"IEnumUnknown_RemoteNext_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IEnumUnknown_RemoteNext_Proxy(IEnumUnknown* This, ULONG celt, IUnknown** rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumUnknown_RemoteNext_Proxy(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumUnknown_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumUnknown_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3042.const$2,"IEnumUnknown_RemoteNext_Stub");
    }
    /**
     * {@snippet :
     * void IEnumUnknown_RemoteNext_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IEnumUnknown_RemoteNext_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IEnumUnknown_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct IEnumString* LPENUMSTRING;
     * }
     */
    public static final AddressLayout LPENUMSTRING = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IEnumString;
     * }
     */
    public static MemorySegment IID_IEnumString$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3042.const$3,"IID_IEnumString");
    }
    public static MethodHandle IEnumString_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$3,"IEnumString_RemoteNext_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IEnumString_RemoteNext_Proxy(IEnumString* This, ULONG celt, LPOLESTR* rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumString_RemoteNext_Proxy(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumString_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3045.const$4,"IEnumString_RemoteNext_Stub");
    }
    /**
     * {@snippet :
     * void IEnumString_RemoteNext_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IEnumString_RemoteNext_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IEnumString_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * const IID IID_ISequentialStream;
     * }
     */
    public static MemorySegment IID_ISequentialStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3045.const$5,"IID_ISequentialStream");
    }
    public static MethodHandle ISequentialStream_RemoteRead_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3048.const$1,"ISequentialStream_RemoteRead_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_RemoteRead_Proxy(ISequentialStream* This, byte* pv, ULONG cb, ULONG* pcbRead);
     * }
     */
    public static int ISequentialStream_RemoteRead_Proxy(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbRead) {
        var mh$ = ISequentialStream_RemoteRead_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteRead_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3048.const$2,"ISequentialStream_RemoteRead_Stub");
    }
    /**
     * {@snippet :
     * void ISequentialStream_RemoteRead_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void ISequentialStream_RemoteRead_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = ISequentialStream_RemoteRead_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteWrite_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3048.const$3,"ISequentialStream_RemoteWrite_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_RemoteWrite_Proxy(ISequentialStream* This, const byte* pv, ULONG cb, ULONG* pcbWritten);
     * }
     */
    public static int ISequentialStream_RemoteWrite_Proxy(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbWritten) {
        var mh$ = ISequentialStream_RemoteWrite_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteWrite_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3048.const$4,"ISequentialStream_RemoteWrite_Stub");
    }
    /**
     * {@snippet :
     * void ISequentialStream_RemoteWrite_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void ISequentialStream_RemoteWrite_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = ISequentialStream_RemoteWrite_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct IStream* LPSTREAM;
     * }
     */
    public static final AddressLayout LPSTREAM = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum tagSTGTY.STGTY_STORAGE = 1;
     * }
     */
    public static int STGTY_STORAGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTGTY.STGTY_STREAM = 2;
     * }
     */
    public static int STGTY_STREAM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagSTGTY.STGTY_LOCKBYTES = 3;
     * }
     */
    public static int STGTY_LOCKBYTES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum tagSTGTY.STGTY_PROPERTY = 4;
     * }
     */
    public static int STGTY_PROPERTY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagSTREAM_SEEK.STREAM_SEEK_SET = 0;
     * }
     */
    public static int STREAM_SEEK_SET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagSTREAM_SEEK.STREAM_SEEK_CUR = 1;
     * }
     */
    public static int STREAM_SEEK_CUR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTREAM_SEEK.STREAM_SEEK_END = 2;
     * }
     */
    public static int STREAM_SEEK_END() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagLOCKTYPE.LOCK_WRITE = 1;
     * }
     */
    public static int LOCK_WRITE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagLOCKTYPE.LOCK_EXCLUSIVE = 2;
     * }
     */
    public static int LOCK_EXCLUSIVE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagLOCKTYPE.LOCK_ONLYONCE = 4;
     * }
     */
    public static int LOCK_ONLYONCE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * const IID IID_IStream;
     * }
     */
    public static MemorySegment IID_IStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3050.const$0,"IID_IStream");
    }
    public static MethodHandle IStream_RemoteSeek_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$4,"IStream_RemoteSeek_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IStream_RemoteSeek_Proxy(IStream* This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER* plibNewPosition);
     * }
     */
    public static int IStream_RemoteSeek_Proxy(MemorySegment This, MemorySegment dlibMove, int dwOrigin, MemorySegment plibNewPosition) {
        var mh$ = IStream_RemoteSeek_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteSeek_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3056.const$5,"IStream_RemoteSeek_Stub");
    }
    /**
     * {@snippet :
     * void IStream_RemoteSeek_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IStream_RemoteSeek_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IStream_RemoteSeek_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteCopyTo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$0,"IStream_RemoteCopyTo_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IStream_RemoteCopyTo_Proxy(IStream* This, IStream* pstm, ULARGE_INTEGER cb, ULARGE_INTEGER* pcbRead, ULARGE_INTEGER* pcbWritten);
     * }
     */
    public static int IStream_RemoteCopyTo_Proxy(MemorySegment This, MemorySegment pstm, MemorySegment cb, MemorySegment pcbRead, MemorySegment pcbWritten) {
        var mh$ = IStream_RemoteCopyTo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteCopyTo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3057.const$1,"IStream_RemoteCopyTo_Stub");
    }
    /**
     * {@snippet :
     * void IStream_RemoteCopyTo_Stub(IRpcStubBuffer* This, IRpcChannelBuffer* _pRpcChannelBuffer, PRPC_MESSAGE _pRpcMessage, DWORD* _pdwStubPhase);
     * }
     */
    public static void IStream_RemoteCopyTo_Stub(MemorySegment This, MemorySegment _pRpcChannelBuffer, MemorySegment _pRpcMessage, MemorySegment _pdwStubPhase) {
        var mh$ = IStream_RemoteCopyTo_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned long RPCOLEDATAREP;
     * }
     */
    public static final OfInt RPCOLEDATAREP = JAVA_INT;
    /**
     * {@snippet :
     * typedef struct tagRPCOLEMESSAGE* PRPCOLEMESSAGE;
     * }
     */
    public static final AddressLayout PRPCOLEMESSAGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IRpcChannelBuffer;
     * }
     */
    public static MemorySegment IID_IRpcChannelBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3058.const$3,"IID_IRpcChannelBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3061.const$5,"__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3061.const$5, "__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3061.const$5, "__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3062.const$0,"__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3062.const$0, "__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3062.const$0, "__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IRpcChannelBuffer2;
     * }
     */
    public static MemorySegment IID_IRpcChannelBuffer2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3062.const$1,"IID_IRpcChannelBuffer2");
    }
    /**
     * {@snippet :
     * const IID IID_IAsyncRpcChannelBuffer;
     * }
     */
    public static MemorySegment IID_IAsyncRpcChannelBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3065.const$5,"IID_IAsyncRpcChannelBuffer");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcChannelBuffer3;
     * }
     */
    public static MemorySegment IID_IRpcChannelBuffer3$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3070.const$3,"IID_IRpcChannelBuffer3");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcSyntaxNegotiate;
     * }
     */
    public static MemorySegment IID_IRpcSyntaxNegotiate$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3076.const$3,"IID_IRpcSyntaxNegotiate");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcProxyBuffer;
     * }
     */
    public static MemorySegment IID_IRpcProxyBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3078.const$3,"IID_IRpcProxyBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3080.const$5,"__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3080.const$5, "__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3080.const$5, "__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3081.const$0,"__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3081.const$0, "__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3081.const$0, "__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IRpcStubBuffer;
     * }
     */
    public static MemorySegment IID_IRpcStubBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3081.const$1,"IID_IRpcStubBuffer");
    }
    /**
     * {@snippet :
     * const IID IID_IPSFactoryBuffer;
     * }
     */
    public static MemorySegment IID_IPSFactoryBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3085.const$2,"IID_IPSFactoryBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3088.const$3,"__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3088.const$3, "__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3088.const$3, "__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3088.const$4,"__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3088.const$4, "__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3088.const$4, "__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IChannelHook;
     * }
     */
    public static MemorySegment IID_IChannelHook$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3088.const$5,"IID_IChannelHook");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3093.const$5,"__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3093.const$5, "__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3093.const$5, "__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3094.const$0,"__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3094.const$0, "__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3094.const$0, "__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct tagSOLE_AUTHENTICATION_SERVICE* PSOLE_AUTHENTICATION_SERVICE;
     * }
     */
    public static final AddressLayout PSOLE_AUTHENTICATION_SERVICE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_NONE = 0;
     * }
     */
    public static int EOAC_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_MUTUAL_AUTH = 1;
     * }
     */
    public static int EOAC_MUTUAL_AUTH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_STATIC_CLOAKING = 32;
     * }
     */
    public static int EOAC_STATIC_CLOAKING() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_DYNAMIC_CLOAKING = 64;
     * }
     */
    public static int EOAC_DYNAMIC_CLOAKING() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_ANY_AUTHORITY = 128;
     * }
     */
    public static int EOAC_ANY_AUTHORITY() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_MAKE_FULLSIC = 256;
     * }
     */
    public static int EOAC_MAKE_FULLSIC() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_DEFAULT = 2048;
     * }
     */
    public static int EOAC_DEFAULT() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_SECURE_REFS = 2;
     * }
     */
    public static int EOAC_SECURE_REFS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_ACCESS_CONTROL = 4;
     * }
     */
    public static int EOAC_ACCESS_CONTROL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_APPID = 8;
     * }
     */
    public static int EOAC_APPID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_DYNAMIC = 16;
     * }
     */
    public static int EOAC_DYNAMIC() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_REQUIRE_FULLSIC = 512;
     * }
     */
    public static int EOAC_REQUIRE_FULLSIC() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_AUTO_IMPERSONATE = 1024;
     * }
     */
    public static int EOAC_AUTO_IMPERSONATE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_DISABLE_AAA = 4096;
     * }
     */
    public static int EOAC_DISABLE_AAA() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_NO_CUSTOM_MARSHAL = 8192;
     * }
     */
    public static int EOAC_NO_CUSTOM_MARSHAL() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum tagEOLE_AUTHENTICATION_CAPABILITIES.EOAC_RESERVED1 = 16384;
     * }
     */
    public static int EOAC_RESERVED1() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * typedef struct tagSOLE_AUTHENTICATION_INFO* PSOLE_AUTHENTICATION_INFO;
     * }
     */
    public static final AddressLayout PSOLE_AUTHENTICATION_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct tagSOLE_AUTHENTICATION_LIST* PSOLE_AUTHENTICATION_LIST;
     * }
     */
    public static final AddressLayout PSOLE_AUTHENTICATION_LIST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IClientSecurity;
     * }
     */
    public static MemorySegment IID_IClientSecurity$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3096.const$1,"IID_IClientSecurity");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3099.const$3,"__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3099.const$3, "__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3099.const$3, "__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3099.const$4,"__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3099.const$4, "__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3099.const$4, "__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IServerSecurity;
     * }
     */
    public static MemorySegment IID_IServerSecurity$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3099.const$5,"IID_IServerSecurity");
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_RPCTIMEOUT = 1;
     * }
     */
    public static int COMBND_RPCTIMEOUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_SERVER_LOCALITY = 2;
     * }
     */
    public static int COMBND_SERVER_LOCALITY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_RESERVED1 = 4;
     * }
     */
    public static int COMBND_RESERVED1() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_RESERVED2 = 5;
     * }
     */
    public static int COMBND_RESERVED2() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_RESERVED3 = 8;
     * }
     */
    public static int COMBND_RESERVED3() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_PROPERTIES.COMBND_RESERVED4 = 16;
     * }
     */
    public static int COMBND_RESERVED4() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_SERVER_LOCALITY_VALUES.SERVER_LOCALITY_PROCESS_LOCAL = 0;
     * }
     */
    public static int SERVER_LOCALITY_PROCESS_LOCAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_SERVER_LOCALITY_VALUES.SERVER_LOCALITY_MACHINE_LOCAL = 1;
     * }
     */
    public static int SERVER_LOCALITY_MACHINE_LOCAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagRPCOPT_SERVER_LOCALITY_VALUES.SERVER_LOCALITY_REMOTE = 2;
     * }
     */
    public static int SERVER_LOCALITY_REMOTE() {
        return (int)2L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3102.const$5,"__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3102.const$5, "__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3102.const$5, "__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3103.const$0,"__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3103.const$0, "__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3103.const$0, "__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IRpcOptions;
     * }
     */
    public static MemorySegment IID_IRpcOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3103.const$1,"IID_IRpcOptions");
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_EXCEPTION_HANDLING = 1;
     * }
     */
    public static int COMGLB_EXCEPTION_HANDLING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_APPID = 2;
     * }
     */
    public static int COMGLB_APPID() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_RPC_THREADPOOL_SETTING = 3;
     * }
     */
    public static int COMGLB_RPC_THREADPOOL_SETTING() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_RO_SETTINGS = 4;
     * }
     */
    public static int COMGLB_RO_SETTINGS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_UNMARSHALING_POLICY = 5;
     * }
     */
    public static int COMGLB_UNMARSHALING_POLICY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_PROPERTIES_RESERVED1 = 6;
     * }
     */
    public static int COMGLB_PROPERTIES_RESERVED1() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_PROPERTIES_RESERVED2 = 7;
     * }
     */
    public static int COMGLB_PROPERTIES_RESERVED2() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_PROPERTIES.COMGLB_PROPERTIES_RESERVED3 = 8;
     * }
     */
    public static int COMGLB_PROPERTIES_RESERVED3() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_EH_VALUES.COMGLB_EXCEPTION_HANDLE = 0;
     * }
     */
    public static int COMGLB_EXCEPTION_HANDLE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_EH_VALUES.COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1;
     * }
     */
    public static int COMGLB_EXCEPTION_DONOT_HANDLE_FATAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_EH_VALUES.COMGLB_EXCEPTION_DONOT_HANDLE = 1;
     * }
     */
    public static int COMGLB_EXCEPTION_DONOT_HANDLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_EH_VALUES.COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2;
     * }
     */
    public static int COMGLB_EXCEPTION_DONOT_HANDLE_ANY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RPCTP_VALUES.COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL = 0;
     * }
     */
    public static int COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RPCTP_VALUES.COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL = 1;
     * }
     */
    public static int COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES = 1;
     * }
     */
    public static int COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES = 2;
     * }
     */
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES = 4;
     * }
     */
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_FAST_RUNDOWN = 8;
     * }
     */
    public static int COMGLB_FAST_RUNDOWN() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED1 = 16;
     * }
     */
    public static int COMGLB_RESERVED1() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED2 = 32;
     * }
     */
    public static int COMGLB_RESERVED2() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED3 = 64;
     * }
     */
    public static int COMGLB_RESERVED3() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES = 128;
     * }
     */
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED4 = 256;
     * }
     */
    public static int COMGLB_RESERVED4() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED5 = 512;
     * }
     */
    public static int COMGLB_RESERVED5() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_RO_FLAGS.COMGLB_RESERVED6 = 1024;
     * }
     */
    public static int COMGLB_RESERVED6() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES.COMGLB_UNMARSHALING_POLICY_NORMAL = 0;
     * }
     */
    public static int COMGLB_UNMARSHALING_POLICY_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES.COMGLB_UNMARSHALING_POLICY_STRONG = 1;
     * }
     */
    public static int COMGLB_UNMARSHALING_POLICY_STRONG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES.COMGLB_UNMARSHALING_POLICY_HYBRID = 2;
     * }
     */
    public static int COMGLB_UNMARSHALING_POLICY_HYBRID() {
        return (int)2L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3105.const$3,"__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3105.const$3, "__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3105.const$3, "__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3105.const$4,"__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3105.const$4, "__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3105.const$4, "__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IGlobalOptions;
     * }
     */
    public static MemorySegment IID_IGlobalOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3105.const$5,"IID_IGlobalOptions");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3108.const$1,"__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3108.const$1, "__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3108.const$1, "__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3108.const$2,"__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3108.const$2, "__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3108.const$2, "__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct ISurrogate* LPSURROGATE;
     * }
     */
    public static final AddressLayout LPSURROGATE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_ISurrogate;
     * }
     */
    public static MemorySegment IID_ISurrogate$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3108.const$3,"IID_ISurrogate");
    }
    /**
     * {@snippet :
     * typedef struct IGlobalInterfaceTable* LPGLOBALINTERFACETABLE;
     * }
     */
    public static final AddressLayout LPGLOBALINTERFACETABLE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IGlobalInterfaceTable;
     * }
     */
    public static MemorySegment IID_IGlobalInterfaceTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3110.const$5,"IID_IGlobalInterfaceTable");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3113.const$3,"__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3113.const$3, "__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3113.const$3, "__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3113.const$4,"__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3113.const$4, "__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3113.const$4, "__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_ISynchronize;
     * }
     */
    public static MemorySegment IID_ISynchronize$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3113.const$5,"IID_ISynchronize");
    }
    /**
     * {@snippet :
     * const IID IID_ISynchronizeHandle;
     * }
     */
    public static MemorySegment IID_ISynchronizeHandle$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3116.const$3,"IID_ISynchronizeHandle");
    }
    /**
     * {@snippet :
     * const IID IID_ISynchronizeEvent;
     * }
     */
    public static MemorySegment IID_ISynchronizeEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3118.const$3,"IID_ISynchronizeEvent");
    }
    /**
     * {@snippet :
     * const IID IID_ISynchronizeContainer;
     * }
     */
    public static MemorySegment IID_ISynchronizeContainer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3120.const$5,"IID_ISynchronizeContainer");
    }
    /**
     * {@snippet :
     * const IID IID_ISynchronizeMutex;
     * }
     */
    public static MemorySegment IID_ISynchronizeMutex$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3123.const$1,"IID_ISynchronizeMutex");
    }
    /**
     * {@snippet :
     * typedef struct ICancelMethodCalls* LPCANCELMETHODCALLS;
     * }
     */
    public static final AddressLayout LPCANCELMETHODCALLS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_ICancelMethodCalls;
     * }
     */
    public static MemorySegment IID_ICancelMethodCalls$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3126.const$1,"IID_ICancelMethodCalls");
    }
    /**
     * {@snippet :
     * enum tagDCOM_CALL_STATE.DCOM_NONE = 0;
     * }
     */
    public static int DCOM_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagDCOM_CALL_STATE.DCOM_CALL_COMPLETE = 1;
     * }
     */
    public static int DCOM_CALL_COMPLETE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagDCOM_CALL_STATE.DCOM_CALL_CANCELED = 2;
     * }
     */
    public static int DCOM_CALL_CANCELED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * const IID IID_IAsyncManager;
     * }
     */
    public static MemorySegment IID_IAsyncManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3128.const$3,"IID_IAsyncManager");
    }
    /**
     * {@snippet :
     * const IID IID_ICallFactory;
     * }
     */
    public static MemorySegment IID_ICallFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3131.const$1,"IID_ICallFactory");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcHelper;
     * }
     */
    public static MemorySegment IID_IRpcHelper$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3133.const$1,"IID_IRpcHelper");
    }
    /**
     * {@snippet :
     * const IID IID_IReleaseMarshalBuffers;
     * }
     */
    public static MemorySegment IID_IReleaseMarshalBuffers$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3135.const$3,"IID_IReleaseMarshalBuffers");
    }
    /**
     * {@snippet :
     * const IID IID_IWaitMultiple;
     * }
     */
    public static MemorySegment IID_IWaitMultiple$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3137.const$3,"IID_IWaitMultiple");
    }
    /**
     * {@snippet :
     * typedef struct IAddrTrackingControl* LPADDRTRACKINGCONTROL;
     * }
     */
    public static final AddressLayout LPADDRTRACKINGCONTROL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IAddrTrackingControl;
     * }
     */
    public static MemorySegment IID_IAddrTrackingControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3139.const$5,"IID_IAddrTrackingControl");
    }
    /**
     * {@snippet :
     * typedef struct IAddrExclusionControl* LPADDREXCLUSIONCONTROL;
     * }
     */
    public static final AddressLayout LPADDREXCLUSIONCONTROL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * const IID IID_IAddrExclusionControl;
     * }
     */
    public static MemorySegment IID_IAddrExclusionControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3142.const$1,"IID_IAddrExclusionControl");
    }
    /**
     * {@snippet :
     * const IID IID_IPipeByte;
     * }
     */
    public static MemorySegment IID_IPipeByte$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3144.const$3,"IID_IPipeByte");
    }
    /**
     * {@snippet :
     * const IID IID_AsyncIPipeByte;
     * }
     */
    public static MemorySegment IID_AsyncIPipeByte$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3146.const$5,"IID_AsyncIPipeByte");
    }
    /**
     * {@snippet :
     * const IID IID_IPipeLong;
     * }
     */
    public static MemorySegment IID_IPipeLong$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3149.const$5,"IID_IPipeLong");
    }
    /**
     * {@snippet :
     * const IID IID_AsyncIPipeLong;
     * }
     */
    public static MemorySegment IID_AsyncIPipeLong$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3152.const$1,"IID_AsyncIPipeLong");
    }
    /**
     * {@snippet :
     * const IID IID_IPipeDouble;
     * }
     */
    public static MemorySegment IID_IPipeDouble$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3155.const$1,"IID_IPipeDouble");
    }
    /**
     * {@snippet :
     * const IID IID_AsyncIPipeDouble;
     * }
     */
    public static MemorySegment IID_AsyncIPipeDouble$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3157.const$3,"IID_AsyncIPipeDouble");
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_NONE = 0;
     * }
     */
    public static int APTTYPEQUALIFIER_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_IMPLICIT_MTA = 1;
     * }
     */
    public static int APTTYPEQUALIFIER_IMPLICIT_MTA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_NA_ON_MTA = 2;
     * }
     */
    public static int APTTYPEQUALIFIER_NA_ON_MTA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_NA_ON_STA = 3;
     * }
     */
    public static int APTTYPEQUALIFIER_NA_ON_STA() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4;
     * }
     */
    public static int APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_NA_ON_MAINSTA = 5;
     * }
     */
    public static int APTTYPEQUALIFIER_NA_ON_MAINSTA() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_APPLICATION_STA = 6;
     * }
     */
    public static int APTTYPEQUALIFIER_APPLICATION_STA() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _APTTYPEQUALIFIER.APTTYPEQUALIFIER_RESERVED_1 = 7;
     * }
     */
    public static int APTTYPEQUALIFIER_RESERVED_1() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _APTTYPE.APTTYPE_CURRENT = -1;
     * }
     */
    public static int APTTYPE_CURRENT() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum _APTTYPE.APTTYPE_STA = 0;
     * }
     */
    public static int APTTYPE_STA() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _APTTYPE.APTTYPE_MTA = 1;
     * }
     */
    public static int APTTYPE_MTA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _APTTYPE.APTTYPE_NA = 2;
     * }
     */
    public static int APTTYPE_NA() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _APTTYPE.APTTYPE_MAINSTA = 3;
     * }
     */
    public static int APTTYPE_MAINSTA() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _THDTYPE.THDTYPE_BLOCKMESSAGES = 0;
     * }
     */
    public static int THDTYPE_BLOCKMESSAGES() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _THDTYPE.THDTYPE_PROCESSMESSAGES = 1;
     * }
     */
    public static int THDTYPE_PROCESSMESSAGES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef unsigned long APARTMENTID;
     * }
     */
    public static final OfInt APARTMENTID = JAVA_INT;
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3160.const$3,"__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3160.const$3, "__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3160.const$3, "__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3160.const$4,"__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3160.const$4, "__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3160.const$4, "__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IComThreadingInfo;
     * }
     */
    public static MemorySegment IID_IComThreadingInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3160.const$5,"IID_IComThreadingInfo");
    }
    /**
     * {@snippet :
     * const IID IID_IProcessInitControl;
     * }
     */
    public static MemorySegment IID_IProcessInitControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3163.const$5,"IID_IProcessInitControl");
    }
    /**
     * {@snippet :
     * const IID IID_IFastRundown;
     * }
     */
    public static MemorySegment IID_IFastRundown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3165.const$5,"IID_IFastRundown");
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_SOURCE_IS_APP_CONTAINER = 0;
     * }
     */
    public static int CO_MARSHALING_SOURCE_IS_APP_CONTAINER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1 = -2147483648;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2 = -2147483647;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2() {
        return (int)-2147483647L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3 = -2147483646;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3() {
        return (int)-2147483646L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4 = -2147483645;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4() {
        return (int)-2147483645L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5 = -2147483644;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5() {
        return (int)-2147483644L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6 = -2147483643;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6() {
        return (int)-2147483643L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7 = -2147483642;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7() {
        return (int)-2147483642L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8 = -2147483641;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8() {
        return (int)-2147483641L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9 = -2147483640;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9() {
        return (int)-2147483640L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10 = -2147483639;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10() {
        return (int)-2147483639L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11 = -2147483638;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11() {
        return (int)-2147483638L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12 = -2147483637;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12() {
        return (int)-2147483637L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13 = -2147483636;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13() {
        return (int)-2147483636L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14 = -2147483635;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14() {
        return (int)-2147483635L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15 = -2147483634;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15() {
        return (int)-2147483634L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16 = -2147483633;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16() {
        return (int)-2147483633L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17 = -2147483632;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17() {
        return (int)-2147483632L;
    }
    /**
     * {@snippet :
     * enum CO_MARSHALING_CONTEXT_ATTRIBUTES.CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_18 = -2147483631;
     * }
     */
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_18() {
        return (int)-2147483631L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3167.const$3,"__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3167.const$3, "__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3167.const$3, "__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3167.const$4,"__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3167.const$4, "__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3167.const$4, "__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IMarshalingStream;
     * }
     */
    public static MemorySegment IID_IMarshalingStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3167.const$5,"IID_IMarshalingStream");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3173.const$3,"__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3173.const$3, "__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3173.const$3, "__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3173.const$4,"__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3173.const$4, "__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3173.const$4, "__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IAgileReference;
     * }
     */
    public static MemorySegment IID_IAgileReference$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3173.const$5,"IID_IAgileReference");
    }
    /**
     * {@snippet :
     * const GUID IID_ICallbackWithNoReentrancyToApplicationSTA;
     * }
     */
    public static MemorySegment IID_ICallbackWithNoReentrancyToApplicationSTA$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3175.const$5,"IID_ICallbackWithNoReentrancyToApplicationSTA");
    }
    /**
     * {@snippet :
     * typedef struct MachineGlobalObjectTableRegistrationToken__* MachineGlobalObjectTableRegistrationToken;
     * }
     */
    public static final AddressLayout MachineGlobalObjectTableRegistrationToken = RuntimeHelper.POINTER;
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3176.const$2,"__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3176.const$2, "__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3176.const$2, "__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3176.const$3,"__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3176.const$3, "__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3176.const$3, "__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_IMachineGlobalObjectTable;
     * }
     */
    public static MemorySegment IID_IMachineGlobalObjectTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3176.const$4,"IID_IMachineGlobalObjectTable");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3179.const$2,"__MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3179.const$2, "__MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3179.const$2, "__MIDL_itf_objidlbase_0000_0054_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3179.const$3,"__MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3179.const$3, "__MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3179.const$3, "__MIDL_itf_objidlbase_0000_0054_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const IID IID_ISupportAllowLowerTrustActivation;
     * }
     */
    public static MemorySegment IID_ISupportAllowLowerTrustActivation$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3179.const$4,"IID_ISupportAllowLowerTrustActivation");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3181.const$2,"__MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3181.const$2, "__MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3181.const$2, "__MIDL_itf_objidlbase_0000_0055_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3181.const$3,"__MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$3181.const$3, "__MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$3181.const$3, "__MIDL_itf_objidlbase_0000_0055_v0_0_s_ifspec"), x);
    }
    public static MethodHandle IEnumUnknown_Next_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3181.const$4,"IEnumUnknown_Next_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IEnumUnknown_Next_Proxy(IEnumUnknown* This, ULONG celt, IUnknown** rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumUnknown_Next_Proxy(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumUnknown_Next_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumUnknown_Next_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3181.const$5,"IEnumUnknown_Next_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IEnumUnknown_Next_Stub(IEnumUnknown* This, ULONG celt, IUnknown** rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumUnknown_Next_Stub(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumUnknown_Next_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_Next_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$0,"IEnumString_Next_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IEnumString_Next_Proxy(IEnumString* This, ULONG celt, LPOLESTR* rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumString_Next_Proxy(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumString_Next_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_Next_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$1,"IEnumString_Next_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IEnumString_Next_Stub(IEnumString* This, ULONG celt, LPOLESTR* rgelt, ULONG* pceltFetched);
     * }
     */
    public static int IEnumString_Next_Stub(MemorySegment This, int celt, MemorySegment rgelt, MemorySegment pceltFetched) {
        var mh$ = IEnumString_Next_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Read_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$2,"ISequentialStream_Read_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_Read_Proxy(ISequentialStream* This, void* pv, ULONG cb, ULONG* pcbRead);
     * }
     */
    public static int ISequentialStream_Read_Proxy(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbRead) {
        var mh$ = ISequentialStream_Read_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Read_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$3,"ISequentialStream_Read_Stub");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_Read_Stub(ISequentialStream* This, byte* pv, ULONG cb, ULONG* pcbRead);
     * }
     */
    public static int ISequentialStream_Read_Stub(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbRead) {
        var mh$ = ISequentialStream_Read_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Write_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$4,"ISequentialStream_Write_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_Write_Proxy(ISequentialStream* This, void* pv, ULONG cb, ULONG* pcbWritten);
     * }
     */
    public static int ISequentialStream_Write_Proxy(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbWritten) {
        var mh$ = ISequentialStream_Write_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Write_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3182.const$5,"ISequentialStream_Write_Stub");
    }
    /**
     * {@snippet :
     * HRESULT ISequentialStream_Write_Stub(ISequentialStream* This, const byte* pv, ULONG cb, ULONG* pcbWritten);
     * }
     */
    public static int ISequentialStream_Write_Stub(MemorySegment This, MemorySegment pv, int cb, MemorySegment pcbWritten) {
        var mh$ = ISequentialStream_Write_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_Seek_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$0,"IStream_Seek_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IStream_Seek_Proxy(IStream* This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER* plibNewPosition);
     * }
     */
    public static int IStream_Seek_Proxy(MemorySegment This, MemorySegment dlibMove, int dwOrigin, MemorySegment plibNewPosition) {
        var mh$ = IStream_Seek_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_Seek_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$1,"IStream_Seek_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IStream_Seek_Stub(IStream* This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER* plibNewPosition);
     * }
     */
    public static int IStream_Seek_Stub(MemorySegment This, MemorySegment dlibMove, int dwOrigin, MemorySegment plibNewPosition) {
        var mh$ = IStream_Seek_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_CopyTo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$2,"IStream_CopyTo_Proxy");
    }
    /**
     * {@snippet :
     * HRESULT IStream_CopyTo_Proxy(IStream* This, IStream* pstm, ULARGE_INTEGER cb, ULARGE_INTEGER* pcbRead, ULARGE_INTEGER* pcbWritten);
     * }
     */
    public static int IStream_CopyTo_Proxy(MemorySegment This, MemorySegment pstm, MemorySegment cb, MemorySegment pcbRead, MemorySegment pcbWritten) {
        var mh$ = IStream_CopyTo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_CopyTo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$3183.const$3,"IStream_CopyTo_Stub");
    }
    /**
     * {@snippet :
     * HRESULT IStream_CopyTo_Stub(IStream* This, IStream* pstm, ULARGE_INTEGER cb, ULARGE_INTEGER* pcbRead, ULARGE_INTEGER* pcbWritten);
     * }
     */
    public static int IStream_CopyTo_Stub(MemorySegment This, MemorySegment pstm, MemorySegment cb, MemorySegment pcbRead, MemorySegment pcbWritten) {
        var mh$ = IStream_CopyTo_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * const IID GUID_NULL;
     * }
     */
    public static MemorySegment GUID_NULL$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3183.const$4,"GUID_NULL");
    }
    /**
     * {@snippet :
     * const IID CATID_MARSHALER;
     * }
     */
    public static MemorySegment CATID_MARSHALER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3183.const$5,"CATID_MARSHALER");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcChannel;
     * }
     */
    public static MemorySegment IID_IRpcChannel$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$0,"IID_IRpcChannel");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcStub;
     * }
     */
    public static MemorySegment IID_IRpcStub$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$1,"IID_IRpcStub");
    }
    /**
     * {@snippet :
     * const IID IID_IStubManager;
     * }
     */
    public static MemorySegment IID_IStubManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$2,"IID_IStubManager");
    }
    /**
     * {@snippet :
     * const IID IID_IRpcProxy;
     * }
     */
    public static MemorySegment IID_IRpcProxy$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$3,"IID_IRpcProxy");
    }
    /**
     * {@snippet :
     * const IID IID_IProxyManager;
     * }
     */
    public static MemorySegment IID_IProxyManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$4,"IID_IProxyManager");
    }
    /**
     * {@snippet :
     * const IID IID_IPSFactory;
     * }
     */
    public static MemorySegment IID_IPSFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3184.const$5,"IID_IPSFactory");
    }
    /**
     * {@snippet :
     * const IID IID_IInternalMoniker;
     * }
     */
    public static MemorySegment IID_IInternalMoniker$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$0,"IID_IInternalMoniker");
    }
    /**
     * {@snippet :
     * const IID IID_IDfReserved1;
     * }
     */
    public static MemorySegment IID_IDfReserved1$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$1,"IID_IDfReserved1");
    }
    /**
     * {@snippet :
     * const IID IID_IDfReserved2;
     * }
     */
    public static MemorySegment IID_IDfReserved2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$2,"IID_IDfReserved2");
    }
    /**
     * {@snippet :
     * const IID IID_IDfReserved3;
     * }
     */
    public static MemorySegment IID_IDfReserved3$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$3,"IID_IDfReserved3");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StdMarshal;
     * }
     */
    public static MemorySegment CLSID_StdMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$4,"CLSID_StdMarshal");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_AggStdMarshal;
     * }
     */
    public static MemorySegment CLSID_AggStdMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3185.const$5,"CLSID_AggStdMarshal");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StdAsyncActManager;
     * }
     */
    public static MemorySegment CLSID_StdAsyncActManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$0,"CLSID_StdAsyncActManager");
    }
    /**
     * {@snippet :
     * const IID IID_IStub;
     * }
     */
    public static MemorySegment IID_IStub$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$1,"IID_IStub");
    }
    /**
     * {@snippet :
     * const IID IID_IProxy;
     * }
     */
    public static MemorySegment IID_IProxy$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$2,"IID_IProxy");
    }
    /**
     * {@snippet :
     * const IID IID_IEnumGeneric;
     * }
     */
    public static MemorySegment IID_IEnumGeneric$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$3,"IID_IEnumGeneric");
    }
    /**
     * {@snippet :
     * const IID IID_IEnumHolder;
     * }
     */
    public static MemorySegment IID_IEnumHolder$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$4,"IID_IEnumHolder");
    }
    /**
     * {@snippet :
     * const IID IID_IEnumCallback;
     * }
     */
    public static MemorySegment IID_IEnumCallback$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3186.const$5,"IID_IEnumCallback");
    }
    /**
     * {@snippet :
     * const IID IID_IOleManager;
     * }
     */
    public static MemorySegment IID_IOleManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$0,"IID_IOleManager");
    }
    /**
     * {@snippet :
     * const IID IID_IOlePresObj;
     * }
     */
    public static MemorySegment IID_IOlePresObj$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$1,"IID_IOlePresObj");
    }
    /**
     * {@snippet :
     * const IID IID_IDebug;
     * }
     */
    public static MemorySegment IID_IDebug$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$2,"IID_IDebug");
    }
    /**
     * {@snippet :
     * const IID IID_IDebugStream;
     * }
     */
    public static MemorySegment IID_IDebugStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$3,"IID_IDebugStream");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSGenObject;
     * }
     */
    public static MemorySegment CLSID_PSGenObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$4,"CLSID_PSGenObject");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSClientSite;
     * }
     */
    public static MemorySegment CLSID_PSClientSite$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3187.const$5,"CLSID_PSClientSite");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSClassObject;
     * }
     */
    public static MemorySegment CLSID_PSClassObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$0,"CLSID_PSClassObject");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSInPlaceActive;
     * }
     */
    public static MemorySegment CLSID_PSInPlaceActive$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$1,"CLSID_PSInPlaceActive");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSInPlaceFrame;
     * }
     */
    public static MemorySegment CLSID_PSInPlaceFrame$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$2,"CLSID_PSInPlaceFrame");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSDragDrop;
     * }
     */
    public static MemorySegment CLSID_PSDragDrop$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$3,"CLSID_PSDragDrop");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSBindCtx;
     * }
     */
    public static MemorySegment CLSID_PSBindCtx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$4,"CLSID_PSBindCtx");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_PSEnumerators;
     * }
     */
    public static MemorySegment CLSID_PSEnumerators$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3188.const$5,"CLSID_PSEnumerators");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StaticMetafile;
     * }
     */
    public static MemorySegment CLSID_StaticMetafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$0,"CLSID_StaticMetafile");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StaticDib;
     * }
     */
    public static MemorySegment CLSID_StaticDib$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$1,"CLSID_StaticDib");
    }
    /**
     * {@snippet :
     * const CLSID CID_CDfsVolume;
     * }
     */
    public static MemorySegment CID_CDfsVolume$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$2,"CID_CDfsVolume");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_DCOMAccessControl;
     * }
     */
    public static MemorySegment CLSID_DCOMAccessControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$3,"CLSID_DCOMAccessControl");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_GlobalOptions;
     * }
     */
    public static MemorySegment CLSID_GlobalOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$4,"CLSID_GlobalOptions");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StdGlobalInterfaceTable;
     * }
     */
    public static MemorySegment CLSID_StdGlobalInterfaceTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3189.const$5,"CLSID_StdGlobalInterfaceTable");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_MachineGlobalObjectTable;
     * }
     */
    public static MemorySegment CLSID_MachineGlobalObjectTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$0,"CLSID_MachineGlobalObjectTable");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_ActivationCapabilities;
     * }
     */
    public static MemorySegment CLSID_ActivationCapabilities$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$1,"CLSID_ActivationCapabilities");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_ComBinding;
     * }
     */
    public static MemorySegment CLSID_ComBinding$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$2,"CLSID_ComBinding");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_StdEvent;
     * }
     */
    public static MemorySegment CLSID_StdEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$3,"CLSID_StdEvent");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_ManualResetEvent;
     * }
     */
    public static MemorySegment CLSID_ManualResetEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$4,"CLSID_ManualResetEvent");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_SynchronizeContainer;
     * }
     */
    public static MemorySegment CLSID_SynchronizeContainer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3190.const$5,"CLSID_SynchronizeContainer");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_AddrControl;
     * }
     */
    public static MemorySegment CLSID_AddrControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$0,"CLSID_AddrControl");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_ContextSwitcher;
     * }
     */
    public static MemorySegment CLSID_ContextSwitcher$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$1,"CLSID_ContextSwitcher");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDFormKrnl;
     * }
     */
    public static MemorySegment CLSID_CCDFormKrnl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$2,"CLSID_CCDFormKrnl");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$3,"CLSID_CCDPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDFormDialog;
     * }
     */
    public static MemorySegment CLSID_CCDFormDialog$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$4,"CLSID_CCDFormDialog");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDCommandButton;
     * }
     */
    public static MemorySegment CLSID_CCDCommandButton$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3191.const$5,"CLSID_CCDCommandButton");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDComboBox;
     * }
     */
    public static MemorySegment CLSID_CCDComboBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$0,"CLSID_CCDComboBox");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDTextBox;
     * }
     */
    public static MemorySegment CLSID_CCDTextBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$1,"CLSID_CCDTextBox");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDCheckBox;
     * }
     */
    public static MemorySegment CLSID_CCDCheckBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$2,"CLSID_CCDCheckBox");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDLabel;
     * }
     */
    public static MemorySegment CLSID_CCDLabel$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$3,"CLSID_CCDLabel");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDOptionButton;
     * }
     */
    public static MemorySegment CLSID_CCDOptionButton$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$4,"CLSID_CCDOptionButton");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDListBox;
     * }
     */
    public static MemorySegment CLSID_CCDListBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3192.const$5,"CLSID_CCDListBox");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDScrollBar;
     * }
     */
    public static MemorySegment CLSID_CCDScrollBar$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$0,"CLSID_CCDScrollBar");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDGroupBox;
     * }
     */
    public static MemorySegment CLSID_CCDGroupBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$1,"CLSID_CCDGroupBox");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDGeneralPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDGeneralPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$2,"CLSID_CCDGeneralPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDGenericPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDGenericPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$3,"CLSID_CCDGenericPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDFontPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDFontPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$4,"CLSID_CCDFontPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDColorPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDColorPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3193.const$5,"CLSID_CCDColorPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDLabelPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDLabelPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$0,"CLSID_CCDLabelPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDCheckBoxPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDCheckBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$1,"CLSID_CCDCheckBoxPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDTextBoxPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDTextBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$2,"CLSID_CCDTextBoxPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDOptionButtonPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDOptionButtonPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$3,"CLSID_CCDOptionButtonPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDListBoxPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDListBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$4,"CLSID_CCDListBoxPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDCommandButtonPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDCommandButtonPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3194.const$5,"CLSID_CCDCommandButtonPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDComboBoxPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDComboBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$0,"CLSID_CCDComboBoxPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDScrollBarPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDScrollBarPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$1,"CLSID_CCDScrollBarPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDGroupBoxPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDGroupBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$2,"CLSID_CCDGroupBoxPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CCDXObjectPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CCDXObjectPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$3,"CLSID_CCDXObjectPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CStdPropertyFrame;
     * }
     */
    public static MemorySegment CLSID_CStdPropertyFrame$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$4,"CLSID_CStdPropertyFrame");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CFormPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CFormPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3195.const$5,"CLSID_CFormPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CGridPropertyPage;
     * }
     */
    public static MemorySegment CLSID_CGridPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$0,"CLSID_CGridPropertyPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CWSJArticlePage;
     * }
     */
    public static MemorySegment CLSID_CWSJArticlePage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$1,"CLSID_CWSJArticlePage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_CSystemPage;
     * }
     */
    public static MemorySegment CLSID_CSystemPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$2,"CLSID_CSystemPage");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_IdentityUnmarshal;
     * }
     */
    public static MemorySegment CLSID_IdentityUnmarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$3,"CLSID_IdentityUnmarshal");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_InProcFreeMarshaler;
     * }
     */
    public static MemorySegment CLSID_InProcFreeMarshaler$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$4,"CLSID_InProcFreeMarshaler");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_Picture_Metafile;
     * }
     */
    public static MemorySegment CLSID_Picture_Metafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3196.const$5,"CLSID_Picture_Metafile");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_Picture_EnhMetafile;
     * }
     */
    public static MemorySegment CLSID_Picture_EnhMetafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3197.const$0,"CLSID_Picture_EnhMetafile");
    }
    /**
     * {@snippet :
     * const CLSID CLSID_Picture_Dib;
     * }
     */
    public static MemorySegment CLSID_Picture_Dib$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3197.const$1,"CLSID_Picture_Dib");
    }
    /**
     * {@snippet :
     * const GUID GUID_TRISTATE;
     * }
     */
    public static MemorySegment GUID_TRISTATE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$3197.const$2,"GUID_TRISTATE");
    }
    public static MethodHandle CoGetMalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$3,"CoGetMalloc");
    }
    /**
     * {@snippet :
     * HRESULT CoGetMalloc(DWORD dwMemContext, LPMALLOC* ppMalloc);
     * }
     */
    public static int CoGetMalloc(int dwMemContext, MemorySegment ppMalloc) {
        var mh$ = CoGetMalloc$MH();
        try {
            return (int)mh$.invokeExact(dwMemContext, ppMalloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateStreamOnHGlobal$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$4,"CreateStreamOnHGlobal");
    }
    /**
     * {@snippet :
     * HRESULT CreateStreamOnHGlobal(HGLOBAL hGlobal, BOOL fDeleteOnRelease, LPSTREAM* ppstm);
     * }
     */
    public static int CreateStreamOnHGlobal(MemorySegment hGlobal, int fDeleteOnRelease, MemorySegment ppstm) {
        var mh$ = CreateStreamOnHGlobal$MH();
        try {
            return (int)mh$.invokeExact(hGlobal, fDeleteOnRelease, ppstm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetHGlobalFromStream$MH() {
        return RuntimeHelper.requireNonNull(constants$3197.const$5,"GetHGlobalFromStream");
    }
    /**
     * {@snippet :
     * HRESULT GetHGlobalFromStream(LPSTREAM pstm, HGLOBAL* phglobal);
     * }
     */
    public static int GetHGlobalFromStream(MemorySegment pstm, MemorySegment phglobal) {
        var mh$ = GetHGlobalFromStream$MH();
        try {
            return (int)mh$.invokeExact(pstm, phglobal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$0,"CoUninitialize");
    }
    /**
     * {@snippet :
     * void CoUninitialize();
     * }
     */
    public static void CoUninitialize() {
        var mh$ = CoUninitialize$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCurrentProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$1,"CoGetCurrentProcess");
    }
    /**
     * {@snippet :
     * DWORD CoGetCurrentProcess();
     * }
     */
    public static int CoGetCurrentProcess() {
        var mh$ = CoGetCurrentProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInitializeEx$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$2,"CoInitializeEx");
    }
    /**
     * {@snippet :
     * HRESULT CoInitializeEx(LPVOID pvReserved, DWORD dwCoInit);
     * }
     */
    public static int CoInitializeEx(MemorySegment pvReserved, int dwCoInit) {
        var mh$ = CoInitializeEx$MH();
        try {
            return (int)mh$.invokeExact(pvReserved, dwCoInit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCallerTID$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$3,"CoGetCallerTID");
    }
    /**
     * {@snippet :
     * HRESULT CoGetCallerTID(LPDWORD lpdwTID);
     * }
     */
    public static int CoGetCallerTID(MemorySegment lpdwTID) {
        var mh$ = CoGetCallerTID$MH();
        try {
            return (int)mh$.invokeExact(lpdwTID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCurrentLogicalThreadId$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$4,"CoGetCurrentLogicalThreadId");
    }
    /**
     * {@snippet :
     * HRESULT CoGetCurrentLogicalThreadId(GUID* pguid);
     * }
     */
    public static int CoGetCurrentLogicalThreadId(MemorySegment pguid) {
        var mh$ = CoGetCurrentLogicalThreadId$MH();
        try {
            return (int)mh$.invokeExact(pguid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetContextToken$MH() {
        return RuntimeHelper.requireNonNull(constants$3198.const$5,"CoGetContextToken");
    }
    /**
     * {@snippet :
     * HRESULT CoGetContextToken(ULONG_PTR* pToken);
     * }
     */
    public static int CoGetContextToken(MemorySegment pToken) {
        var mh$ = CoGetContextToken$MH();
        try {
            return (int)mh$.invokeExact(pToken);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetDefaultContext$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$0,"CoGetDefaultContext");
    }
    /**
     * {@snippet :
     * HRESULT CoGetDefaultContext(APTTYPE aptType, const IID* riid, void** ppv);
     * }
     */
    public static int CoGetDefaultContext(int aptType, MemorySegment riid, MemorySegment ppv) {
        var mh$ = CoGetDefaultContext$MH();
        try {
            return (int)mh$.invokeExact(aptType, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetApartmentType$MH() {
        return RuntimeHelper.requireNonNull(constants$3199.const$1,"CoGetApartmentType");
    }
    /**
     * {@snippet :
     * HRESULT CoGetApartmentType(APTTYPE* pAptType, APTTYPEQUALIFIER* pAptQualifier);
     * }
     */
    public static int CoGetApartmentType(MemorySegment pAptType, MemorySegment pAptQualifier) {
        var mh$ = CoGetApartmentType$MH();
        try {
            return (int)mh$.invokeExact(pAptType, pAptQualifier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagServerInformation* PServerInformation;
     * }
     */
    public static final AddressLayout PServerInformation = RuntimeHelper.POINTER;
    public static MethodHandle CoDecodeProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$1,"CoDecodeProxy");
    }
    /**
     * {@snippet :
     * HRESULT CoDecodeProxy(DWORD dwClientPid, UINT64 ui64ProxyAddress, PServerInformation pServerInformation);
     * }
     */
    public static int CoDecodeProxy(int dwClientPid, long ui64ProxyAddress, MemorySegment pServerInformation) {
        var mh$ = CoDecodeProxy$MH();
        try {
            return (int)mh$.invokeExact(dwClientPid, ui64ProxyAddress, pServerInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct CO_MTA_USAGE_COOKIE__* CO_MTA_USAGE_COOKIE;
     * }
     */
    public static final AddressLayout CO_MTA_USAGE_COOKIE = RuntimeHelper.POINTER;
    public static MethodHandle CoIncrementMTAUsage$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$4,"CoIncrementMTAUsage");
    }
    /**
     * {@snippet :
     * HRESULT CoIncrementMTAUsage(CO_MTA_USAGE_COOKIE* pCookie);
     * }
     */
    public static int CoIncrementMTAUsage(MemorySegment pCookie) {
        var mh$ = CoIncrementMTAUsage$MH();
        try {
            return (int)mh$.invokeExact(pCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDecrementMTAUsage$MH() {
        return RuntimeHelper.requireNonNull(constants$3200.const$5,"CoDecrementMTAUsage");
    }
    /**
     * {@snippet :
     * HRESULT CoDecrementMTAUsage(CO_MTA_USAGE_COOKIE Cookie);
     * }
     */
    public static int CoDecrementMTAUsage(MemorySegment Cookie) {
        var mh$ = CoDecrementMTAUsage$MH();
        try {
            return (int)mh$.invokeExact(Cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoAllowUnmarshalerCLSID$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$0,"CoAllowUnmarshalerCLSID");
    }
    /**
     * {@snippet :
     * HRESULT CoAllowUnmarshalerCLSID(const IID* clsid);
     * }
     */
    public static int CoAllowUnmarshalerCLSID(MemorySegment clsid) {
        var mh$ = CoAllowUnmarshalerCLSID$MH();
        try {
            return (int)mh$.invokeExact(clsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetObjectContext$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$1,"CoGetObjectContext");
    }
    /**
     * {@snippet :
     * HRESULT CoGetObjectContext(const IID* riid, LPVOID* ppv);
     * }
     */
    public static int CoGetObjectContext(MemorySegment riid, MemorySegment ppv) {
        var mh$ = CoGetObjectContext$MH();
        try {
            return (int)mh$.invokeExact(riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$2,"CoGetClassObject");
    }
    /**
     * {@snippet :
     * HRESULT CoGetClassObject(const IID* rclsid, DWORD dwClsContext, LPVOID pvReserved, const IID* riid, LPVOID* ppv);
     * }
     */
    public static int CoGetClassObject(MemorySegment rclsid, int dwClsContext, MemorySegment pvReserved, MemorySegment riid, MemorySegment ppv) {
        var mh$ = CoGetClassObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, dwClsContext, pvReserved, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$3,"CoRegisterClassObject");
    }
    /**
     * {@snippet :
     * HRESULT CoRegisterClassObject(const IID* rclsid, LPUNKNOWN pUnk, DWORD dwClsContext, DWORD flags, LPDWORD lpdwRegister);
     * }
     */
    public static int CoRegisterClassObject(MemorySegment rclsid, MemorySegment pUnk, int dwClsContext, int flags, MemorySegment lpdwRegister) {
        var mh$ = CoRegisterClassObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, pUnk, dwClsContext, flags, lpdwRegister);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRevokeClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$4,"CoRevokeClassObject");
    }
    /**
     * {@snippet :
     * HRESULT CoRevokeClassObject(DWORD dwRegister);
     * }
     */
    public static int CoRevokeClassObject(int dwRegister) {
        var mh$ = CoRevokeClassObject$MH();
        try {
            return (int)mh$.invokeExact(dwRegister);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoResumeClassObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$3201.const$5,"CoResumeClassObjects");
    }
    /**
     * {@snippet :
     * HRESULT CoResumeClassObjects();
     * }
     */
    public static int CoResumeClassObjects() {
        var mh$ = CoResumeClassObjects$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSuspendClassObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$0,"CoSuspendClassObjects");
    }
    /**
     * {@snippet :
     * HRESULT CoSuspendClassObjects();
     * }
     */
    public static int CoSuspendClassObjects() {
        var mh$ = CoSuspendClassObjects$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoAddRefServerProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$1,"CoAddRefServerProcess");
    }
    /**
     * {@snippet :
     * ULONG CoAddRefServerProcess();
     * }
     */
    public static int CoAddRefServerProcess() {
        var mh$ = CoAddRefServerProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoReleaseServerProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$2,"CoReleaseServerProcess");
    }
    /**
     * {@snippet :
     * ULONG CoReleaseServerProcess();
     * }
     */
    public static int CoReleaseServerProcess() {
        var mh$ = CoReleaseServerProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetPSClsid$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$3,"CoGetPSClsid");
    }
    /**
     * {@snippet :
     * HRESULT CoGetPSClsid(const IID* riid, CLSID* pClsid);
     * }
     */
    public static int CoGetPSClsid(MemorySegment riid, MemorySegment pClsid) {
        var mh$ = CoGetPSClsid$MH();
        try {
            return (int)mh$.invokeExact(riid, pClsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterPSClsid$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$4,"CoRegisterPSClsid");
    }
    /**
     * {@snippet :
     * HRESULT CoRegisterPSClsid(const IID* riid, const IID* rclsid);
     * }
     */
    public static int CoRegisterPSClsid(MemorySegment riid, MemorySegment rclsid) {
        var mh$ = CoRegisterPSClsid$MH();
        try {
            return (int)mh$.invokeExact(riid, rclsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterSurrogate$MH() {
        return RuntimeHelper.requireNonNull(constants$3202.const$5,"CoRegisterSurrogate");
    }
    /**
     * {@snippet :
     * HRESULT CoRegisterSurrogate(LPSURROGATE pSurrogate);
     * }
     */
    public static int CoRegisterSurrogate(MemorySegment pSurrogate) {
        var mh$ = CoRegisterSurrogate$MH();
        try {
            return (int)mh$.invokeExact(pSurrogate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetMarshalSizeMax$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$0,"CoGetMarshalSizeMax");
    }
    /**
     * {@snippet :
     * HRESULT CoGetMarshalSizeMax(ULONG* pulSize, const IID* riid, LPUNKNOWN pUnk, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags);
     * }
     */
    public static int CoGetMarshalSizeMax(MemorySegment pulSize, MemorySegment riid, MemorySegment pUnk, int dwDestContext, MemorySegment pvDestContext, int mshlflags) {
        var mh$ = CoGetMarshalSizeMax$MH();
        try {
            return (int)mh$.invokeExact(pulSize, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$1,"CoMarshalInterface");
    }
    /**
     * {@snippet :
     * HRESULT CoMarshalInterface(LPSTREAM pStm, const IID* riid, LPUNKNOWN pUnk, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags);
     * }
     */
    public static int CoMarshalInterface(MemorySegment pStm, MemorySegment riid, MemorySegment pUnk, int dwDestContext, MemorySegment pvDestContext, int mshlflags) {
        var mh$ = CoMarshalInterface$MH();
        try {
            return (int)mh$.invokeExact(pStm, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUnmarshalInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$2,"CoUnmarshalInterface");
    }
    /**
     * {@snippet :
     * HRESULT CoUnmarshalInterface(LPSTREAM pStm, const IID* riid, LPVOID* ppv);
     * }
     */
    public static int CoUnmarshalInterface(MemorySegment pStm, MemorySegment riid, MemorySegment ppv) {
        var mh$ = CoUnmarshalInterface$MH();
        try {
            return (int)mh$.invokeExact(pStm, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalHresult$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$3,"CoMarshalHresult");
    }
    /**
     * {@snippet :
     * HRESULT CoMarshalHresult(LPSTREAM pstm, HRESULT hresult);
     * }
     */
    public static int CoMarshalHresult(MemorySegment pstm, int hresult) {
        var mh$ = CoMarshalHresult$MH();
        try {
            return (int)mh$.invokeExact(pstm, hresult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUnmarshalHresult$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$4,"CoUnmarshalHresult");
    }
    /**
     * {@snippet :
     * HRESULT CoUnmarshalHresult(LPSTREAM pstm, HRESULT* phresult);
     * }
     */
    public static int CoUnmarshalHresult(MemorySegment pstm, MemorySegment phresult) {
        var mh$ = CoUnmarshalHresult$MH();
        try {
            return (int)mh$.invokeExact(pstm, phresult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoReleaseMarshalData$MH() {
        return RuntimeHelper.requireNonNull(constants$3203.const$5,"CoReleaseMarshalData");
    }
    /**
     * {@snippet :
     * HRESULT CoReleaseMarshalData(LPSTREAM pStm);
     * }
     */
    public static int CoReleaseMarshalData(MemorySegment pStm) {
        var mh$ = CoReleaseMarshalData$MH();
        try {
            return (int)mh$.invokeExact(pStm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDisconnectObject$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$0,"CoDisconnectObject");
    }
    /**
     * {@snippet :
     * HRESULT CoDisconnectObject(LPUNKNOWN pUnk, DWORD dwReserved);
     * }
     */
    public static int CoDisconnectObject(MemorySegment pUnk, int dwReserved) {
        var mh$ = CoDisconnectObject$MH();
        try {
            return (int)mh$.invokeExact(pUnk, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoLockObjectExternal$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$1,"CoLockObjectExternal");
    }
    /**
     * {@snippet :
     * HRESULT CoLockObjectExternal(LPUNKNOWN pUnk, BOOL fLock, BOOL fLastUnlockReleases);
     * }
     */
    public static int CoLockObjectExternal(MemorySegment pUnk, int fLock, int fLastUnlockReleases) {
        var mh$ = CoLockObjectExternal$MH();
        try {
            return (int)mh$.invokeExact(pUnk, fLock, fLastUnlockReleases);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetStandardMarshal$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$2,"CoGetStandardMarshal");
    }
    /**
     * {@snippet :
     * HRESULT CoGetStandardMarshal(const IID* riid, LPUNKNOWN pUnk, DWORD dwDestContext, LPVOID pvDestContext, DWORD mshlflags, LPMARSHAL* ppMarshal);
     * }
     */
    public static int CoGetStandardMarshal(MemorySegment riid, MemorySegment pUnk, int dwDestContext, MemorySegment pvDestContext, int mshlflags, MemorySegment ppMarshal) {
        var mh$ = CoGetStandardMarshal$MH();
        try {
            return (int)mh$.invokeExact(riid, pUnk, dwDestContext, pvDestContext, mshlflags, ppMarshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetStdMarshalEx$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$3,"CoGetStdMarshalEx");
    }
    /**
     * {@snippet :
     * HRESULT CoGetStdMarshalEx(LPUNKNOWN pUnkOuter, DWORD smexflags, LPUNKNOWN* ppUnkInner);
     * }
     */
    public static int CoGetStdMarshalEx(MemorySegment pUnkOuter, int smexflags, MemorySegment ppUnkInner) {
        var mh$ = CoGetStdMarshalEx$MH();
        try {
            return (int)mh$.invokeExact(pUnkOuter, smexflags, ppUnkInner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum tagSTDMSHLFLAGS.SMEXF_SERVER = 1;
     * }
     */
    public static int SMEXF_SERVER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTDMSHLFLAGS.SMEXF_HANDLER = 2;
     * }
     */
    public static int SMEXF_HANDLER() {
        return (int)2L;
    }
    public static MethodHandle CoIsHandlerConnected$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$4,"CoIsHandlerConnected");
    }
    /**
     * {@snippet :
     * BOOL CoIsHandlerConnected(LPUNKNOWN pUnk);
     * }
     */
    public static int CoIsHandlerConnected(MemorySegment pUnk) {
        var mh$ = CoIsHandlerConnected$MH();
        try {
            return (int)mh$.invokeExact(pUnk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalInterThreadInterfaceInStream$MH() {
        return RuntimeHelper.requireNonNull(constants$3204.const$5,"CoMarshalInterThreadInterfaceInStream");
    }
    /**
     * {@snippet :
     * HRESULT CoMarshalInterThreadInterfaceInStream(const IID* riid, LPUNKNOWN pUnk, LPSTREAM* ppStm);
     * }
     */
    public static int CoMarshalInterThreadInterfaceInStream(MemorySegment riid, MemorySegment pUnk, MemorySegment ppStm) {
        var mh$ = CoMarshalInterThreadInterfaceInStream$MH();
        try {
            return (int)mh$.invokeExact(riid, pUnk, ppStm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetInterfaceAndReleaseStream$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$0,"CoGetInterfaceAndReleaseStream");
    }
    /**
     * {@snippet :
     * HRESULT CoGetInterfaceAndReleaseStream(LPSTREAM pStm, const IID* iid, LPVOID* ppv);
     * }
     */
    public static int CoGetInterfaceAndReleaseStream(MemorySegment pStm, MemorySegment iid, MemorySegment ppv) {
        var mh$ = CoGetInterfaceAndReleaseStream$MH();
        try {
            return (int)mh$.invokeExact(pStm, iid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateFreeThreadedMarshaler$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$1,"CoCreateFreeThreadedMarshaler");
    }
    /**
     * {@snippet :
     * HRESULT CoCreateFreeThreadedMarshaler(LPUNKNOWN punkOuter, LPUNKNOWN* ppunkMarshal);
     * }
     */
    public static int CoCreateFreeThreadedMarshaler(MemorySegment punkOuter, MemorySegment ppunkMarshal) {
        var mh$ = CoCreateFreeThreadedMarshaler$MH();
        try {
            return (int)mh$.invokeExact(punkOuter, ppunkMarshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoFreeUnusedLibraries$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$2,"CoFreeUnusedLibraries");
    }
    /**
     * {@snippet :
     * void CoFreeUnusedLibraries();
     * }
     */
    public static void CoFreeUnusedLibraries() {
        var mh$ = CoFreeUnusedLibraries$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoFreeUnusedLibrariesEx$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$3,"CoFreeUnusedLibrariesEx");
    }
    /**
     * {@snippet :
     * void CoFreeUnusedLibrariesEx(DWORD dwUnloadDelay, DWORD dwReserved);
     * }
     */
    public static void CoFreeUnusedLibrariesEx(int dwUnloadDelay, int dwReserved) {
        var mh$ = CoFreeUnusedLibrariesEx$MH();
        try {
            mh$.invokeExact(dwUnloadDelay, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDisconnectContext$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$4,"CoDisconnectContext");
    }
    /**
     * {@snippet :
     * HRESULT CoDisconnectContext(DWORD dwTimeout);
     * }
     */
    public static int CoDisconnectContext(int dwTimeout) {
        var mh$ = CoDisconnectContext$MH();
        try {
            return (int)mh$.invokeExact(dwTimeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInitializeSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$3205.const$6,"CoInitializeSecurity");
    }
    /**
     * {@snippet :
     * HRESULT CoInitializeSecurity(PSECURITY_DESCRIPTOR pSecDesc, LONG cAuthSvc, SOLE_AUTHENTICATION_SERVICE* asAuthSvc, void* pReserved1, DWORD dwAuthnLevel, DWORD dwImpLevel, void* pAuthList, DWORD dwCapabilities, void* pReserved3);
     * }
     */
    public static int CoInitializeSecurity(MemorySegment pSecDesc, int cAuthSvc, MemorySegment asAuthSvc, MemorySegment pReserved1, int dwAuthnLevel, int dwImpLevel, MemorySegment pAuthList, int dwCapabilities, MemorySegment pReserved3) {
        var mh$ = CoInitializeSecurity$MH();
        try {
            return (int)mh$.invokeExact(pSecDesc, cAuthSvc, asAuthSvc, pReserved1, dwAuthnLevel, dwImpLevel, pAuthList, dwCapabilities, pReserved3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCallContext$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$0,"CoGetCallContext");
    }
    /**
     * {@snippet :
     * HRESULT CoGetCallContext(const IID* riid, void** ppInterface);
     * }
     */
    public static int CoGetCallContext(MemorySegment riid, MemorySegment ppInterface) {
        var mh$ = CoGetCallContext$MH();
        try {
            return (int)mh$.invokeExact(riid, ppInterface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryProxyBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$1,"CoQueryProxyBlanket");
    }
    /**
     * {@snippet :
     * HRESULT CoQueryProxyBlanket(IUnknown* pProxy, DWORD* pwAuthnSvc, DWORD* pAuthzSvc, LPOLESTR* pServerPrincName, DWORD* pAuthnLevel, DWORD* pImpLevel, RPC_AUTH_IDENTITY_HANDLE* pAuthInfo, DWORD* pCapabilites);
     * }
     */
    public static int CoQueryProxyBlanket(MemorySegment pProxy, MemorySegment pwAuthnSvc, MemorySegment pAuthzSvc, MemorySegment pServerPrincName, MemorySegment pAuthnLevel, MemorySegment pImpLevel, MemorySegment pAuthInfo, MemorySegment pCapabilites) {
        var mh$ = CoQueryProxyBlanket$MH();
        try {
            return (int)mh$.invokeExact(pProxy, pwAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pAuthInfo, pCapabilites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSetProxyBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$2,"CoSetProxyBlanket");
    }
    /**
     * {@snippet :
     * HRESULT CoSetProxyBlanket(IUnknown* pProxy, DWORD dwAuthnSvc, DWORD dwAuthzSvc, OLECHAR* pServerPrincName, DWORD dwAuthnLevel, DWORD dwImpLevel, RPC_AUTH_IDENTITY_HANDLE pAuthInfo, DWORD dwCapabilities);
     * }
     */
    public static int CoSetProxyBlanket(MemorySegment pProxy, int dwAuthnSvc, int dwAuthzSvc, MemorySegment pServerPrincName, int dwAuthnLevel, int dwImpLevel, MemorySegment pAuthInfo, int dwCapabilities) {
        var mh$ = CoSetProxyBlanket$MH();
        try {
            return (int)mh$.invokeExact(pProxy, dwAuthnSvc, dwAuthzSvc, pServerPrincName, dwAuthnLevel, dwImpLevel, pAuthInfo, dwCapabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCopyProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$3,"CoCopyProxy");
    }
    /**
     * {@snippet :
     * HRESULT CoCopyProxy(IUnknown* pProxy, IUnknown** ppCopy);
     * }
     */
    public static int CoCopyProxy(MemorySegment pProxy, MemorySegment ppCopy) {
        var mh$ = CoCopyProxy$MH();
        try {
            return (int)mh$.invokeExact(pProxy, ppCopy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryClientBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$4,"CoQueryClientBlanket");
    }
    /**
     * {@snippet :
     * HRESULT CoQueryClientBlanket(DWORD* pAuthnSvc, DWORD* pAuthzSvc, LPOLESTR* pServerPrincName, DWORD* pAuthnLevel, DWORD* pImpLevel, RPC_AUTHZ_HANDLE* pPrivs, DWORD* pCapabilities);
     * }
     */
    public static int CoQueryClientBlanket(MemorySegment pAuthnSvc, MemorySegment pAuthzSvc, MemorySegment pServerPrincName, MemorySegment pAuthnLevel, MemorySegment pImpLevel, MemorySegment pPrivs, MemorySegment pCapabilities) {
        var mh$ = CoQueryClientBlanket$MH();
        try {
            return (int)mh$.invokeExact(pAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pPrivs, pCapabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$3206.const$5,"CoImpersonateClient");
    }
    /**
     * {@snippet :
     * HRESULT CoImpersonateClient();
     * }
     */
    public static int CoImpersonateClient() {
        var mh$ = CoImpersonateClient$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRevertToSelf$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$0,"CoRevertToSelf");
    }
    /**
     * {@snippet :
     * HRESULT CoRevertToSelf();
     * }
     */
    public static int CoRevertToSelf() {
        var mh$ = CoRevertToSelf$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryAuthenticationServices$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$1,"CoQueryAuthenticationServices");
    }
    /**
     * {@snippet :
     * HRESULT CoQueryAuthenticationServices(DWORD* pcAuthSvc, SOLE_AUTHENTICATION_SERVICE** asAuthSvc);
     * }
     */
    public static int CoQueryAuthenticationServices(MemorySegment pcAuthSvc, MemorySegment asAuthSvc) {
        var mh$ = CoQueryAuthenticationServices$MH();
        try {
            return (int)mh$.invokeExact(pcAuthSvc, asAuthSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSwitchCallContext$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$2,"CoSwitchCallContext");
    }
    /**
     * {@snippet :
     * HRESULT CoSwitchCallContext(IUnknown* pNewObject, IUnknown** ppOldObject);
     * }
     */
    public static int CoSwitchCallContext(MemorySegment pNewObject, MemorySegment ppOldObject) {
        var mh$ = CoSwitchCallContext$MH();
        try {
            return (int)mh$.invokeExact(pNewObject, ppOldObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstance$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$3,"CoCreateInstance");
    }
    /**
     * {@snippet :
     * HRESULT CoCreateInstance(const IID* rclsid, LPUNKNOWN pUnkOuter, DWORD dwClsContext, const IID* riid, LPVOID* ppv);
     * }
     */
    public static int CoCreateInstance(MemorySegment rclsid, MemorySegment pUnkOuter, int dwClsContext, MemorySegment riid, MemorySegment ppv) {
        var mh$ = CoCreateInstance$MH();
        try {
            return (int)mh$.invokeExact(rclsid, pUnkOuter, dwClsContext, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstanceEx$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$4,"CoCreateInstanceEx");
    }
    /**
     * {@snippet :
     * HRESULT CoCreateInstanceEx(const IID* Clsid, IUnknown* punkOuter, DWORD dwClsCtx, COSERVERINFO* pServerInfo, DWORD dwCount, MULTI_QI* pResults);
     * }
     */
    public static int CoCreateInstanceEx(MemorySegment Clsid, MemorySegment punkOuter, int dwClsCtx, MemorySegment pServerInfo, int dwCount, MemorySegment pResults) {
        var mh$ = CoCreateInstanceEx$MH();
        try {
            return (int)mh$.invokeExact(Clsid, punkOuter, dwClsCtx, pServerInfo, dwCount, pResults);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstanceFromApp$MH() {
        return RuntimeHelper.requireNonNull(constants$3207.const$5,"CoCreateInstanceFromApp");
    }
    /**
     * {@snippet :
     * HRESULT CoCreateInstanceFromApp(const IID* Clsid, IUnknown* punkOuter, DWORD dwClsCtx, PVOID reserved, DWORD dwCount, MULTI_QI* pResults);
     * }
     */
    public static int CoCreateInstanceFromApp(MemorySegment Clsid, MemorySegment punkOuter, int dwClsCtx, MemorySegment reserved, int dwCount, MemorySegment pResults) {
        var mh$ = CoCreateInstanceFromApp$MH();
        try {
            return (int)mh$.invokeExact(Clsid, punkOuter, dwClsCtx, reserved, dwCount, pResults);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


