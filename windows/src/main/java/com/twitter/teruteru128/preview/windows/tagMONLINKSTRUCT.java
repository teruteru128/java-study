// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMONLINKSTRUCT {
 *     UINT cb;
 *     DWORD dwTime;
 *     HANDLE hTask;
 *     BOOL fEstablished;
 *     BOOL fNoData;
 *     HSZ hszSvc;
 *     HSZ hszTopic;
 *     HSZ hszItem;
 *     UINT wFmt;
 *     BOOL fServer;
 *     HCONV hConvServer;
 *     HCONV hConvClient;
 * };
 * }
 */
public class tagMONLINKSTRUCT {

    public static MemoryLayout $LAYOUT() {
        return constants$1543.const$5;
    }
    public static VarHandle cb$VH() {
        return constants$1544.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static int cb$get(MemorySegment seg) {
        return (int)constants$1544.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static void cb$set(MemorySegment seg, int x) {
        constants$1544.const$0.set(seg, x);
    }
    public static int cb$get(MemorySegment seg, long index) {
        return (int)constants$1544.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cb$set(MemorySegment seg, long index, int x) {
        constants$1544.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTime$VH() {
        return constants$1544.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static int dwTime$get(MemorySegment seg) {
        return (int)constants$1544.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static void dwTime$set(MemorySegment seg, int x) {
        constants$1544.const$1.set(seg, x);
    }
    public static int dwTime$get(MemorySegment seg, long index) {
        return (int)constants$1544.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTime$set(MemorySegment seg, long index, int x) {
        constants$1544.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hTask$VH() {
        return constants$1544.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static MemorySegment hTask$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1544.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static void hTask$set(MemorySegment seg, MemorySegment x) {
        constants$1544.const$2.set(seg, x);
    }
    public static MemorySegment hTask$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1544.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void hTask$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1544.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fEstablished$VH() {
        return constants$1544.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOL fEstablished;
     * }
     */
    public static int fEstablished$get(MemorySegment seg) {
        return (int)constants$1544.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOL fEstablished;
     * }
     */
    public static void fEstablished$set(MemorySegment seg, int x) {
        constants$1544.const$3.set(seg, x);
    }
    public static int fEstablished$get(MemorySegment seg, long index) {
        return (int)constants$1544.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void fEstablished$set(MemorySegment seg, long index, int x) {
        constants$1544.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fNoData$VH() {
        return constants$1544.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOL fNoData;
     * }
     */
    public static int fNoData$get(MemorySegment seg) {
        return (int)constants$1544.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOL fNoData;
     * }
     */
    public static void fNoData$set(MemorySegment seg, int x) {
        constants$1544.const$4.set(seg, x);
    }
    public static int fNoData$get(MemorySegment seg, long index) {
        return (int)constants$1544.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void fNoData$set(MemorySegment seg, long index, int x) {
        constants$1544.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hszSvc$VH() {
        return constants$1544.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HSZ hszSvc;
     * }
     */
    public static MemorySegment hszSvc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1544.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HSZ hszSvc;
     * }
     */
    public static void hszSvc$set(MemorySegment seg, MemorySegment x) {
        constants$1544.const$5.set(seg, x);
    }
    public static MemorySegment hszSvc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1544.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hszSvc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1544.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hszTopic$VH() {
        return constants$1545.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HSZ hszTopic;
     * }
     */
    public static MemorySegment hszTopic$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HSZ hszTopic;
     * }
     */
    public static void hszTopic$set(MemorySegment seg, MemorySegment x) {
        constants$1545.const$0.set(seg, x);
    }
    public static MemorySegment hszTopic$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hszTopic$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1545.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hszItem$VH() {
        return constants$1545.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HSZ hszItem;
     * }
     */
    public static MemorySegment hszItem$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HSZ hszItem;
     * }
     */
    public static void hszItem$set(MemorySegment seg, MemorySegment x) {
        constants$1545.const$1.set(seg, x);
    }
    public static MemorySegment hszItem$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hszItem$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1545.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wFmt$VH() {
        return constants$1545.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT wFmt;
     * }
     */
    public static int wFmt$get(MemorySegment seg) {
        return (int)constants$1545.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT wFmt;
     * }
     */
    public static void wFmt$set(MemorySegment seg, int x) {
        constants$1545.const$2.set(seg, x);
    }
    public static int wFmt$get(MemorySegment seg, long index) {
        return (int)constants$1545.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wFmt$set(MemorySegment seg, long index, int x) {
        constants$1545.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fServer$VH() {
        return constants$1545.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOL fServer;
     * }
     */
    public static int fServer$get(MemorySegment seg) {
        return (int)constants$1545.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOL fServer;
     * }
     */
    public static void fServer$set(MemorySegment seg, int x) {
        constants$1545.const$3.set(seg, x);
    }
    public static int fServer$get(MemorySegment seg, long index) {
        return (int)constants$1545.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void fServer$set(MemorySegment seg, long index, int x) {
        constants$1545.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hConvServer$VH() {
        return constants$1545.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCONV hConvServer;
     * }
     */
    public static MemorySegment hConvServer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCONV hConvServer;
     * }
     */
    public static void hConvServer$set(MemorySegment seg, MemorySegment x) {
        constants$1545.const$4.set(seg, x);
    }
    public static MemorySegment hConvServer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void hConvServer$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1545.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hConvClient$VH() {
        return constants$1545.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCONV hConvClient;
     * }
     */
    public static MemorySegment hConvClient$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCONV hConvClient;
     * }
     */
    public static void hConvClient$set(MemorySegment seg, MemorySegment x) {
        constants$1545.const$5.set(seg, x);
    }
    public static MemorySegment hConvClient$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1545.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hConvClient$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1545.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


