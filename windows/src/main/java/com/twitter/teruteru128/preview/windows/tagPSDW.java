// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagPSDW {
 *     DWORD lStructSize;
 *     HWND hwndOwner;
 *     HGLOBAL hDevMode;
 *     HGLOBAL hDevNames;
 *     DWORD Flags;
 *     POINT ptPaperSize;
 *     RECT rtMinMargin;
 *     RECT rtMargin;
 *     HINSTANCE hInstance;
 *     LPARAM lCustData;
 *     LPPAGESETUPHOOK lpfnPageSetupHook;
 *     LPPAGEPAINTHOOK lpfnPagePaintHook;
 *     LPCWSTR lpPageSetupTemplateName;
 *     HGLOBAL hPageSetupTemplate;
 * };
 * }
 */
public class tagPSDW {

    public static MemoryLayout $LAYOUT() {
        return constants$4472.const$1;
    }
    public static VarHandle lStructSize$VH() {
        return constants$4472.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lStructSize;
     * }
     */
    public static int lStructSize$get(MemorySegment seg) {
        return (int)constants$4472.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lStructSize;
     * }
     */
    public static void lStructSize$set(MemorySegment seg, int x) {
        constants$4472.const$2.set(seg, x);
    }
    public static int lStructSize$get(MemorySegment seg, long index) {
        return (int)constants$4472.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lStructSize$set(MemorySegment seg, long index, int x) {
        constants$4472.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hwndOwner$VH() {
        return constants$4472.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static MemorySegment hwndOwner$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static void hwndOwner$set(MemorySegment seg, MemorySegment x) {
        constants$4472.const$3.set(seg, x);
    }
    public static MemorySegment hwndOwner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndOwner$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4472.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hDevMode$VH() {
        return constants$4472.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HGLOBAL hDevMode;
     * }
     */
    public static MemorySegment hDevMode$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HGLOBAL hDevMode;
     * }
     */
    public static void hDevMode$set(MemorySegment seg, MemorySegment x) {
        constants$4472.const$4.set(seg, x);
    }
    public static MemorySegment hDevMode$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void hDevMode$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4472.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hDevNames$VH() {
        return constants$4472.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HGLOBAL hDevNames;
     * }
     */
    public static MemorySegment hDevNames$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HGLOBAL hDevNames;
     * }
     */
    public static void hDevNames$set(MemorySegment seg, MemorySegment x) {
        constants$4472.const$5.set(seg, x);
    }
    public static MemorySegment hDevNames$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4472.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hDevNames$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4472.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$4473.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$4473.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$4473.const$0.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$4473.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$4473.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ptPaperSize$slice(MemorySegment seg) {
        return seg.asSlice(36, 8);
    }
    public static MemorySegment rtMinMargin$slice(MemorySegment seg) {
        return seg.asSlice(44, 16);
    }
    public static MemorySegment rtMargin$slice(MemorySegment seg) {
        return seg.asSlice(60, 16);
    }
    public static VarHandle hInstance$VH() {
        return constants$4473.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static MemorySegment hInstance$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static void hInstance$set(MemorySegment seg, MemorySegment x) {
        constants$4473.const$1.set(seg, x);
    }
    public static MemorySegment hInstance$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hInstance$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4473.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lCustData$VH() {
        return constants$4473.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPARAM lCustData;
     * }
     */
    public static long lCustData$get(MemorySegment seg) {
        return (long)constants$4473.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPARAM lCustData;
     * }
     */
    public static void lCustData$set(MemorySegment seg, long x) {
        constants$4473.const$2.set(seg, x);
    }
    public static long lCustData$get(MemorySegment seg, long index) {
        return (long)constants$4473.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lCustData$set(MemorySegment seg, long index, long x) {
        constants$4473.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpfnPageSetupHook$VH() {
        return constants$4473.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPPAGESETUPHOOK lpfnPageSetupHook;
     * }
     */
    public static MemorySegment lpfnPageSetupHook$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPPAGESETUPHOOK lpfnPageSetupHook;
     * }
     */
    public static void lpfnPageSetupHook$set(MemorySegment seg, MemorySegment x) {
        constants$4473.const$3.set(seg, x);
    }
    public static MemorySegment lpfnPageSetupHook$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnPageSetupHook$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4473.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static LPPAGESETUPHOOK lpfnPageSetupHook(MemorySegment segment, Arena scope) {
        return LPPAGESETUPHOOK.ofAddress(lpfnPageSetupHook$get(segment), scope);
    }
    public static VarHandle lpfnPagePaintHook$VH() {
        return constants$4473.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPPAGEPAINTHOOK lpfnPagePaintHook;
     * }
     */
    public static MemorySegment lpfnPagePaintHook$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPPAGEPAINTHOOK lpfnPagePaintHook;
     * }
     */
    public static void lpfnPagePaintHook$set(MemorySegment seg, MemorySegment x) {
        constants$4473.const$4.set(seg, x);
    }
    public static MemorySegment lpfnPagePaintHook$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnPagePaintHook$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4473.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static LPPAGEPAINTHOOK lpfnPagePaintHook(MemorySegment segment, Arena scope) {
        return LPPAGEPAINTHOOK.ofAddress(lpfnPagePaintHook$get(segment), scope);
    }
    public static VarHandle lpPageSetupTemplateName$VH() {
        return constants$4473.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpPageSetupTemplateName;
     * }
     */
    public static MemorySegment lpPageSetupTemplateName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpPageSetupTemplateName;
     * }
     */
    public static void lpPageSetupTemplateName$set(MemorySegment seg, MemorySegment x) {
        constants$4473.const$5.set(seg, x);
    }
    public static MemorySegment lpPageSetupTemplateName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4473.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lpPageSetupTemplateName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4473.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hPageSetupTemplate$VH() {
        return constants$4474.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HGLOBAL hPageSetupTemplate;
     * }
     */
    public static MemorySegment hPageSetupTemplate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4474.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HGLOBAL hPageSetupTemplate;
     * }
     */
    public static void hPageSetupTemplate$set(MemorySegment seg, MemorySegment x) {
        constants$4474.const$0.set(seg, x);
    }
    public static MemorySegment hPageSetupTemplate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4474.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hPageSetupTemplate$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4474.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


