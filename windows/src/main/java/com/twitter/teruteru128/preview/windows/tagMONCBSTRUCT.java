// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMONCBSTRUCT {
 *     UINT cb;
 *     DWORD dwTime;
 *     HANDLE hTask;
 *     DWORD dwRet;
 *     UINT wType;
 *     UINT wFmt;
 *     HCONV hConv;
 *     HSZ hsz1;
 *     HSZ hsz2;
 *     HDDEDATA hData;
 *     ULONG_PTR dwData1;
 *     ULONG_PTR dwData2;
 *     CONVCONTEXT cc;
 *     DWORD cbData;
 *     DWORD Data[8];
 * };
 * }
 */
public class tagMONCBSTRUCT {

    public static MemoryLayout $LAYOUT() {
        return constants$1538.const$4;
    }
    public static VarHandle cb$VH() {
        return constants$1538.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static int cb$get(MemorySegment seg) {
        return (int)constants$1538.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static void cb$set(MemorySegment seg, int x) {
        constants$1538.const$5.set(seg, x);
    }
    public static int cb$get(MemorySegment seg, long index) {
        return (int)constants$1538.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cb$set(MemorySegment seg, long index, int x) {
        constants$1538.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTime$VH() {
        return constants$1539.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static int dwTime$get(MemorySegment seg) {
        return (int)constants$1539.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static void dwTime$set(MemorySegment seg, int x) {
        constants$1539.const$0.set(seg, x);
    }
    public static int dwTime$get(MemorySegment seg, long index) {
        return (int)constants$1539.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTime$set(MemorySegment seg, long index, int x) {
        constants$1539.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hTask$VH() {
        return constants$1539.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static MemorySegment hTask$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1539.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static void hTask$set(MemorySegment seg, MemorySegment x) {
        constants$1539.const$1.set(seg, x);
    }
    public static MemorySegment hTask$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1539.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hTask$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1539.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwRet$VH() {
        return constants$1539.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwRet;
     * }
     */
    public static int dwRet$get(MemorySegment seg) {
        return (int)constants$1539.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwRet;
     * }
     */
    public static void dwRet$set(MemorySegment seg, int x) {
        constants$1539.const$2.set(seg, x);
    }
    public static int dwRet$get(MemorySegment seg, long index) {
        return (int)constants$1539.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwRet$set(MemorySegment seg, long index, int x) {
        constants$1539.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wType$VH() {
        return constants$1539.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT wType;
     * }
     */
    public static int wType$get(MemorySegment seg) {
        return (int)constants$1539.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT wType;
     * }
     */
    public static void wType$set(MemorySegment seg, int x) {
        constants$1539.const$3.set(seg, x);
    }
    public static int wType$get(MemorySegment seg, long index) {
        return (int)constants$1539.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wType$set(MemorySegment seg, long index, int x) {
        constants$1539.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wFmt$VH() {
        return constants$1539.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT wFmt;
     * }
     */
    public static int wFmt$get(MemorySegment seg) {
        return (int)constants$1539.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT wFmt;
     * }
     */
    public static void wFmt$set(MemorySegment seg, int x) {
        constants$1539.const$4.set(seg, x);
    }
    public static int wFmt$get(MemorySegment seg, long index) {
        return (int)constants$1539.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void wFmt$set(MemorySegment seg, long index, int x) {
        constants$1539.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hConv$VH() {
        return constants$1539.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCONV hConv;
     * }
     */
    public static MemorySegment hConv$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1539.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCONV hConv;
     * }
     */
    public static void hConv$set(MemorySegment seg, MemorySegment x) {
        constants$1539.const$5.set(seg, x);
    }
    public static MemorySegment hConv$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1539.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void hConv$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1539.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hsz1$VH() {
        return constants$1540.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HSZ hsz1;
     * }
     */
    public static MemorySegment hsz1$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HSZ hsz1;
     * }
     */
    public static void hsz1$set(MemorySegment seg, MemorySegment x) {
        constants$1540.const$0.set(seg, x);
    }
    public static MemorySegment hsz1$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hsz1$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1540.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hsz2$VH() {
        return constants$1540.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HSZ hsz2;
     * }
     */
    public static MemorySegment hsz2$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HSZ hsz2;
     * }
     */
    public static void hsz2$set(MemorySegment seg, MemorySegment x) {
        constants$1540.const$1.set(seg, x);
    }
    public static MemorySegment hsz2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hsz2$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1540.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hData$VH() {
        return constants$1540.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HDDEDATA hData;
     * }
     */
    public static MemorySegment hData$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HDDEDATA hData;
     * }
     */
    public static void hData$set(MemorySegment seg, MemorySegment x) {
        constants$1540.const$2.set(seg, x);
    }
    public static MemorySegment hData$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1540.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void hData$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1540.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwData1$VH() {
        return constants$1540.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR dwData1;
     * }
     */
    public static long dwData1$get(MemorySegment seg) {
        return (long)constants$1540.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR dwData1;
     * }
     */
    public static void dwData1$set(MemorySegment seg, long x) {
        constants$1540.const$3.set(seg, x);
    }
    public static long dwData1$get(MemorySegment seg, long index) {
        return (long)constants$1540.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwData1$set(MemorySegment seg, long index, long x) {
        constants$1540.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwData2$VH() {
        return constants$1540.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR dwData2;
     * }
     */
    public static long dwData2$get(MemorySegment seg) {
        return (long)constants$1540.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR dwData2;
     * }
     */
    public static void dwData2$set(MemorySegment seg, long x) {
        constants$1540.const$4.set(seg, x);
    }
    public static long dwData2$get(MemorySegment seg, long index) {
        return (long)constants$1540.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwData2$set(MemorySegment seg, long index, long x) {
        constants$1540.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment cc$slice(MemorySegment seg) {
        return seg.asSlice(80, 36);
    }
    public static VarHandle cbData$VH() {
        return constants$1540.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbData;
     * }
     */
    public static int cbData$get(MemorySegment seg) {
        return (int)constants$1540.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbData;
     * }
     */
    public static void cbData$set(MemorySegment seg, int x) {
        constants$1540.const$5.set(seg, x);
    }
    public static int cbData$get(MemorySegment seg, long index) {
        return (int)constants$1540.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbData$set(MemorySegment seg, long index, int x) {
        constants$1540.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Data$slice(MemorySegment seg) {
        return seg.asSlice(120, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


