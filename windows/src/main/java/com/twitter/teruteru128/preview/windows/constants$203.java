// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$203 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$203() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("PerProcessUserTimeLimit"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("PerJobUserTimeLimit"),
        JAVA_INT.withName("LimitFlags"),
        MemoryLayout.paddingLayout(4),
        JAVA_LONG.withName("MinimumWorkingSetSize"),
        JAVA_LONG.withName("MaximumWorkingSetSize"),
        JAVA_INT.withName("ActiveProcessLimit"),
        MemoryLayout.paddingLayout(4),
        JAVA_LONG.withName("Affinity"),
        JAVA_INT.withName("PriorityClass"),
        JAVA_INT.withName("SchedulingClass")
    ).withName("_JOBOBJECT_BASIC_LIMIT_INFORMATION");
    static final VarHandle const$1 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("LimitFlags"));
    static final VarHandle const$2 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("MinimumWorkingSetSize"));
    static final VarHandle const$3 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("MaximumWorkingSetSize"));
    static final VarHandle const$4 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("ActiveProcessLimit"));
    static final VarHandle const$5 = constants$203.const$0.varHandle(MemoryLayout.PathElement.groupElement("Affinity"));
}


