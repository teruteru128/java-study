// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$3749 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$3749() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("QueryInterface"),
        RuntimeHelper.POINTER.withName("AddRef"),
        RuntimeHelper.POINTER.withName("Release"),
        RuntimeHelper.POINTER.withName("GetTypeInfoCount"),
        RuntimeHelper.POINTER.withName("GetTypeInfo"),
        RuntimeHelper.POINTER.withName("GetIDsOfNames"),
        RuntimeHelper.POINTER.withName("Invoke"),
        RuntimeHelper.POINTER.withName("get_nodeName"),
        RuntimeHelper.POINTER.withName("get_nodeValue"),
        RuntimeHelper.POINTER.withName("put_nodeValue"),
        RuntimeHelper.POINTER.withName("get_nodeType"),
        RuntimeHelper.POINTER.withName("get_parentNode"),
        RuntimeHelper.POINTER.withName("get_childNodes"),
        RuntimeHelper.POINTER.withName("get_firstChild"),
        RuntimeHelper.POINTER.withName("get_lastChild"),
        RuntimeHelper.POINTER.withName("get_previousSibling"),
        RuntimeHelper.POINTER.withName("get_nextSibling"),
        RuntimeHelper.POINTER.withName("get_attributes"),
        RuntimeHelper.POINTER.withName("insertBefore"),
        RuntimeHelper.POINTER.withName("replaceChild"),
        RuntimeHelper.POINTER.withName("removeChild"),
        RuntimeHelper.POINTER.withName("appendChild"),
        RuntimeHelper.POINTER.withName("hasChildNodes"),
        RuntimeHelper.POINTER.withName("get_ownerDocument"),
        RuntimeHelper.POINTER.withName("cloneNode"),
        RuntimeHelper.POINTER.withName("get_nodeTypeString"),
        RuntimeHelper.POINTER.withName("get_text"),
        RuntimeHelper.POINTER.withName("put_text"),
        RuntimeHelper.POINTER.withName("get_specified"),
        RuntimeHelper.POINTER.withName("get_definition"),
        RuntimeHelper.POINTER.withName("get_nodeTypedValue"),
        RuntimeHelper.POINTER.withName("put_nodeTypedValue"),
        RuntimeHelper.POINTER.withName("get_dataType"),
        RuntimeHelper.POINTER.withName("put_dataType"),
        RuntimeHelper.POINTER.withName("get_xml"),
        RuntimeHelper.POINTER.withName("transformNode"),
        RuntimeHelper.POINTER.withName("selectNodes"),
        RuntimeHelper.POINTER.withName("selectSingleNode"),
        RuntimeHelper.POINTER.withName("get_parsed"),
        RuntimeHelper.POINTER.withName("get_namespaceURI"),
        RuntimeHelper.POINTER.withName("get_prefix"),
        RuntimeHelper.POINTER.withName("get_baseName"),
        RuntimeHelper.POINTER.withName("transformNodeToObject")
    ).withName("IXMLDOMNodeVtbl");
    static final MethodHandle const$1 = RuntimeHelper.upcallHandle(IXMLDOMNodeVtbl.QueryInterface.class, "apply", constants$37.const$3);
    static final VarHandle const$2 = constants$3749.const$0.varHandle(MemoryLayout.PathElement.groupElement("QueryInterface"));
    static final MethodHandle const$3 = RuntimeHelper.upcallHandle(IXMLDOMNodeVtbl.AddRef.class, "apply", constants$18.const$5);
    static final VarHandle const$4 = constants$3749.const$0.varHandle(MemoryLayout.PathElement.groupElement("AddRef"));
    static final MethodHandle const$5 = RuntimeHelper.upcallHandle(IXMLDOMNodeVtbl.Release.class, "apply", constants$18.const$5);
}


