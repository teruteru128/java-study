// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CMSG_STREAM_INFO {
 *     DWORD cbContent;
 *     PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
 *     void* pvArg;
 * };
 * }
 */
public class _CMSG_STREAM_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2092.const$4;
    }
    public static VarHandle cbContent$VH() {
        return constants$2092.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbContent;
     * }
     */
    public static int cbContent$get(MemorySegment seg) {
        return (int)constants$2092.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbContent;
     * }
     */
    public static void cbContent$set(MemorySegment seg, int x) {
        constants$2092.const$5.set(seg, x);
    }
    public static int cbContent$get(MemorySegment seg, long index) {
        return (int)constants$2092.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbContent$set(MemorySegment seg, long index, int x) {
        constants$2092.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pfnStreamOutput$VH() {
        return constants$2093.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
     * }
     */
    public static MemorySegment pfnStreamOutput$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2093.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
     * }
     */
    public static void pfnStreamOutput$set(MemorySegment seg, MemorySegment x) {
        constants$2093.const$0.set(seg, x);
    }
    public static MemorySegment pfnStreamOutput$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2093.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pfnStreamOutput$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2093.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static PFN_CMSG_STREAM_OUTPUT pfnStreamOutput(MemorySegment segment, Arena scope) {
        return PFN_CMSG_STREAM_OUTPUT.ofAddress(pfnStreamOutput$get(segment), scope);
    }
    public static VarHandle pvArg$VH() {
        return constants$2093.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvArg;
     * }
     */
    public static MemorySegment pvArg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2093.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvArg;
     * }
     */
    public static void pvArg$set(MemorySegment seg, MemorySegment x) {
        constants$2093.const$1.set(seg, x);
    }
    public static MemorySegment pvArg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2093.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pvArg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2093.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


