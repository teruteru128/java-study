// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _KNONVOLATILE_CONTEXT_POINTERS {
 *     union {
 *         PM128A FloatingContext[16];
 *         struct {
 *             PM128A Xmm0;
 *             PM128A Xmm1;
 *             PM128A Xmm2;
 *             PM128A Xmm3;
 *             PM128A Xmm4;
 *             PM128A Xmm5;
 *             PM128A Xmm6;
 *             PM128A Xmm7;
 *             PM128A Xmm8;
 *             PM128A Xmm9;
 *             PM128A Xmm10;
 *             PM128A Xmm11;
 *             PM128A Xmm12;
 *             PM128A Xmm13;
 *             PM128A Xmm14;
 *             PM128A Xmm15;
 *         };
 *     };
 *     union {
 *         PDWORD64 IntegerContext[16];
 *         struct {
 *             PDWORD64 Rax;
 *             PDWORD64 Rcx;
 *             PDWORD64 Rdx;
 *             PDWORD64 Rbx;
 *             PDWORD64 Rsp;
 *             PDWORD64 Rbp;
 *             PDWORD64 Rsi;
 *             PDWORD64 Rdi;
 *             PDWORD64 R8;
 *             PDWORD64 R9;
 *             PDWORD64 R10;
 *             PDWORD64 R11;
 *             PDWORD64 R12;
 *             PDWORD64 R13;
 *             PDWORD64 R14;
 *             PDWORD64 R15;
 *         };
 *     };
 * };
 * }
 */
public class _KNONVOLATILE_CONTEXT_POINTERS {

    public static MemoryLayout $LAYOUT() {
        return constants$93.const$0;
    }
    public static MemorySegment FloatingContext$slice(MemorySegment seg) {
        return seg.asSlice(0, 128);
    }
    public static VarHandle Xmm0$VH() {
        return constants$93.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm0;
     * }
     */
    public static MemorySegment Xmm0$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$93.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm0;
     * }
     */
    public static void Xmm0$set(MemorySegment seg, MemorySegment x) {
        constants$93.const$1.set(seg, x);
    }
    public static MemorySegment Xmm0$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$93.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm0$set(MemorySegment seg, long index, MemorySegment x) {
        constants$93.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm1$VH() {
        return constants$93.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm1;
     * }
     */
    public static MemorySegment Xmm1$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$93.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm1;
     * }
     */
    public static void Xmm1$set(MemorySegment seg, MemorySegment x) {
        constants$93.const$2.set(seg, x);
    }
    public static MemorySegment Xmm1$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$93.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm1$set(MemorySegment seg, long index, MemorySegment x) {
        constants$93.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm2$VH() {
        return constants$93.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm2;
     * }
     */
    public static MemorySegment Xmm2$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$93.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm2;
     * }
     */
    public static void Xmm2$set(MemorySegment seg, MemorySegment x) {
        constants$93.const$3.set(seg, x);
    }
    public static MemorySegment Xmm2$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$93.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm2$set(MemorySegment seg, long index, MemorySegment x) {
        constants$93.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm3$VH() {
        return constants$93.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm3;
     * }
     */
    public static MemorySegment Xmm3$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$93.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm3;
     * }
     */
    public static void Xmm3$set(MemorySegment seg, MemorySegment x) {
        constants$93.const$4.set(seg, x);
    }
    public static MemorySegment Xmm3$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$93.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm3$set(MemorySegment seg, long index, MemorySegment x) {
        constants$93.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm4$VH() {
        return constants$93.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm4;
     * }
     */
    public static MemorySegment Xmm4$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$93.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm4;
     * }
     */
    public static void Xmm4$set(MemorySegment seg, MemorySegment x) {
        constants$93.const$5.set(seg, x);
    }
    public static MemorySegment Xmm4$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$93.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm4$set(MemorySegment seg, long index, MemorySegment x) {
        constants$93.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm5$VH() {
        return constants$94.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm5;
     * }
     */
    public static MemorySegment Xmm5$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm5;
     * }
     */
    public static void Xmm5$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$0.set(seg, x);
    }
    public static MemorySegment Xmm5$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm5$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm6$VH() {
        return constants$94.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm6;
     * }
     */
    public static MemorySegment Xmm6$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm6;
     * }
     */
    public static void Xmm6$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$1.set(seg, x);
    }
    public static MemorySegment Xmm6$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm6$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm7$VH() {
        return constants$94.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm7;
     * }
     */
    public static MemorySegment Xmm7$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm7;
     * }
     */
    public static void Xmm7$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$2.set(seg, x);
    }
    public static MemorySegment Xmm7$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm7$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm8$VH() {
        return constants$94.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm8;
     * }
     */
    public static MemorySegment Xmm8$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm8;
     * }
     */
    public static void Xmm8$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$3.set(seg, x);
    }
    public static MemorySegment Xmm8$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm8$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm9$VH() {
        return constants$94.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm9;
     * }
     */
    public static MemorySegment Xmm9$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm9;
     * }
     */
    public static void Xmm9$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$4.set(seg, x);
    }
    public static MemorySegment Xmm9$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm9$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm10$VH() {
        return constants$94.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm10;
     * }
     */
    public static MemorySegment Xmm10$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$94.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm10;
     * }
     */
    public static void Xmm10$set(MemorySegment seg, MemorySegment x) {
        constants$94.const$5.set(seg, x);
    }
    public static MemorySegment Xmm10$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$94.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm10$set(MemorySegment seg, long index, MemorySegment x) {
        constants$94.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm11$VH() {
        return constants$95.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm11;
     * }
     */
    public static MemorySegment Xmm11$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm11;
     * }
     */
    public static void Xmm11$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$0.set(seg, x);
    }
    public static MemorySegment Xmm11$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm11$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm12$VH() {
        return constants$95.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm12;
     * }
     */
    public static MemorySegment Xmm12$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm12;
     * }
     */
    public static void Xmm12$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$1.set(seg, x);
    }
    public static MemorySegment Xmm12$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm12$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm13$VH() {
        return constants$95.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm13;
     * }
     */
    public static MemorySegment Xmm13$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm13;
     * }
     */
    public static void Xmm13$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$2.set(seg, x);
    }
    public static MemorySegment Xmm13$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm13$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm14$VH() {
        return constants$95.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm14;
     * }
     */
    public static MemorySegment Xmm14$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm14;
     * }
     */
    public static void Xmm14$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$3.set(seg, x);
    }
    public static MemorySegment Xmm14$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm14$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Xmm15$VH() {
        return constants$95.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PM128A Xmm15;
     * }
     */
    public static MemorySegment Xmm15$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PM128A Xmm15;
     * }
     */
    public static void Xmm15$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$4.set(seg, x);
    }
    public static MemorySegment Xmm15$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Xmm15$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment IntegerContext$slice(MemorySegment seg) {
        return seg.asSlice(128, 128);
    }
    public static VarHandle Rax$VH() {
        return constants$95.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rax;
     * }
     */
    public static MemorySegment Rax$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$95.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rax;
     * }
     */
    public static void Rax$set(MemorySegment seg, MemorySegment x) {
        constants$95.const$5.set(seg, x);
    }
    public static MemorySegment Rax$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$95.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Rax$set(MemorySegment seg, long index, MemorySegment x) {
        constants$95.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rcx$VH() {
        return constants$96.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rcx;
     * }
     */
    public static MemorySegment Rcx$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rcx;
     * }
     */
    public static void Rcx$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$0.set(seg, x);
    }
    public static MemorySegment Rcx$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Rcx$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rdx$VH() {
        return constants$96.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rdx;
     * }
     */
    public static MemorySegment Rdx$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rdx;
     * }
     */
    public static void Rdx$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$1.set(seg, x);
    }
    public static MemorySegment Rdx$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Rdx$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rbx$VH() {
        return constants$96.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rbx;
     * }
     */
    public static MemorySegment Rbx$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rbx;
     * }
     */
    public static void Rbx$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$2.set(seg, x);
    }
    public static MemorySegment Rbx$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Rbx$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rsp$VH() {
        return constants$96.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rsp;
     * }
     */
    public static MemorySegment Rsp$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rsp;
     * }
     */
    public static void Rsp$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$3.set(seg, x);
    }
    public static MemorySegment Rsp$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Rsp$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rbp$VH() {
        return constants$96.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rbp;
     * }
     */
    public static MemorySegment Rbp$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rbp;
     * }
     */
    public static void Rbp$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$4.set(seg, x);
    }
    public static MemorySegment Rbp$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Rbp$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rsi$VH() {
        return constants$96.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rsi;
     * }
     */
    public static MemorySegment Rsi$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$96.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rsi;
     * }
     */
    public static void Rsi$set(MemorySegment seg, MemorySegment x) {
        constants$96.const$5.set(seg, x);
    }
    public static MemorySegment Rsi$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$96.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Rsi$set(MemorySegment seg, long index, MemorySegment x) {
        constants$96.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Rdi$VH() {
        return constants$97.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 Rdi;
     * }
     */
    public static MemorySegment Rdi$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 Rdi;
     * }
     */
    public static void Rdi$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$0.set(seg, x);
    }
    public static MemorySegment Rdi$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Rdi$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R8$VH() {
        return constants$97.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R8;
     * }
     */
    public static MemorySegment R8$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R8;
     * }
     */
    public static void R8$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$1.set(seg, x);
    }
    public static MemorySegment R8$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void R8$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R9$VH() {
        return constants$97.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R9;
     * }
     */
    public static MemorySegment R9$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R9;
     * }
     */
    public static void R9$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$2.set(seg, x);
    }
    public static MemorySegment R9$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void R9$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R10$VH() {
        return constants$97.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R10;
     * }
     */
    public static MemorySegment R10$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R10;
     * }
     */
    public static void R10$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$3.set(seg, x);
    }
    public static MemorySegment R10$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void R10$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R11$VH() {
        return constants$97.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R11;
     * }
     */
    public static MemorySegment R11$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R11;
     * }
     */
    public static void R11$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$4.set(seg, x);
    }
    public static MemorySegment R11$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void R11$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R12$VH() {
        return constants$97.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R12;
     * }
     */
    public static MemorySegment R12$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$97.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R12;
     * }
     */
    public static void R12$set(MemorySegment seg, MemorySegment x) {
        constants$97.const$5.set(seg, x);
    }
    public static MemorySegment R12$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$97.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void R12$set(MemorySegment seg, long index, MemorySegment x) {
        constants$97.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R13$VH() {
        return constants$98.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R13;
     * }
     */
    public static MemorySegment R13$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$98.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R13;
     * }
     */
    public static void R13$set(MemorySegment seg, MemorySegment x) {
        constants$98.const$0.set(seg, x);
    }
    public static MemorySegment R13$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$98.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void R13$set(MemorySegment seg, long index, MemorySegment x) {
        constants$98.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R14$VH() {
        return constants$98.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R14;
     * }
     */
    public static MemorySegment R14$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$98.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R14;
     * }
     */
    public static void R14$set(MemorySegment seg, MemorySegment x) {
        constants$98.const$1.set(seg, x);
    }
    public static MemorySegment R14$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$98.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void R14$set(MemorySegment seg, long index, MemorySegment x) {
        constants$98.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle R15$VH() {
        return constants$98.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PDWORD64 R15;
     * }
     */
    public static MemorySegment R15$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$98.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PDWORD64 R15;
     * }
     */
    public static void R15$set(MemorySegment seg, MemorySegment x) {
        constants$98.const$2.set(seg, x);
    }
    public static MemorySegment R15$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$98.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void R15$set(MemorySegment seg, long index, MemorySegment x) {
        constants$98.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


