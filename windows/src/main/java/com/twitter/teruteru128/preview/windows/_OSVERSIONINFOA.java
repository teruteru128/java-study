// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _OSVERSIONINFOA {
 *     DWORD dwOSVersionInfoSize;
 *     DWORD dwMajorVersion;
 *     DWORD dwMinorVersion;
 *     DWORD dwBuildNumber;
 *     DWORD dwPlatformId;
 *     CHAR szCSDVersion[128];
 * };
 * }
 */
public class _OSVERSIONINFOA {

    public static MemoryLayout $LAYOUT() {
        return constants$476.const$1;
    }
    public static VarHandle dwOSVersionInfoSize$VH() {
        return constants$476.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwOSVersionInfoSize;
     * }
     */
    public static int dwOSVersionInfoSize$get(MemorySegment seg) {
        return (int)constants$476.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwOSVersionInfoSize;
     * }
     */
    public static void dwOSVersionInfoSize$set(MemorySegment seg, int x) {
        constants$476.const$2.set(seg, x);
    }
    public static int dwOSVersionInfoSize$get(MemorySegment seg, long index) {
        return (int)constants$476.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwOSVersionInfoSize$set(MemorySegment seg, long index, int x) {
        constants$476.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMajorVersion$VH() {
        return constants$476.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMajorVersion;
     * }
     */
    public static int dwMajorVersion$get(MemorySegment seg) {
        return (int)constants$476.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMajorVersion;
     * }
     */
    public static void dwMajorVersion$set(MemorySegment seg, int x) {
        constants$476.const$3.set(seg, x);
    }
    public static int dwMajorVersion$get(MemorySegment seg, long index) {
        return (int)constants$476.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMajorVersion$set(MemorySegment seg, long index, int x) {
        constants$476.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMinorVersion$VH() {
        return constants$476.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMinorVersion;
     * }
     */
    public static int dwMinorVersion$get(MemorySegment seg) {
        return (int)constants$476.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMinorVersion;
     * }
     */
    public static void dwMinorVersion$set(MemorySegment seg, int x) {
        constants$476.const$4.set(seg, x);
    }
    public static int dwMinorVersion$get(MemorySegment seg, long index) {
        return (int)constants$476.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMinorVersion$set(MemorySegment seg, long index, int x) {
        constants$476.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwBuildNumber$VH() {
        return constants$476.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwBuildNumber;
     * }
     */
    public static int dwBuildNumber$get(MemorySegment seg) {
        return (int)constants$476.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwBuildNumber;
     * }
     */
    public static void dwBuildNumber$set(MemorySegment seg, int x) {
        constants$476.const$5.set(seg, x);
    }
    public static int dwBuildNumber$get(MemorySegment seg, long index) {
        return (int)constants$476.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwBuildNumber$set(MemorySegment seg, long index, int x) {
        constants$476.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPlatformId$VH() {
        return constants$477.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPlatformId;
     * }
     */
    public static int dwPlatformId$get(MemorySegment seg) {
        return (int)constants$477.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPlatformId;
     * }
     */
    public static void dwPlatformId$set(MemorySegment seg, int x) {
        constants$477.const$0.set(seg, x);
    }
    public static int dwPlatformId$get(MemorySegment seg, long index) {
        return (int)constants$477.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPlatformId$set(MemorySegment seg, long index, int x) {
        constants$477.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szCSDVersion$slice(MemorySegment seg) {
        return seg.asSlice(20, 128);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


