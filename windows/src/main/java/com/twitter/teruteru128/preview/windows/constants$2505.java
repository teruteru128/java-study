// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$2505 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$2505() {}
    static final VarHandle const$0 = constants$2504.const$3.varHandle(MemoryLayout.PathElement.groupElement("NfitHandle"));
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_INT.withName("Version"),
        JAVA_INT.withName("Size"),
        JAVA_INT.withName("DeviceCount"),
        MemoryLayout.sequenceLayout(1, MemoryLayout.structLayout(
            JAVA_INT.withName("Version"),
            JAVA_INT.withName("Size"),
            JAVA_INT.withName("NfitHandle"),
            MemoryLayout.sequenceLayout(256, JAVA_SHORT).withName("SymbolicLink")
        ).withName("_SCM_PHYSICAL_DEVICE_INSTANCE")).withName("Devices")
    ).withName("_SCM_PHYSICAL_DEVICES");
    static final VarHandle const$2 = constants$2505.const$1.varHandle(MemoryLayout.PathElement.groupElement("Version"));
    static final VarHandle const$3 = constants$2505.const$1.varHandle(MemoryLayout.PathElement.groupElement("Size"));
    static final VarHandle const$4 = constants$2505.const$1.varHandle(MemoryLayout.PathElement.groupElement("DeviceCount"));
    static final StructLayout const$5 = MemoryLayout.structLayout(
        JAVA_INT.withName("Version"),
        JAVA_INT.withName("Size"),
        JAVA_INT.withName("Flags"),
        JAVA_INT.withName("NfitHandle"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("Data1"),
            JAVA_SHORT.withName("Data2"),
            JAVA_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Data4")
        ).withName("LogicalDeviceGuid"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("Data1"),
            JAVA_SHORT.withName("Data2"),
            JAVA_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Data4")
        ).withName("AddressRangeType"),
        JAVA_INT.withName("AssociatedId"),
        MemoryLayout.paddingLayout(4),
        JAVA_LONG.withName("Length"),
        JAVA_LONG.withName("StartingDPA"),
        JAVA_LONG.withName("BaseSPA"),
        JAVA_LONG.withName("SPAOffset"),
        JAVA_LONG.withName("RegionOffset")
    ).withName("_SCM_REGION");
}


