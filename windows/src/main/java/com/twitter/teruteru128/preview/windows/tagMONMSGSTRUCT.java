// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMONMSGSTRUCT {
 *     UINT cb;
 *     HWND hwndTo;
 *     DWORD dwTime;
 *     HANDLE hTask;
 *     UINT wMsg;
 *     WPARAM wParam;
 *     LPARAM lParam;
 *     DDEML_MSG_HOOK_DATA dmhd;
 * };
 * }
 */
public class tagMONMSGSTRUCT {

    public static MemoryLayout $LAYOUT() {
        return constants$1537.const$2;
    }
    public static VarHandle cb$VH() {
        return constants$1537.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static int cb$get(MemorySegment seg) {
        return (int)constants$1537.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cb;
     * }
     */
    public static void cb$set(MemorySegment seg, int x) {
        constants$1537.const$3.set(seg, x);
    }
    public static int cb$get(MemorySegment seg, long index) {
        return (int)constants$1537.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cb$set(MemorySegment seg, long index, int x) {
        constants$1537.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hwndTo$VH() {
        return constants$1537.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndTo;
     * }
     */
    public static MemorySegment hwndTo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1537.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndTo;
     * }
     */
    public static void hwndTo$set(MemorySegment seg, MemorySegment x) {
        constants$1537.const$4.set(seg, x);
    }
    public static MemorySegment hwndTo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1537.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndTo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1537.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTime$VH() {
        return constants$1537.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static int dwTime$get(MemorySegment seg) {
        return (int)constants$1537.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTime;
     * }
     */
    public static void dwTime$set(MemorySegment seg, int x) {
        constants$1537.const$5.set(seg, x);
    }
    public static int dwTime$get(MemorySegment seg, long index) {
        return (int)constants$1537.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTime$set(MemorySegment seg, long index, int x) {
        constants$1537.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hTask$VH() {
        return constants$1538.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static MemorySegment hTask$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1538.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE hTask;
     * }
     */
    public static void hTask$set(MemorySegment seg, MemorySegment x) {
        constants$1538.const$0.set(seg, x);
    }
    public static MemorySegment hTask$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1538.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void hTask$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1538.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wMsg$VH() {
        return constants$1538.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT wMsg;
     * }
     */
    public static int wMsg$get(MemorySegment seg) {
        return (int)constants$1538.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT wMsg;
     * }
     */
    public static void wMsg$set(MemorySegment seg, int x) {
        constants$1538.const$1.set(seg, x);
    }
    public static int wMsg$get(MemorySegment seg, long index) {
        return (int)constants$1538.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wMsg$set(MemorySegment seg, long index, int x) {
        constants$1538.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wParam$VH() {
        return constants$1538.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WPARAM wParam;
     * }
     */
    public static long wParam$get(MemorySegment seg) {
        return (long)constants$1538.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WPARAM wParam;
     * }
     */
    public static void wParam$set(MemorySegment seg, long x) {
        constants$1538.const$2.set(seg, x);
    }
    public static long wParam$get(MemorySegment seg, long index) {
        return (long)constants$1538.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wParam$set(MemorySegment seg, long index, long x) {
        constants$1538.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lParam$VH() {
        return constants$1538.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPARAM lParam;
     * }
     */
    public static long lParam$get(MemorySegment seg) {
        return (long)constants$1538.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPARAM lParam;
     * }
     */
    public static void lParam$set(MemorySegment seg, long x) {
        constants$1538.const$3.set(seg, x);
    }
    public static long lParam$get(MemorySegment seg, long index) {
        return (long)constants$1538.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lParam$set(MemorySegment seg, long index, long x) {
        constants$1538.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment dmhd$slice(MemorySegment seg) {
        return seg.asSlice(56, 56);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


