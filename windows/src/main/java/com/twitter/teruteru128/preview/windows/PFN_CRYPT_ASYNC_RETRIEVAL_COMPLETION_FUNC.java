// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(void* pvCompletion,unsigned long dwCompletionCode,char* pszUrl,char* pszObjectOid,void* pvObject);
 * }
 */
public interface PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC {

    void apply(java.lang.foreign.MemorySegment pvCompletion, int dwCompletionCode, java.lang.foreign.MemorySegment pszUrl, java.lang.foreign.MemorySegment pszObjectOid, java.lang.foreign.MemorySegment pvObject);
    static MemorySegment allocate(PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2198.const$1, fi, constants$2198.const$0, scope);
    }
    static PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _pvCompletion, int _dwCompletionCode, java.lang.foreign.MemorySegment _pszUrl, java.lang.foreign.MemorySegment _pszObjectOid, java.lang.foreign.MemorySegment _pvObject) -> {
            try {
                constants$2198.const$2.invokeExact(symbol, _pvCompletion, _dwCompletionCode, _pszUrl, _pszObjectOid, _pvObject);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


