// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _FIND_NAME_BUFFER {
 *     UCHAR length;
 *     UCHAR access_control;
 *     UCHAR frame_control;
 *     UCHAR destination_addr[6];
 *     UCHAR source_addr[6];
 *     UCHAR routing_info[18];
 * };
 * }
 */
public class _FIND_NAME_BUFFER {

    public static MemoryLayout $LAYOUT() {
        return constants$1710.const$3;
    }
    public static VarHandle length$VH() {
        return constants$1710.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR length;
     * }
     */
    public static byte length$get(MemorySegment seg) {
        return (byte)constants$1710.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR length;
     * }
     */
    public static void length$set(MemorySegment seg, byte x) {
        constants$1710.const$4.set(seg, x);
    }
    public static byte length$get(MemorySegment seg, long index) {
        return (byte)constants$1710.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void length$set(MemorySegment seg, long index, byte x) {
        constants$1710.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle access_control$VH() {
        return constants$1710.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR access_control;
     * }
     */
    public static byte access_control$get(MemorySegment seg) {
        return (byte)constants$1710.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR access_control;
     * }
     */
    public static void access_control$set(MemorySegment seg, byte x) {
        constants$1710.const$5.set(seg, x);
    }
    public static byte access_control$get(MemorySegment seg, long index) {
        return (byte)constants$1710.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void access_control$set(MemorySegment seg, long index, byte x) {
        constants$1710.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frame_control$VH() {
        return constants$1711.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR frame_control;
     * }
     */
    public static byte frame_control$get(MemorySegment seg) {
        return (byte)constants$1711.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR frame_control;
     * }
     */
    public static void frame_control$set(MemorySegment seg, byte x) {
        constants$1711.const$0.set(seg, x);
    }
    public static byte frame_control$get(MemorySegment seg, long index) {
        return (byte)constants$1711.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void frame_control$set(MemorySegment seg, long index, byte x) {
        constants$1711.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment destination_addr$slice(MemorySegment seg) {
        return seg.asSlice(3, 6);
    }
    public static MemorySegment source_addr$slice(MemorySegment seg) {
        return seg.asSlice(9, 6);
    }
    public static MemorySegment routing_info$slice(MemorySegment seg) {
        return seg.asSlice(15, 18);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


