// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _IMAGE_COFF_SYMBOLS_HEADER {
 *     DWORD NumberOfSymbols;
 *     DWORD LvaToFirstSymbol;
 *     DWORD NumberOfLinenumbers;
 *     DWORD LvaToFirstLinenumber;
 *     DWORD RvaToFirstByteOfCode;
 *     DWORD RvaToLastByteOfCode;
 *     DWORD RvaToFirstByteOfData;
 *     DWORD RvaToLastByteOfData;
 * };
 * }
 */
public class _IMAGE_COFF_SYMBOLS_HEADER {

    public static MemoryLayout $LAYOUT() {
        return constants$452.const$4;
    }
    public static VarHandle NumberOfSymbols$VH() {
        return constants$452.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD NumberOfSymbols;
     * }
     */
    public static int NumberOfSymbols$get(MemorySegment seg) {
        return (int)constants$452.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD NumberOfSymbols;
     * }
     */
    public static void NumberOfSymbols$set(MemorySegment seg, int x) {
        constants$452.const$5.set(seg, x);
    }
    public static int NumberOfSymbols$get(MemorySegment seg, long index) {
        return (int)constants$452.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberOfSymbols$set(MemorySegment seg, long index, int x) {
        constants$452.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LvaToFirstSymbol$VH() {
        return constants$453.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LvaToFirstSymbol;
     * }
     */
    public static int LvaToFirstSymbol$get(MemorySegment seg) {
        return (int)constants$453.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LvaToFirstSymbol;
     * }
     */
    public static void LvaToFirstSymbol$set(MemorySegment seg, int x) {
        constants$453.const$0.set(seg, x);
    }
    public static int LvaToFirstSymbol$get(MemorySegment seg, long index) {
        return (int)constants$453.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void LvaToFirstSymbol$set(MemorySegment seg, long index, int x) {
        constants$453.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumberOfLinenumbers$VH() {
        return constants$453.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD NumberOfLinenumbers;
     * }
     */
    public static int NumberOfLinenumbers$get(MemorySegment seg) {
        return (int)constants$453.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD NumberOfLinenumbers;
     * }
     */
    public static void NumberOfLinenumbers$set(MemorySegment seg, int x) {
        constants$453.const$1.set(seg, x);
    }
    public static int NumberOfLinenumbers$get(MemorySegment seg, long index) {
        return (int)constants$453.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberOfLinenumbers$set(MemorySegment seg, long index, int x) {
        constants$453.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LvaToFirstLinenumber$VH() {
        return constants$453.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LvaToFirstLinenumber;
     * }
     */
    public static int LvaToFirstLinenumber$get(MemorySegment seg) {
        return (int)constants$453.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LvaToFirstLinenumber;
     * }
     */
    public static void LvaToFirstLinenumber$set(MemorySegment seg, int x) {
        constants$453.const$2.set(seg, x);
    }
    public static int LvaToFirstLinenumber$get(MemorySegment seg, long index) {
        return (int)constants$453.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void LvaToFirstLinenumber$set(MemorySegment seg, long index, int x) {
        constants$453.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RvaToFirstByteOfCode$VH() {
        return constants$453.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD RvaToFirstByteOfCode;
     * }
     */
    public static int RvaToFirstByteOfCode$get(MemorySegment seg) {
        return (int)constants$453.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD RvaToFirstByteOfCode;
     * }
     */
    public static void RvaToFirstByteOfCode$set(MemorySegment seg, int x) {
        constants$453.const$3.set(seg, x);
    }
    public static int RvaToFirstByteOfCode$get(MemorySegment seg, long index) {
        return (int)constants$453.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void RvaToFirstByteOfCode$set(MemorySegment seg, long index, int x) {
        constants$453.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RvaToLastByteOfCode$VH() {
        return constants$453.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD RvaToLastByteOfCode;
     * }
     */
    public static int RvaToLastByteOfCode$get(MemorySegment seg) {
        return (int)constants$453.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD RvaToLastByteOfCode;
     * }
     */
    public static void RvaToLastByteOfCode$set(MemorySegment seg, int x) {
        constants$453.const$4.set(seg, x);
    }
    public static int RvaToLastByteOfCode$get(MemorySegment seg, long index) {
        return (int)constants$453.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void RvaToLastByteOfCode$set(MemorySegment seg, long index, int x) {
        constants$453.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RvaToFirstByteOfData$VH() {
        return constants$453.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD RvaToFirstByteOfData;
     * }
     */
    public static int RvaToFirstByteOfData$get(MemorySegment seg) {
        return (int)constants$453.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD RvaToFirstByteOfData;
     * }
     */
    public static void RvaToFirstByteOfData$set(MemorySegment seg, int x) {
        constants$453.const$5.set(seg, x);
    }
    public static int RvaToFirstByteOfData$get(MemorySegment seg, long index) {
        return (int)constants$453.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void RvaToFirstByteOfData$set(MemorySegment seg, long index, int x) {
        constants$453.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RvaToLastByteOfData$VH() {
        return constants$454.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD RvaToLastByteOfData;
     * }
     */
    public static int RvaToLastByteOfData$get(MemorySegment seg) {
        return (int)constants$454.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD RvaToLastByteOfData;
     * }
     */
    public static void RvaToLastByteOfData$set(MemorySegment seg, int x) {
        constants$454.const$0.set(seg, x);
    }
    public static int RvaToLastByteOfData$get(MemorySegment seg, long index) {
        return (int)constants$454.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void RvaToLastByteOfData$set(MemorySegment seg, long index, int x) {
        constants$454.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


