// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagRPC_EXTENDED_ERROR_INFO {
 *     ULONG Version;
 *     LPWSTR ComputerName;
 *     ULONG ProcessID;
 *     union  u;
 *     ULONG GeneratingComponent;
 *     ULONG Status;
 *     USHORT DetectionLocation;
 *     USHORT Flags;
 *     int NumberOfParameters;
 *     RPC_EE_INFO_PARAM Parameters[4];
 * };
 * }
 */
public class tagRPC_EXTENDED_ERROR_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$1826.const$5;
    }
    public static VarHandle Version$VH() {
        return constants$1827.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$1827.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$1827.const$0.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$1827.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$1827.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ComputerName$VH() {
        return constants$1827.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR ComputerName;
     * }
     */
    public static MemorySegment ComputerName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1827.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR ComputerName;
     * }
     */
    public static void ComputerName$set(MemorySegment seg, MemorySegment x) {
        constants$1827.const$1.set(seg, x);
    }
    public static MemorySegment ComputerName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1827.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ComputerName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1827.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ProcessID$VH() {
        return constants$1827.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ProcessID;
     * }
     */
    public static int ProcessID$get(MemorySegment seg) {
        return (int)constants$1827.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ProcessID;
     * }
     */
    public static void ProcessID$set(MemorySegment seg, int x) {
        constants$1827.const$2.set(seg, x);
    }
    public static int ProcessID$get(MemorySegment seg, long index) {
        return (int)constants$1827.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ProcessID$set(MemorySegment seg, long index, int x) {
        constants$1827.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * union {
     *     SYSTEMTIME SystemTime;
     *     FILETIME FileTime;
     * };
     * }
     */
    public static final class u {

        // Suppresses default constructor, ensuring non-instantiability.
        private u() {}
        public static MemoryLayout $LAYOUT() {
            return constants$1827.const$3;
        }
        public static MemorySegment SystemTime$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        public static MemorySegment FileTime$slice(MemorySegment seg) {
            return seg.asSlice(0, 8);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment u$slice(MemorySegment seg) {
        return seg.asSlice(20, 16);
    }
    public static VarHandle GeneratingComponent$VH() {
        return constants$1827.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG GeneratingComponent;
     * }
     */
    public static int GeneratingComponent$get(MemorySegment seg) {
        return (int)constants$1827.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG GeneratingComponent;
     * }
     */
    public static void GeneratingComponent$set(MemorySegment seg, int x) {
        constants$1827.const$4.set(seg, x);
    }
    public static int GeneratingComponent$get(MemorySegment seg, long index) {
        return (int)constants$1827.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void GeneratingComponent$set(MemorySegment seg, long index, int x) {
        constants$1827.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Status$VH() {
        return constants$1827.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG Status;
     * }
     */
    public static int Status$get(MemorySegment seg) {
        return (int)constants$1827.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG Status;
     * }
     */
    public static void Status$set(MemorySegment seg, int x) {
        constants$1827.const$5.set(seg, x);
    }
    public static int Status$get(MemorySegment seg, long index) {
        return (int)constants$1827.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Status$set(MemorySegment seg, long index, int x) {
        constants$1827.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DetectionLocation$VH() {
        return constants$1828.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT DetectionLocation;
     * }
     */
    public static short DetectionLocation$get(MemorySegment seg) {
        return (short)constants$1828.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT DetectionLocation;
     * }
     */
    public static void DetectionLocation$set(MemorySegment seg, short x) {
        constants$1828.const$0.set(seg, x);
    }
    public static short DetectionLocation$get(MemorySegment seg, long index) {
        return (short)constants$1828.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void DetectionLocation$set(MemorySegment seg, long index, short x) {
        constants$1828.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$1828.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT Flags;
     * }
     */
    public static short Flags$get(MemorySegment seg) {
        return (short)constants$1828.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, short x) {
        constants$1828.const$1.set(seg, x);
    }
    public static short Flags$get(MemorySegment seg, long index) {
        return (short)constants$1828.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, short x) {
        constants$1828.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumberOfParameters$VH() {
        return constants$1828.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int NumberOfParameters;
     * }
     */
    public static int NumberOfParameters$get(MemorySegment seg) {
        return (int)constants$1828.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int NumberOfParameters;
     * }
     */
    public static void NumberOfParameters$set(MemorySegment seg, int x) {
        constants$1828.const$2.set(seg, x);
    }
    public static int NumberOfParameters$get(MemorySegment seg, long index) {
        return (int)constants$1828.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void NumberOfParameters$set(MemorySegment seg, long index, int x) {
        constants$1828.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Parameters$slice(MemorySegment seg) {
        return seg.asSlice(56, 96);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


