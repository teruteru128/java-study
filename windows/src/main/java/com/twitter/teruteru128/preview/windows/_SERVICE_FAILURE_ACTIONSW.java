// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _SERVICE_FAILURE_ACTIONSW {
 *     DWORD dwResetPeriod;
 *     LPWSTR lpRebootMsg;
 *     LPWSTR lpCommand;
 *     DWORD cActions;
 *     SC_ACTION* lpsaActions;
 * };
 * }
 */
public class _SERVICE_FAILURE_ACTIONSW {

    public static MemoryLayout $LAYOUT() {
        return constants$4480.const$5;
    }
    public static VarHandle dwResetPeriod$VH() {
        return constants$4481.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwResetPeriod;
     * }
     */
    public static int dwResetPeriod$get(MemorySegment seg) {
        return (int)constants$4481.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwResetPeriod;
     * }
     */
    public static void dwResetPeriod$set(MemorySegment seg, int x) {
        constants$4481.const$0.set(seg, x);
    }
    public static int dwResetPeriod$get(MemorySegment seg, long index) {
        return (int)constants$4481.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwResetPeriod$set(MemorySegment seg, long index, int x) {
        constants$4481.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpRebootMsg$VH() {
        return constants$4481.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpRebootMsg;
     * }
     */
    public static MemorySegment lpRebootMsg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpRebootMsg;
     * }
     */
    public static void lpRebootMsg$set(MemorySegment seg, MemorySegment x) {
        constants$4481.const$1.set(seg, x);
    }
    public static MemorySegment lpRebootMsg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpRebootMsg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4481.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpCommand$VH() {
        return constants$4481.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpCommand;
     * }
     */
    public static MemorySegment lpCommand$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpCommand;
     * }
     */
    public static void lpCommand$set(MemorySegment seg, MemorySegment x) {
        constants$4481.const$2.set(seg, x);
    }
    public static MemorySegment lpCommand$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpCommand$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4481.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cActions$VH() {
        return constants$4481.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cActions;
     * }
     */
    public static int cActions$get(MemorySegment seg) {
        return (int)constants$4481.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cActions;
     * }
     */
    public static void cActions$set(MemorySegment seg, int x) {
        constants$4481.const$3.set(seg, x);
    }
    public static int cActions$get(MemorySegment seg, long index) {
        return (int)constants$4481.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cActions$set(MemorySegment seg, long index, int x) {
        constants$4481.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpsaActions$VH() {
        return constants$4481.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SC_ACTION* lpsaActions;
     * }
     */
    public static MemorySegment lpsaActions$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SC_ACTION* lpsaActions;
     * }
     */
    public static void lpsaActions$set(MemorySegment seg, MemorySegment x) {
        constants$4481.const$4.set(seg, x);
    }
    public static MemorySegment lpsaActions$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4481.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpsaActions$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4481.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


