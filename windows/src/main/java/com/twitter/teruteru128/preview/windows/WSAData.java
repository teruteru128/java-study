// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct WSAData {
 *     WORD wVersion;
 *     WORD wHighVersion;
 *     unsigned short iMaxSockets;
 *     unsigned short iMaxUdpDg;
 *     char* lpVendorInfo;
 *     char szDescription[257];
 *     char szSystemStatus[129];
 * };
 * }
 */
public class WSAData {

    public static MemoryLayout $LAYOUT() {
        return constants$1903.const$5;
    }
    public static VarHandle wVersion$VH() {
        return constants$1904.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wVersion;
     * }
     */
    public static short wVersion$get(MemorySegment seg) {
        return (short)constants$1904.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wVersion;
     * }
     */
    public static void wVersion$set(MemorySegment seg, short x) {
        constants$1904.const$0.set(seg, x);
    }
    public static short wVersion$get(MemorySegment seg, long index) {
        return (short)constants$1904.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void wVersion$set(MemorySegment seg, long index, short x) {
        constants$1904.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wHighVersion$VH() {
        return constants$1904.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wHighVersion;
     * }
     */
    public static short wHighVersion$get(MemorySegment seg) {
        return (short)constants$1904.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wHighVersion;
     * }
     */
    public static void wHighVersion$set(MemorySegment seg, short x) {
        constants$1904.const$1.set(seg, x);
    }
    public static short wHighVersion$get(MemorySegment seg, long index) {
        return (short)constants$1904.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wHighVersion$set(MemorySegment seg, long index, short x) {
        constants$1904.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iMaxSockets$VH() {
        return constants$1904.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short iMaxSockets;
     * }
     */
    public static short iMaxSockets$get(MemorySegment seg) {
        return (short)constants$1904.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short iMaxSockets;
     * }
     */
    public static void iMaxSockets$set(MemorySegment seg, short x) {
        constants$1904.const$2.set(seg, x);
    }
    public static short iMaxSockets$get(MemorySegment seg, long index) {
        return (short)constants$1904.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void iMaxSockets$set(MemorySegment seg, long index, short x) {
        constants$1904.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iMaxUdpDg$VH() {
        return constants$1904.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short iMaxUdpDg;
     * }
     */
    public static short iMaxUdpDg$get(MemorySegment seg) {
        return (short)constants$1904.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short iMaxUdpDg;
     * }
     */
    public static void iMaxUdpDg$set(MemorySegment seg, short x) {
        constants$1904.const$3.set(seg, x);
    }
    public static short iMaxUdpDg$get(MemorySegment seg, long index) {
        return (short)constants$1904.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void iMaxUdpDg$set(MemorySegment seg, long index, short x) {
        constants$1904.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpVendorInfo$VH() {
        return constants$1904.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* lpVendorInfo;
     * }
     */
    public static MemorySegment lpVendorInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1904.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* lpVendorInfo;
     * }
     */
    public static void lpVendorInfo$set(MemorySegment seg, MemorySegment x) {
        constants$1904.const$4.set(seg, x);
    }
    public static MemorySegment lpVendorInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1904.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpVendorInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1904.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szDescription$slice(MemorySegment seg) {
        return seg.asSlice(16, 257);
    }
    public static MemorySegment szSystemStatus$slice(MemorySegment seg) {
        return seg.asSlice(273, 129);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


