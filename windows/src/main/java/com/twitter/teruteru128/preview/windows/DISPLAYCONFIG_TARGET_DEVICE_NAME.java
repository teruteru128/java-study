// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct DISPLAYCONFIG_TARGET_DEVICE_NAME {
 *     DISPLAYCONFIG_DEVICE_INFO_HEADER header;
 *     DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
 *     DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
 *     UINT16 edidManufactureId;
 *     UINT16 edidProductCodeId;
 *     UINT32 connectorInstance;
 *     WCHAR monitorFriendlyDeviceName[64];
 *     WCHAR monitorDevicePath[128];
 * };
 * }
 */
public class DISPLAYCONFIG_TARGET_DEVICE_NAME {

    public static MemoryLayout $LAYOUT() {
        return constants$964.const$2;
    }
    public static MemorySegment header$slice(MemorySegment seg) {
        return seg.asSlice(0, 20);
    }
    public static MemorySegment flags$slice(MemorySegment seg) {
        return seg.asSlice(20, 4);
    }
    public static VarHandle outputTechnology$VH() {
        return constants$964.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
     * }
     */
    public static int outputTechnology$get(MemorySegment seg) {
        return (int)constants$964.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
     * }
     */
    public static void outputTechnology$set(MemorySegment seg, int x) {
        constants$964.const$3.set(seg, x);
    }
    public static int outputTechnology$get(MemorySegment seg, long index) {
        return (int)constants$964.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void outputTechnology$set(MemorySegment seg, long index, int x) {
        constants$964.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle edidManufactureId$VH() {
        return constants$964.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT16 edidManufactureId;
     * }
     */
    public static short edidManufactureId$get(MemorySegment seg) {
        return (short)constants$964.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT16 edidManufactureId;
     * }
     */
    public static void edidManufactureId$set(MemorySegment seg, short x) {
        constants$964.const$4.set(seg, x);
    }
    public static short edidManufactureId$get(MemorySegment seg, long index) {
        return (short)constants$964.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void edidManufactureId$set(MemorySegment seg, long index, short x) {
        constants$964.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle edidProductCodeId$VH() {
        return constants$964.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT16 edidProductCodeId;
     * }
     */
    public static short edidProductCodeId$get(MemorySegment seg) {
        return (short)constants$964.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT16 edidProductCodeId;
     * }
     */
    public static void edidProductCodeId$set(MemorySegment seg, short x) {
        constants$964.const$5.set(seg, x);
    }
    public static short edidProductCodeId$get(MemorySegment seg, long index) {
        return (short)constants$964.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void edidProductCodeId$set(MemorySegment seg, long index, short x) {
        constants$964.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle connectorInstance$VH() {
        return constants$965.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 connectorInstance;
     * }
     */
    public static int connectorInstance$get(MemorySegment seg) {
        return (int)constants$965.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 connectorInstance;
     * }
     */
    public static void connectorInstance$set(MemorySegment seg, int x) {
        constants$965.const$0.set(seg, x);
    }
    public static int connectorInstance$get(MemorySegment seg, long index) {
        return (int)constants$965.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void connectorInstance$set(MemorySegment seg, long index, int x) {
        constants$965.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment monitorFriendlyDeviceName$slice(MemorySegment seg) {
        return seg.asSlice(36, 128);
    }
    public static MemorySegment monitorDevicePath$slice(MemorySegment seg) {
        return seg.asSlice(164, 256);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


