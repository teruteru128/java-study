// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clGetImageRequirementsInfoEXT_fn)(struct _cl_context* context,unsigned long long* properties,unsigned long long flags,struct _cl_image_format* image_format,struct _cl_image_desc* image_desc,unsigned int param_name,unsigned long long param_value_size,void* param_value,unsigned long long* param_value_size_ret);
 * }
 */
public interface clGetImageRequirementsInfoEXT_fn {

    int apply(java.lang.foreign.MemorySegment context, java.lang.foreign.MemorySegment properties, long flags, java.lang.foreign.MemorySegment image_format, java.lang.foreign.MemorySegment image_desc, int param_name, long param_value_size, java.lang.foreign.MemorySegment param_value, java.lang.foreign.MemorySegment param_value_size_ret);
    static MemorySegment allocate(clGetImageRequirementsInfoEXT_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$255.const$5, fi, constants$255.const$4, scope);
    }
    static clGetImageRequirementsInfoEXT_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _context, java.lang.foreign.MemorySegment _properties, long _flags, java.lang.foreign.MemorySegment _image_format, java.lang.foreign.MemorySegment _image_desc, int _param_name, long _param_value_size, java.lang.foreign.MemorySegment _param_value, java.lang.foreign.MemorySegment _param_value_size_ret) -> {
            try {
                return (int)constants$256.const$0.invokeExact(symbol, _context, _properties, _flags, _image_format, _image_desc, _param_name, _param_value_size, _param_value, _param_value_size_ret);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


