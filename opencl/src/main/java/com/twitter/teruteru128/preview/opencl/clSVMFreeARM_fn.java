// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*clSVMFreeARM_fn)(struct _cl_context* context,void* svm_pointer);
 * }
 */
public interface clSVMFreeARM_fn {

    void apply(java.lang.foreign.MemorySegment context, java.lang.foreign.MemorySegment svm_pointer);
    static MemorySegment allocate(clSVMFreeARM_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$241.const$2, fi, constants$180.const$3, scope);
    }
    static clSVMFreeARM_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _context, java.lang.foreign.MemorySegment _svm_pointer) -> {
            try {
                constants$180.const$5.invokeExact(symbol, _context, _svm_pointer);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


