// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clGetSemaphoreInfoKHR_fn)(struct _cl_semaphore_khr* sema_object,unsigned int param_name,unsigned long long param_value_size,void* param_value,unsigned long long* param_value_size_ret);
 * }
 */
public interface clGetSemaphoreInfoKHR_fn {

    int apply(java.lang.foreign.MemorySegment accelerator, int param_name, long param_value_size, java.lang.foreign.MemorySegment param_value, java.lang.foreign.MemorySegment param_value_size_ret);
    static MemorySegment allocate(clGetSemaphoreInfoKHR_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$238.const$5, fi, constants$176.const$4, scope);
    }
    static clGetSemaphoreInfoKHR_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _accelerator, int _param_name, long _param_value_size, java.lang.foreign.MemorySegment _param_value, java.lang.foreign.MemorySegment _param_value_size_ret) -> {
            try {
                return (int)constants$205.const$4.invokeExact(symbol, _accelerator, _param_name, _param_value_size, _param_value, _param_value_size_ret);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


