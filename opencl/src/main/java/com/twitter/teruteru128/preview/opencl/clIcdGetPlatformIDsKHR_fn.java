// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clIcdGetPlatformIDsKHR_fn)(unsigned int num_entries,struct _cl_platform_id** platforms,unsigned int* num_platforms);
 * }
 */
public interface clIcdGetPlatformIDsKHR_fn {

    int apply(int num_entries, java.lang.foreign.MemorySegment platforms, java.lang.foreign.MemorySegment num_platforms);
    static MemorySegment allocate(clIcdGetPlatformIDsKHR_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$226.const$5, fi, constants$176.const$2, scope);
    }
    static clIcdGetPlatformIDsKHR_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _num_entries, java.lang.foreign.MemorySegment _platforms, java.lang.foreign.MemorySegment _num_platforms) -> {
            try {
                return (int)constants$227.const$0.invokeExact(symbol, _num_entries, _platforms, _num_platforms);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


