// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union {
 *     cl_uchar s[16];
 *     struct {
 *         cl_uchar x;
 *         cl_uchar y;
 *         cl_uchar z;
 *         cl_uchar w;
 *         cl_uchar __spacer4;
 *         cl_uchar __spacer5;
 *         cl_uchar __spacer6;
 *         cl_uchar __spacer7;
 *         cl_uchar __spacer8;
 *         cl_uchar __spacer9;
 *         cl_uchar sa;
 *         cl_uchar sb;
 *         cl_uchar sc;
 *         cl_uchar sd;
 *         cl_uchar se;
 *         cl_uchar sf;
 *     };
 *     struct {
 *         cl_uchar s0;
 *         cl_uchar s1;
 *         cl_uchar s2;
 *         cl_uchar s3;
 *         cl_uchar s4;
 *         cl_uchar s5;
 *         cl_uchar s6;
 *         cl_uchar s7;
 *         cl_uchar s8;
 *         cl_uchar s9;
 *         cl_uchar sA;
 *         cl_uchar sB;
 *         cl_uchar sC;
 *         cl_uchar sD;
 *         cl_uchar sE;
 *         cl_uchar sF;
 *     };
 *     struct {
 *         cl_uchar8 lo;
 *         cl_uchar8 hi;
 *     };
 *     __cl_uchar8 v8[2];
 *     __cl_uchar16 v16;
 * };
 * }
 */
public class cl_uchar16 {

    public static MemoryLayout $LAYOUT() {
        return constants$67.const$0;
    }
    public static MemorySegment s$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static VarHandle x$VH() {
        return constants$76.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar x;
     * }
     */
    public static byte x$get(MemorySegment seg) {
        return (byte)constants$76.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar x;
     * }
     */
    public static void x$set(MemorySegment seg, byte x) {
        constants$76.const$5.set(seg, x);
    }
    public static byte x$get(MemorySegment seg, long index) {
        return (byte)constants$76.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, byte x) {
        constants$76.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$77.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar y;
     * }
     */
    public static byte y$get(MemorySegment seg) {
        return (byte)constants$77.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar y;
     * }
     */
    public static void y$set(MemorySegment seg, byte x) {
        constants$77.const$0.set(seg, x);
    }
    public static byte y$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, byte x) {
        constants$77.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle z$VH() {
        return constants$77.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar z;
     * }
     */
    public static byte z$get(MemorySegment seg) {
        return (byte)constants$77.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar z;
     * }
     */
    public static void z$set(MemorySegment seg, byte x) {
        constants$77.const$1.set(seg, x);
    }
    public static byte z$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void z$set(MemorySegment seg, long index, byte x) {
        constants$77.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle w$VH() {
        return constants$77.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar w;
     * }
     */
    public static byte w$get(MemorySegment seg) {
        return (byte)constants$77.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar w;
     * }
     */
    public static void w$set(MemorySegment seg, byte x) {
        constants$77.const$2.set(seg, x);
    }
    public static byte w$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void w$set(MemorySegment seg, long index, byte x) {
        constants$77.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer4$VH() {
        return constants$77.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer4;
     * }
     */
    public static byte __spacer4$get(MemorySegment seg) {
        return (byte)constants$77.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer4;
     * }
     */
    public static void __spacer4$set(MemorySegment seg, byte x) {
        constants$77.const$3.set(seg, x);
    }
    public static byte __spacer4$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer4$set(MemorySegment seg, long index, byte x) {
        constants$77.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer5$VH() {
        return constants$77.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer5;
     * }
     */
    public static byte __spacer5$get(MemorySegment seg) {
        return (byte)constants$77.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer5;
     * }
     */
    public static void __spacer5$set(MemorySegment seg, byte x) {
        constants$77.const$4.set(seg, x);
    }
    public static byte __spacer5$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer5$set(MemorySegment seg, long index, byte x) {
        constants$77.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer6$VH() {
        return constants$77.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer6;
     * }
     */
    public static byte __spacer6$get(MemorySegment seg) {
        return (byte)constants$77.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer6;
     * }
     */
    public static void __spacer6$set(MemorySegment seg, byte x) {
        constants$77.const$5.set(seg, x);
    }
    public static byte __spacer6$get(MemorySegment seg, long index) {
        return (byte)constants$77.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer6$set(MemorySegment seg, long index, byte x) {
        constants$77.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer7$VH() {
        return constants$78.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer7;
     * }
     */
    public static byte __spacer7$get(MemorySegment seg) {
        return (byte)constants$78.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer7;
     * }
     */
    public static void __spacer7$set(MemorySegment seg, byte x) {
        constants$78.const$0.set(seg, x);
    }
    public static byte __spacer7$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer7$set(MemorySegment seg, long index, byte x) {
        constants$78.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer8$VH() {
        return constants$78.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer8;
     * }
     */
    public static byte __spacer8$get(MemorySegment seg) {
        return (byte)constants$78.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer8;
     * }
     */
    public static void __spacer8$set(MemorySegment seg, byte x) {
        constants$78.const$1.set(seg, x);
    }
    public static byte __spacer8$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer8$set(MemorySegment seg, long index, byte x) {
        constants$78.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer9$VH() {
        return constants$78.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar __spacer9;
     * }
     */
    public static byte __spacer9$get(MemorySegment seg) {
        return (byte)constants$78.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar __spacer9;
     * }
     */
    public static void __spacer9$set(MemorySegment seg, byte x) {
        constants$78.const$2.set(seg, x);
    }
    public static byte __spacer9$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer9$set(MemorySegment seg, long index, byte x) {
        constants$78.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sa$VH() {
        return constants$78.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sa;
     * }
     */
    public static byte sa$get(MemorySegment seg) {
        return (byte)constants$78.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sa;
     * }
     */
    public static void sa$set(MemorySegment seg, byte x) {
        constants$78.const$3.set(seg, x);
    }
    public static byte sa$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sa$set(MemorySegment seg, long index, byte x) {
        constants$78.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sb$VH() {
        return constants$78.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sb;
     * }
     */
    public static byte sb$get(MemorySegment seg) {
        return (byte)constants$78.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sb;
     * }
     */
    public static void sb$set(MemorySegment seg, byte x) {
        constants$78.const$4.set(seg, x);
    }
    public static byte sb$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void sb$set(MemorySegment seg, long index, byte x) {
        constants$78.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sc$VH() {
        return constants$78.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sc;
     * }
     */
    public static byte sc$get(MemorySegment seg) {
        return (byte)constants$78.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sc;
     * }
     */
    public static void sc$set(MemorySegment seg, byte x) {
        constants$78.const$5.set(seg, x);
    }
    public static byte sc$get(MemorySegment seg, long index) {
        return (byte)constants$78.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void sc$set(MemorySegment seg, long index, byte x) {
        constants$78.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sd$VH() {
        return constants$79.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sd;
     * }
     */
    public static byte sd$get(MemorySegment seg) {
        return (byte)constants$79.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sd;
     * }
     */
    public static void sd$set(MemorySegment seg, byte x) {
        constants$79.const$0.set(seg, x);
    }
    public static byte sd$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sd$set(MemorySegment seg, long index, byte x) {
        constants$79.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle se$VH() {
        return constants$79.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar se;
     * }
     */
    public static byte se$get(MemorySegment seg) {
        return (byte)constants$79.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar se;
     * }
     */
    public static void se$set(MemorySegment seg, byte x) {
        constants$79.const$1.set(seg, x);
    }
    public static byte se$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void se$set(MemorySegment seg, long index, byte x) {
        constants$79.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sf$VH() {
        return constants$79.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sf;
     * }
     */
    public static byte sf$get(MemorySegment seg) {
        return (byte)constants$79.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sf;
     * }
     */
    public static void sf$set(MemorySegment seg, byte x) {
        constants$79.const$2.set(seg, x);
    }
    public static byte sf$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void sf$set(MemorySegment seg, long index, byte x) {
        constants$79.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s0$VH() {
        return constants$79.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s0;
     * }
     */
    public static byte s0$get(MemorySegment seg) {
        return (byte)constants$79.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s0;
     * }
     */
    public static void s0$set(MemorySegment seg, byte x) {
        constants$79.const$3.set(seg, x);
    }
    public static byte s0$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s0$set(MemorySegment seg, long index, byte x) {
        constants$79.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s1$VH() {
        return constants$79.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s1;
     * }
     */
    public static byte s1$get(MemorySegment seg) {
        return (byte)constants$79.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s1;
     * }
     */
    public static void s1$set(MemorySegment seg, byte x) {
        constants$79.const$4.set(seg, x);
    }
    public static byte s1$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s1$set(MemorySegment seg, long index, byte x) {
        constants$79.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s2$VH() {
        return constants$79.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s2;
     * }
     */
    public static byte s2$get(MemorySegment seg) {
        return (byte)constants$79.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s2;
     * }
     */
    public static void s2$set(MemorySegment seg, byte x) {
        constants$79.const$5.set(seg, x);
    }
    public static byte s2$get(MemorySegment seg, long index) {
        return (byte)constants$79.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s2$set(MemorySegment seg, long index, byte x) {
        constants$79.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s3$VH() {
        return constants$80.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s3;
     * }
     */
    public static byte s3$get(MemorySegment seg) {
        return (byte)constants$80.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s3;
     * }
     */
    public static void s3$set(MemorySegment seg, byte x) {
        constants$80.const$0.set(seg, x);
    }
    public static byte s3$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s3$set(MemorySegment seg, long index, byte x) {
        constants$80.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s4$VH() {
        return constants$80.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s4;
     * }
     */
    public static byte s4$get(MemorySegment seg) {
        return (byte)constants$80.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s4;
     * }
     */
    public static void s4$set(MemorySegment seg, byte x) {
        constants$80.const$1.set(seg, x);
    }
    public static byte s4$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void s4$set(MemorySegment seg, long index, byte x) {
        constants$80.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s5$VH() {
        return constants$80.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s5;
     * }
     */
    public static byte s5$get(MemorySegment seg) {
        return (byte)constants$80.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s5;
     * }
     */
    public static void s5$set(MemorySegment seg, byte x) {
        constants$80.const$2.set(seg, x);
    }
    public static byte s5$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void s5$set(MemorySegment seg, long index, byte x) {
        constants$80.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s6$VH() {
        return constants$80.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s6;
     * }
     */
    public static byte s6$get(MemorySegment seg) {
        return (byte)constants$80.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s6;
     * }
     */
    public static void s6$set(MemorySegment seg, byte x) {
        constants$80.const$3.set(seg, x);
    }
    public static byte s6$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s6$set(MemorySegment seg, long index, byte x) {
        constants$80.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s7$VH() {
        return constants$80.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s7;
     * }
     */
    public static byte s7$get(MemorySegment seg) {
        return (byte)constants$80.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s7;
     * }
     */
    public static void s7$set(MemorySegment seg, byte x) {
        constants$80.const$4.set(seg, x);
    }
    public static byte s7$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s7$set(MemorySegment seg, long index, byte x) {
        constants$80.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s8$VH() {
        return constants$80.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s8;
     * }
     */
    public static byte s8$get(MemorySegment seg) {
        return (byte)constants$80.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s8;
     * }
     */
    public static void s8$set(MemorySegment seg, byte x) {
        constants$80.const$5.set(seg, x);
    }
    public static byte s8$get(MemorySegment seg, long index) {
        return (byte)constants$80.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s8$set(MemorySegment seg, long index, byte x) {
        constants$80.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s9$VH() {
        return constants$81.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar s9;
     * }
     */
    public static byte s9$get(MemorySegment seg) {
        return (byte)constants$81.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar s9;
     * }
     */
    public static void s9$set(MemorySegment seg, byte x) {
        constants$81.const$0.set(seg, x);
    }
    public static byte s9$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s9$set(MemorySegment seg, long index, byte x) {
        constants$81.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sA$VH() {
        return constants$81.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sA;
     * }
     */
    public static byte sA$get(MemorySegment seg) {
        return (byte)constants$81.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sA;
     * }
     */
    public static void sA$set(MemorySegment seg, byte x) {
        constants$81.const$1.set(seg, x);
    }
    public static byte sA$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void sA$set(MemorySegment seg, long index, byte x) {
        constants$81.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sB$VH() {
        return constants$81.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sB;
     * }
     */
    public static byte sB$get(MemorySegment seg) {
        return (byte)constants$81.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sB;
     * }
     */
    public static void sB$set(MemorySegment seg, byte x) {
        constants$81.const$2.set(seg, x);
    }
    public static byte sB$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void sB$set(MemorySegment seg, long index, byte x) {
        constants$81.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sC$VH() {
        return constants$81.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sC;
     * }
     */
    public static byte sC$get(MemorySegment seg) {
        return (byte)constants$81.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sC;
     * }
     */
    public static void sC$set(MemorySegment seg, byte x) {
        constants$81.const$3.set(seg, x);
    }
    public static byte sC$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sC$set(MemorySegment seg, long index, byte x) {
        constants$81.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sD$VH() {
        return constants$81.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sD;
     * }
     */
    public static byte sD$get(MemorySegment seg) {
        return (byte)constants$81.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sD;
     * }
     */
    public static void sD$set(MemorySegment seg, byte x) {
        constants$81.const$4.set(seg, x);
    }
    public static byte sD$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void sD$set(MemorySegment seg, long index, byte x) {
        constants$81.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sE$VH() {
        return constants$81.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sE;
     * }
     */
    public static byte sE$get(MemorySegment seg) {
        return (byte)constants$81.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sE;
     * }
     */
    public static void sE$set(MemorySegment seg, byte x) {
        constants$81.const$5.set(seg, x);
    }
    public static byte sE$get(MemorySegment seg, long index) {
        return (byte)constants$81.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void sE$set(MemorySegment seg, long index, byte x) {
        constants$81.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sF$VH() {
        return constants$82.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uchar sF;
     * }
     */
    public static byte sF$get(MemorySegment seg) {
        return (byte)constants$82.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uchar sF;
     * }
     */
    public static void sF$set(MemorySegment seg, byte x) {
        constants$82.const$0.set(seg, x);
    }
    public static byte sF$get(MemorySegment seg, long index) {
        return (byte)constants$82.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sF$set(MemorySegment seg, long index, byte x) {
        constants$82.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lo$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static MemorySegment hi$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static MemorySegment v8$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment v16$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


