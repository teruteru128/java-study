// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clSetKernelArgMemPointerINTEL_fn)(struct _cl_kernel* kernel,unsigned int arg_index,void* arg_value);
 * }
 */
public interface clSetKernelArgMemPointerINTEL_fn {

    int apply(java.lang.foreign.MemorySegment kernel, int arg_index, java.lang.foreign.MemorySegment arg_value);
    static MemorySegment allocate(clSetKernelArgMemPointerINTEL_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$249.const$3, fi, constants$191.const$5, scope);
    }
    static clSetKernelArgMemPointerINTEL_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _kernel, int _arg_index, java.lang.foreign.MemorySegment _arg_value) -> {
            try {
                return (int)constants$243.const$1.invokeExact(symbol, _kernel, _arg_index, _arg_value);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


