// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union {
 *     cl_int s[8];
 *     struct {
 *         cl_int x;
 *         cl_int y;
 *         cl_int z;
 *         cl_int w;
 *     };
 *     struct {
 *         cl_int s0;
 *         cl_int s1;
 *         cl_int s2;
 *         cl_int s3;
 *         cl_int s4;
 *         cl_int s5;
 *         cl_int s6;
 *         cl_int s7;
 *     };
 *     struct {
 *         cl_int4 lo;
 *         cl_int4 hi;
 *     };
 *     __cl_int2 v2[4];
 *     __cl_int4 v4[2];
 * };
 * }
 */
public class cl_int8 {

    public static MemoryLayout $LAYOUT() {
        return constants$115.const$0;
    }
    public static MemorySegment s$slice(MemorySegment seg) {
        return seg.asSlice(0, 32);
    }
    public static VarHandle x$VH() {
        return constants$115.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int x;
     * }
     */
    public static int x$get(MemorySegment seg) {
        return (int)constants$115.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int x;
     * }
     */
    public static void x$set(MemorySegment seg, int x) {
        constants$115.const$1.set(seg, x);
    }
    public static int x$get(MemorySegment seg, long index) {
        return (int)constants$115.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, int x) {
        constants$115.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$115.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int y;
     * }
     */
    public static int y$get(MemorySegment seg) {
        return (int)constants$115.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int y;
     * }
     */
    public static void y$set(MemorySegment seg, int x) {
        constants$115.const$2.set(seg, x);
    }
    public static int y$get(MemorySegment seg, long index) {
        return (int)constants$115.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, int x) {
        constants$115.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle z$VH() {
        return constants$115.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int z;
     * }
     */
    public static int z$get(MemorySegment seg) {
        return (int)constants$115.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int z;
     * }
     */
    public static void z$set(MemorySegment seg, int x) {
        constants$115.const$3.set(seg, x);
    }
    public static int z$get(MemorySegment seg, long index) {
        return (int)constants$115.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void z$set(MemorySegment seg, long index, int x) {
        constants$115.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle w$VH() {
        return constants$115.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int w;
     * }
     */
    public static int w$get(MemorySegment seg) {
        return (int)constants$115.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int w;
     * }
     */
    public static void w$set(MemorySegment seg, int x) {
        constants$115.const$4.set(seg, x);
    }
    public static int w$get(MemorySegment seg, long index) {
        return (int)constants$115.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void w$set(MemorySegment seg, long index, int x) {
        constants$115.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s0$VH() {
        return constants$115.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s0;
     * }
     */
    public static int s0$get(MemorySegment seg) {
        return (int)constants$115.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s0;
     * }
     */
    public static void s0$set(MemorySegment seg, int x) {
        constants$115.const$5.set(seg, x);
    }
    public static int s0$get(MemorySegment seg, long index) {
        return (int)constants$115.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s0$set(MemorySegment seg, long index, int x) {
        constants$115.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s1$VH() {
        return constants$116.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s1;
     * }
     */
    public static int s1$get(MemorySegment seg) {
        return (int)constants$116.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s1;
     * }
     */
    public static void s1$set(MemorySegment seg, int x) {
        constants$116.const$0.set(seg, x);
    }
    public static int s1$get(MemorySegment seg, long index) {
        return (int)constants$116.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s1$set(MemorySegment seg, long index, int x) {
        constants$116.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s2$VH() {
        return constants$116.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s2;
     * }
     */
    public static int s2$get(MemorySegment seg) {
        return (int)constants$116.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s2;
     * }
     */
    public static void s2$set(MemorySegment seg, int x) {
        constants$116.const$1.set(seg, x);
    }
    public static int s2$get(MemorySegment seg, long index) {
        return (int)constants$116.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void s2$set(MemorySegment seg, long index, int x) {
        constants$116.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s3$VH() {
        return constants$116.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s3;
     * }
     */
    public static int s3$get(MemorySegment seg) {
        return (int)constants$116.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s3;
     * }
     */
    public static void s3$set(MemorySegment seg, int x) {
        constants$116.const$2.set(seg, x);
    }
    public static int s3$get(MemorySegment seg, long index) {
        return (int)constants$116.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void s3$set(MemorySegment seg, long index, int x) {
        constants$116.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s4$VH() {
        return constants$116.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s4;
     * }
     */
    public static int s4$get(MemorySegment seg) {
        return (int)constants$116.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s4;
     * }
     */
    public static void s4$set(MemorySegment seg, int x) {
        constants$116.const$3.set(seg, x);
    }
    public static int s4$get(MemorySegment seg, long index) {
        return (int)constants$116.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s4$set(MemorySegment seg, long index, int x) {
        constants$116.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s5$VH() {
        return constants$116.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s5;
     * }
     */
    public static int s5$get(MemorySegment seg) {
        return (int)constants$116.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s5;
     * }
     */
    public static void s5$set(MemorySegment seg, int x) {
        constants$116.const$4.set(seg, x);
    }
    public static int s5$get(MemorySegment seg, long index) {
        return (int)constants$116.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s5$set(MemorySegment seg, long index, int x) {
        constants$116.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s6$VH() {
        return constants$116.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s6;
     * }
     */
    public static int s6$get(MemorySegment seg) {
        return (int)constants$116.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s6;
     * }
     */
    public static void s6$set(MemorySegment seg, int x) {
        constants$116.const$5.set(seg, x);
    }
    public static int s6$get(MemorySegment seg, long index) {
        return (int)constants$116.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s6$set(MemorySegment seg, long index, int x) {
        constants$116.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s7$VH() {
        return constants$117.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_int s7;
     * }
     */
    public static int s7$get(MemorySegment seg) {
        return (int)constants$117.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_int s7;
     * }
     */
    public static void s7$set(MemorySegment seg, int x) {
        constants$117.const$0.set(seg, x);
    }
    public static int s7$get(MemorySegment seg, long index) {
        return (int)constants$117.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s7$set(MemorySegment seg, long index, int x) {
        constants$117.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lo$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment hi$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static MemorySegment v2$slice(MemorySegment seg) {
        return seg.asSlice(0, 32);
    }
    public static MemorySegment v4$slice(MemorySegment seg) {
        return seg.asSlice(0, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


