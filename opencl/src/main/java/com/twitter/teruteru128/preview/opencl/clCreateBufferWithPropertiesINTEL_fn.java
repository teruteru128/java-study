// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _cl_mem* (*clCreateBufferWithPropertiesINTEL_fn)(struct _cl_context* context,unsigned long long* properties,unsigned long long flags,unsigned long long size,void* host_ptr,int* errcode_ret);
 * }
 */
public interface clCreateBufferWithPropertiesINTEL_fn {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment context, java.lang.foreign.MemorySegment properties, long flags, long size, java.lang.foreign.MemorySegment host_ptr, java.lang.foreign.MemorySegment errcode_ret);
    static MemorySegment allocate(clCreateBufferWithPropertiesINTEL_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$253.const$3, fi, constants$10.const$0, scope);
    }
    static clCreateBufferWithPropertiesINTEL_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _context, java.lang.foreign.MemorySegment _properties, long _flags, long _size, java.lang.foreign.MemorySegment _host_ptr, java.lang.foreign.MemorySegment _errcode_ret) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$253.const$4.invokeExact(symbol, _context, _properties, _flags, _size, _host_ptr, _errcode_ret);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


