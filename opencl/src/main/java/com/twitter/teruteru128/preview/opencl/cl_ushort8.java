// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union {
 *     cl_ushort s[8];
 *     struct {
 *         cl_ushort x;
 *         cl_ushort y;
 *         cl_ushort z;
 *         cl_ushort w;
 *     };
 *     struct {
 *         cl_ushort s0;
 *         cl_ushort s1;
 *         cl_ushort s2;
 *         cl_ushort s3;
 *         cl_ushort s4;
 *         cl_ushort s5;
 *         cl_ushort s6;
 *         cl_ushort s7;
 *     };
 *     struct {
 *         cl_ushort4 lo;
 *         cl_ushort4 hi;
 *     };
 *     __cl_ushort4 v4[2];
 *     __cl_ushort8 v8;
 * };
 * }
 */
public class cl_ushort8 {

    public static MemoryLayout $LAYOUT() {
        return constants$84.const$5;
    }
    public static MemorySegment s$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static VarHandle x$VH() {
        return constants$94.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort x;
     * }
     */
    public static short x$get(MemorySegment seg) {
        return (short)constants$94.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort x;
     * }
     */
    public static void x$set(MemorySegment seg, short x) {
        constants$94.const$5.set(seg, x);
    }
    public static short x$get(MemorySegment seg, long index) {
        return (short)constants$94.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, short x) {
        constants$94.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$95.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort y;
     * }
     */
    public static short y$get(MemorySegment seg) {
        return (short)constants$95.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort y;
     * }
     */
    public static void y$set(MemorySegment seg, short x) {
        constants$95.const$0.set(seg, x);
    }
    public static short y$get(MemorySegment seg, long index) {
        return (short)constants$95.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, short x) {
        constants$95.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle z$VH() {
        return constants$95.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort z;
     * }
     */
    public static short z$get(MemorySegment seg) {
        return (short)constants$95.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort z;
     * }
     */
    public static void z$set(MemorySegment seg, short x) {
        constants$95.const$1.set(seg, x);
    }
    public static short z$get(MemorySegment seg, long index) {
        return (short)constants$95.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void z$set(MemorySegment seg, long index, short x) {
        constants$95.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle w$VH() {
        return constants$95.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort w;
     * }
     */
    public static short w$get(MemorySegment seg) {
        return (short)constants$95.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort w;
     * }
     */
    public static void w$set(MemorySegment seg, short x) {
        constants$95.const$2.set(seg, x);
    }
    public static short w$get(MemorySegment seg, long index) {
        return (short)constants$95.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void w$set(MemorySegment seg, long index, short x) {
        constants$95.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s0$VH() {
        return constants$95.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s0;
     * }
     */
    public static short s0$get(MemorySegment seg) {
        return (short)constants$95.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s0;
     * }
     */
    public static void s0$set(MemorySegment seg, short x) {
        constants$95.const$3.set(seg, x);
    }
    public static short s0$get(MemorySegment seg, long index) {
        return (short)constants$95.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s0$set(MemorySegment seg, long index, short x) {
        constants$95.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s1$VH() {
        return constants$95.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s1;
     * }
     */
    public static short s1$get(MemorySegment seg) {
        return (short)constants$95.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s1;
     * }
     */
    public static void s1$set(MemorySegment seg, short x) {
        constants$95.const$4.set(seg, x);
    }
    public static short s1$get(MemorySegment seg, long index) {
        return (short)constants$95.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s1$set(MemorySegment seg, long index, short x) {
        constants$95.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s2$VH() {
        return constants$95.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s2;
     * }
     */
    public static short s2$get(MemorySegment seg) {
        return (short)constants$95.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s2;
     * }
     */
    public static void s2$set(MemorySegment seg, short x) {
        constants$95.const$5.set(seg, x);
    }
    public static short s2$get(MemorySegment seg, long index) {
        return (short)constants$95.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s2$set(MemorySegment seg, long index, short x) {
        constants$95.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s3$VH() {
        return constants$96.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s3;
     * }
     */
    public static short s3$get(MemorySegment seg) {
        return (short)constants$96.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s3;
     * }
     */
    public static void s3$set(MemorySegment seg, short x) {
        constants$96.const$0.set(seg, x);
    }
    public static short s3$get(MemorySegment seg, long index) {
        return (short)constants$96.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s3$set(MemorySegment seg, long index, short x) {
        constants$96.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s4$VH() {
        return constants$96.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s4;
     * }
     */
    public static short s4$get(MemorySegment seg) {
        return (short)constants$96.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s4;
     * }
     */
    public static void s4$set(MemorySegment seg, short x) {
        constants$96.const$1.set(seg, x);
    }
    public static short s4$get(MemorySegment seg, long index) {
        return (short)constants$96.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void s4$set(MemorySegment seg, long index, short x) {
        constants$96.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s5$VH() {
        return constants$96.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s5;
     * }
     */
    public static short s5$get(MemorySegment seg) {
        return (short)constants$96.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s5;
     * }
     */
    public static void s5$set(MemorySegment seg, short x) {
        constants$96.const$2.set(seg, x);
    }
    public static short s5$get(MemorySegment seg, long index) {
        return (short)constants$96.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void s5$set(MemorySegment seg, long index, short x) {
        constants$96.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s6$VH() {
        return constants$96.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s6;
     * }
     */
    public static short s6$get(MemorySegment seg) {
        return (short)constants$96.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s6;
     * }
     */
    public static void s6$set(MemorySegment seg, short x) {
        constants$96.const$3.set(seg, x);
    }
    public static short s6$get(MemorySegment seg, long index) {
        return (short)constants$96.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s6$set(MemorySegment seg, long index, short x) {
        constants$96.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s7$VH() {
        return constants$96.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_ushort s7;
     * }
     */
    public static short s7$get(MemorySegment seg) {
        return (short)constants$96.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_ushort s7;
     * }
     */
    public static void s7$set(MemorySegment seg, short x) {
        constants$96.const$4.set(seg, x);
    }
    public static short s7$get(MemorySegment seg, long index) {
        return (short)constants$96.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s7$set(MemorySegment seg, long index, short x) {
        constants$96.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lo$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static MemorySegment hi$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static MemorySegment v4$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment v8$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


