// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     DWORD bV4Size;
 *     LONG bV4Width;
 *     LONG bV4Height;
 *     WORD bV4Planes;
 *     WORD bV4BitCount;
 *     DWORD bV4V4Compression;
 *     DWORD bV4SizeImage;
 *     LONG bV4XPelsPerMeter;
 *     LONG bV4YPelsPerMeter;
 *     DWORD bV4ClrUsed;
 *     DWORD bV4ClrImportant;
 *     DWORD bV4RedMask;
 *     DWORD bV4GreenMask;
 *     DWORD bV4BlueMask;
 *     DWORD bV4AlphaMask;
 *     DWORD bV4CSType;
 *     CIEXYZTRIPLE bV4Endpoints;
 *     DWORD bV4GammaRed;
 *     DWORD bV4GammaGreen;
 *     DWORD bV4GammaBlue;
 * };
 * }
 */
public class BITMAPV4HEADER {

    public static MemoryLayout $LAYOUT() {
        return constants$897.const$5;
    }
    public static VarHandle bV4Size$VH() {
        return constants$898.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4Size;
     * }
     */
    public static int bV4Size$get(MemorySegment seg) {
        return (int)constants$898.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4Size;
     * }
     */
    public static void bV4Size$set(MemorySegment seg, int x) {
        constants$898.const$0.set(seg, x);
    }
    public static int bV4Size$get(MemorySegment seg, long index) {
        return (int)constants$898.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4Size$set(MemorySegment seg, long index, int x) {
        constants$898.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4Width$VH() {
        return constants$898.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG bV4Width;
     * }
     */
    public static int bV4Width$get(MemorySegment seg) {
        return (int)constants$898.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG bV4Width;
     * }
     */
    public static void bV4Width$set(MemorySegment seg, int x) {
        constants$898.const$1.set(seg, x);
    }
    public static int bV4Width$get(MemorySegment seg, long index) {
        return (int)constants$898.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4Width$set(MemorySegment seg, long index, int x) {
        constants$898.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4Height$VH() {
        return constants$898.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG bV4Height;
     * }
     */
    public static int bV4Height$get(MemorySegment seg) {
        return (int)constants$898.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG bV4Height;
     * }
     */
    public static void bV4Height$set(MemorySegment seg, int x) {
        constants$898.const$2.set(seg, x);
    }
    public static int bV4Height$get(MemorySegment seg, long index) {
        return (int)constants$898.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4Height$set(MemorySegment seg, long index, int x) {
        constants$898.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4Planes$VH() {
        return constants$898.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD bV4Planes;
     * }
     */
    public static short bV4Planes$get(MemorySegment seg) {
        return (short)constants$898.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD bV4Planes;
     * }
     */
    public static void bV4Planes$set(MemorySegment seg, short x) {
        constants$898.const$3.set(seg, x);
    }
    public static short bV4Planes$get(MemorySegment seg, long index) {
        return (short)constants$898.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4Planes$set(MemorySegment seg, long index, short x) {
        constants$898.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4BitCount$VH() {
        return constants$898.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD bV4BitCount;
     * }
     */
    public static short bV4BitCount$get(MemorySegment seg) {
        return (short)constants$898.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD bV4BitCount;
     * }
     */
    public static void bV4BitCount$set(MemorySegment seg, short x) {
        constants$898.const$4.set(seg, x);
    }
    public static short bV4BitCount$get(MemorySegment seg, long index) {
        return (short)constants$898.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4BitCount$set(MemorySegment seg, long index, short x) {
        constants$898.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4V4Compression$VH() {
        return constants$898.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4V4Compression;
     * }
     */
    public static int bV4V4Compression$get(MemorySegment seg) {
        return (int)constants$898.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4V4Compression;
     * }
     */
    public static void bV4V4Compression$set(MemorySegment seg, int x) {
        constants$898.const$5.set(seg, x);
    }
    public static int bV4V4Compression$get(MemorySegment seg, long index) {
        return (int)constants$898.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4V4Compression$set(MemorySegment seg, long index, int x) {
        constants$898.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4SizeImage$VH() {
        return constants$899.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4SizeImage;
     * }
     */
    public static int bV4SizeImage$get(MemorySegment seg) {
        return (int)constants$899.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4SizeImage;
     * }
     */
    public static void bV4SizeImage$set(MemorySegment seg, int x) {
        constants$899.const$0.set(seg, x);
    }
    public static int bV4SizeImage$get(MemorySegment seg, long index) {
        return (int)constants$899.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4SizeImage$set(MemorySegment seg, long index, int x) {
        constants$899.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4XPelsPerMeter$VH() {
        return constants$899.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG bV4XPelsPerMeter;
     * }
     */
    public static int bV4XPelsPerMeter$get(MemorySegment seg) {
        return (int)constants$899.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG bV4XPelsPerMeter;
     * }
     */
    public static void bV4XPelsPerMeter$set(MemorySegment seg, int x) {
        constants$899.const$1.set(seg, x);
    }
    public static int bV4XPelsPerMeter$get(MemorySegment seg, long index) {
        return (int)constants$899.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4XPelsPerMeter$set(MemorySegment seg, long index, int x) {
        constants$899.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4YPelsPerMeter$VH() {
        return constants$899.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG bV4YPelsPerMeter;
     * }
     */
    public static int bV4YPelsPerMeter$get(MemorySegment seg) {
        return (int)constants$899.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG bV4YPelsPerMeter;
     * }
     */
    public static void bV4YPelsPerMeter$set(MemorySegment seg, int x) {
        constants$899.const$2.set(seg, x);
    }
    public static int bV4YPelsPerMeter$get(MemorySegment seg, long index) {
        return (int)constants$899.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4YPelsPerMeter$set(MemorySegment seg, long index, int x) {
        constants$899.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4ClrUsed$VH() {
        return constants$899.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4ClrUsed;
     * }
     */
    public static int bV4ClrUsed$get(MemorySegment seg) {
        return (int)constants$899.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4ClrUsed;
     * }
     */
    public static void bV4ClrUsed$set(MemorySegment seg, int x) {
        constants$899.const$3.set(seg, x);
    }
    public static int bV4ClrUsed$get(MemorySegment seg, long index) {
        return (int)constants$899.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4ClrUsed$set(MemorySegment seg, long index, int x) {
        constants$899.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4ClrImportant$VH() {
        return constants$899.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4ClrImportant;
     * }
     */
    public static int bV4ClrImportant$get(MemorySegment seg) {
        return (int)constants$899.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4ClrImportant;
     * }
     */
    public static void bV4ClrImportant$set(MemorySegment seg, int x) {
        constants$899.const$4.set(seg, x);
    }
    public static int bV4ClrImportant$get(MemorySegment seg, long index) {
        return (int)constants$899.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4ClrImportant$set(MemorySegment seg, long index, int x) {
        constants$899.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4RedMask$VH() {
        return constants$899.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4RedMask;
     * }
     */
    public static int bV4RedMask$get(MemorySegment seg) {
        return (int)constants$899.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4RedMask;
     * }
     */
    public static void bV4RedMask$set(MemorySegment seg, int x) {
        constants$899.const$5.set(seg, x);
    }
    public static int bV4RedMask$get(MemorySegment seg, long index) {
        return (int)constants$899.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4RedMask$set(MemorySegment seg, long index, int x) {
        constants$899.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4GreenMask$VH() {
        return constants$900.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4GreenMask;
     * }
     */
    public static int bV4GreenMask$get(MemorySegment seg) {
        return (int)constants$900.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4GreenMask;
     * }
     */
    public static void bV4GreenMask$set(MemorySegment seg, int x) {
        constants$900.const$0.set(seg, x);
    }
    public static int bV4GreenMask$get(MemorySegment seg, long index) {
        return (int)constants$900.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4GreenMask$set(MemorySegment seg, long index, int x) {
        constants$900.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4BlueMask$VH() {
        return constants$900.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4BlueMask;
     * }
     */
    public static int bV4BlueMask$get(MemorySegment seg) {
        return (int)constants$900.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4BlueMask;
     * }
     */
    public static void bV4BlueMask$set(MemorySegment seg, int x) {
        constants$900.const$1.set(seg, x);
    }
    public static int bV4BlueMask$get(MemorySegment seg, long index) {
        return (int)constants$900.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4BlueMask$set(MemorySegment seg, long index, int x) {
        constants$900.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4AlphaMask$VH() {
        return constants$900.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4AlphaMask;
     * }
     */
    public static int bV4AlphaMask$get(MemorySegment seg) {
        return (int)constants$900.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4AlphaMask;
     * }
     */
    public static void bV4AlphaMask$set(MemorySegment seg, int x) {
        constants$900.const$2.set(seg, x);
    }
    public static int bV4AlphaMask$get(MemorySegment seg, long index) {
        return (int)constants$900.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4AlphaMask$set(MemorySegment seg, long index, int x) {
        constants$900.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4CSType$VH() {
        return constants$900.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4CSType;
     * }
     */
    public static int bV4CSType$get(MemorySegment seg) {
        return (int)constants$900.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4CSType;
     * }
     */
    public static void bV4CSType$set(MemorySegment seg, int x) {
        constants$900.const$3.set(seg, x);
    }
    public static int bV4CSType$get(MemorySegment seg, long index) {
        return (int)constants$900.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4CSType$set(MemorySegment seg, long index, int x) {
        constants$900.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment bV4Endpoints$slice(MemorySegment seg) {
        return seg.asSlice(60, 36);
    }
    public static VarHandle bV4GammaRed$VH() {
        return constants$900.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4GammaRed;
     * }
     */
    public static int bV4GammaRed$get(MemorySegment seg) {
        return (int)constants$900.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4GammaRed;
     * }
     */
    public static void bV4GammaRed$set(MemorySegment seg, int x) {
        constants$900.const$4.set(seg, x);
    }
    public static int bV4GammaRed$get(MemorySegment seg, long index) {
        return (int)constants$900.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4GammaRed$set(MemorySegment seg, long index, int x) {
        constants$900.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4GammaGreen$VH() {
        return constants$900.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4GammaGreen;
     * }
     */
    public static int bV4GammaGreen$get(MemorySegment seg) {
        return (int)constants$900.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4GammaGreen;
     * }
     */
    public static void bV4GammaGreen$set(MemorySegment seg, int x) {
        constants$900.const$5.set(seg, x);
    }
    public static int bV4GammaGreen$get(MemorySegment seg, long index) {
        return (int)constants$900.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4GammaGreen$set(MemorySegment seg, long index, int x) {
        constants$900.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bV4GammaBlue$VH() {
        return constants$901.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD bV4GammaBlue;
     * }
     */
    public static int bV4GammaBlue$get(MemorySegment seg) {
        return (int)constants$901.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD bV4GammaBlue;
     * }
     */
    public static void bV4GammaBlue$set(MemorySegment seg, int x) {
        constants$901.const$0.set(seg, x);
    }
    public static int bV4GammaBlue$get(MemorySegment seg, long index) {
        return (int)constants$901.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bV4GammaBlue$set(MemorySegment seg, long index, int x) {
        constants$901.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


