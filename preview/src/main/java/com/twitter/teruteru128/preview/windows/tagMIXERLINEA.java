// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMIXERLINEA {
 *     DWORD cbStruct;
 *     DWORD dwDestination;
 *     DWORD dwSource;
 *     DWORD dwLineID;
 *     DWORD fdwLine;
 *     DWORD_PTR dwUser;
 *     DWORD dwComponentType;
 *     DWORD cChannels;
 *     DWORD cConnections;
 *     DWORD cControls;
 *     CHAR szShortName[16];
 *     CHAR szName[64];
 *     struct  Target;
 * };
 * }
 */
public class tagMIXERLINEA {

    public static MemoryLayout $LAYOUT() {
        return constants$1662.const$2;
    }
    public static VarHandle cbStruct$VH() {
        return constants$1662.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbStruct;
     * }
     */
    public static int cbStruct$get(MemorySegment seg) {
        return (int)constants$1662.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbStruct;
     * }
     */
    public static void cbStruct$set(MemorySegment seg, int x) {
        constants$1662.const$3.set(seg, x);
    }
    public static int cbStruct$get(MemorySegment seg, long index) {
        return (int)constants$1662.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cbStruct$set(MemorySegment seg, long index, int x) {
        constants$1662.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDestination$VH() {
        return constants$1662.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDestination;
     * }
     */
    public static int dwDestination$get(MemorySegment seg) {
        return (int)constants$1662.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDestination;
     * }
     */
    public static void dwDestination$set(MemorySegment seg, int x) {
        constants$1662.const$4.set(seg, x);
    }
    public static int dwDestination$get(MemorySegment seg, long index) {
        return (int)constants$1662.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDestination$set(MemorySegment seg, long index, int x) {
        constants$1662.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwSource$VH() {
        return constants$1662.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSource;
     * }
     */
    public static int dwSource$get(MemorySegment seg) {
        return (int)constants$1662.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSource;
     * }
     */
    public static void dwSource$set(MemorySegment seg, int x) {
        constants$1662.const$5.set(seg, x);
    }
    public static int dwSource$get(MemorySegment seg, long index) {
        return (int)constants$1662.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSource$set(MemorySegment seg, long index, int x) {
        constants$1662.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwLineID$VH() {
        return constants$1663.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLineID;
     * }
     */
    public static int dwLineID$get(MemorySegment seg) {
        return (int)constants$1663.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLineID;
     * }
     */
    public static void dwLineID$set(MemorySegment seg, int x) {
        constants$1663.const$0.set(seg, x);
    }
    public static int dwLineID$get(MemorySegment seg, long index) {
        return (int)constants$1663.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLineID$set(MemorySegment seg, long index, int x) {
        constants$1663.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fdwLine$VH() {
        return constants$1663.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD fdwLine;
     * }
     */
    public static int fdwLine$get(MemorySegment seg) {
        return (int)constants$1663.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD fdwLine;
     * }
     */
    public static void fdwLine$set(MemorySegment seg, int x) {
        constants$1663.const$1.set(seg, x);
    }
    public static int fdwLine$get(MemorySegment seg, long index) {
        return (int)constants$1663.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void fdwLine$set(MemorySegment seg, long index, int x) {
        constants$1663.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwUser$VH() {
        return constants$1663.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD_PTR dwUser;
     * }
     */
    public static long dwUser$get(MemorySegment seg) {
        return (long)constants$1663.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD_PTR dwUser;
     * }
     */
    public static void dwUser$set(MemorySegment seg, long x) {
        constants$1663.const$2.set(seg, x);
    }
    public static long dwUser$get(MemorySegment seg, long index) {
        return (long)constants$1663.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwUser$set(MemorySegment seg, long index, long x) {
        constants$1663.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwComponentType$VH() {
        return constants$1663.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwComponentType;
     * }
     */
    public static int dwComponentType$get(MemorySegment seg) {
        return (int)constants$1663.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwComponentType;
     * }
     */
    public static void dwComponentType$set(MemorySegment seg, int x) {
        constants$1663.const$3.set(seg, x);
    }
    public static int dwComponentType$get(MemorySegment seg, long index) {
        return (int)constants$1663.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwComponentType$set(MemorySegment seg, long index, int x) {
        constants$1663.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cChannels$VH() {
        return constants$1663.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cChannels;
     * }
     */
    public static int cChannels$get(MemorySegment seg) {
        return (int)constants$1663.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cChannels;
     * }
     */
    public static void cChannels$set(MemorySegment seg, int x) {
        constants$1663.const$4.set(seg, x);
    }
    public static int cChannels$get(MemorySegment seg, long index) {
        return (int)constants$1663.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cChannels$set(MemorySegment seg, long index, int x) {
        constants$1663.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cConnections$VH() {
        return constants$1663.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cConnections;
     * }
     */
    public static int cConnections$get(MemorySegment seg) {
        return (int)constants$1663.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cConnections;
     * }
     */
    public static void cConnections$set(MemorySegment seg, int x) {
        constants$1663.const$5.set(seg, x);
    }
    public static int cConnections$get(MemorySegment seg, long index) {
        return (int)constants$1663.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cConnections$set(MemorySegment seg, long index, int x) {
        constants$1663.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cControls$VH() {
        return constants$1664.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cControls;
     * }
     */
    public static int cControls$get(MemorySegment seg) {
        return (int)constants$1664.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cControls;
     * }
     */
    public static void cControls$set(MemorySegment seg, int x) {
        constants$1664.const$0.set(seg, x);
    }
    public static int cControls$get(MemorySegment seg, long index) {
        return (int)constants$1664.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cControls$set(MemorySegment seg, long index, int x) {
        constants$1664.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szShortName$slice(MemorySegment seg) {
        return seg.asSlice(44, 16);
    }
    public static MemorySegment szName$slice(MemorySegment seg) {
        return seg.asSlice(60, 64);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD dwType;
     *     DWORD dwDeviceID;
     *     WORD wMid;
     *     WORD wPid;
     *     MMVERSION vDriverVersion;
     *     CHAR szPname[32];
     * };
     * }
     */
    public static final class Target {

        // Suppresses default constructor, ensuring non-instantiability.
        private Target() {}
        public static MemoryLayout $LAYOUT() {
            return constants$1664.const$1;
        }
        public static VarHandle dwType$VH() {
            return constants$1664.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD dwType;
         * }
         */
        public static int dwType$get(MemorySegment seg) {
            return (int)constants$1664.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD dwType;
         * }
         */
        public static void dwType$set(MemorySegment seg, int x) {
            constants$1664.const$2.set(seg, x);
        }
        public static int dwType$get(MemorySegment seg, long index) {
            return (int)constants$1664.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void dwType$set(MemorySegment seg, long index, int x) {
            constants$1664.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDeviceID$VH() {
            return constants$1664.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD dwDeviceID;
         * }
         */
        public static int dwDeviceID$get(MemorySegment seg) {
            return (int)constants$1664.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD dwDeviceID;
         * }
         */
        public static void dwDeviceID$set(MemorySegment seg, int x) {
            constants$1664.const$3.set(seg, x);
        }
        public static int dwDeviceID$get(MemorySegment seg, long index) {
            return (int)constants$1664.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void dwDeviceID$set(MemorySegment seg, long index, int x) {
            constants$1664.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wMid$VH() {
            return constants$1664.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * WORD wMid;
         * }
         */
        public static short wMid$get(MemorySegment seg) {
            return (short)constants$1664.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * WORD wMid;
         * }
         */
        public static void wMid$set(MemorySegment seg, short x) {
            constants$1664.const$4.set(seg, x);
        }
        public static short wMid$get(MemorySegment seg, long index) {
            return (short)constants$1664.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void wMid$set(MemorySegment seg, long index, short x) {
            constants$1664.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle wPid$VH() {
            return constants$1664.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * WORD wPid;
         * }
         */
        public static short wPid$get(MemorySegment seg) {
            return (short)constants$1664.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * WORD wPid;
         * }
         */
        public static void wPid$set(MemorySegment seg, short x) {
            constants$1664.const$5.set(seg, x);
        }
        public static short wPid$get(MemorySegment seg, long index) {
            return (short)constants$1664.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void wPid$set(MemorySegment seg, long index, short x) {
            constants$1664.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle vDriverVersion$VH() {
            return constants$1665.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * MMVERSION vDriverVersion;
         * }
         */
        public static int vDriverVersion$get(MemorySegment seg) {
            return (int)constants$1665.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * MMVERSION vDriverVersion;
         * }
         */
        public static void vDriverVersion$set(MemorySegment seg, int x) {
            constants$1665.const$0.set(seg, x);
        }
        public static int vDriverVersion$get(MemorySegment seg, long index) {
            return (int)constants$1665.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void vDriverVersion$set(MemorySegment seg, long index, int x) {
            constants$1665.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment szPname$slice(MemorySegment seg) {
            return seg.asSlice(16, 32);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment Target$slice(MemorySegment seg) {
        return seg.asSlice(124, 48);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


