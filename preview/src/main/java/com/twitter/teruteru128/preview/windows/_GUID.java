// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _GUID {
 *     unsigned long Data1;
 *     unsigned short Data2;
 *     unsigned short Data3;
 *     unsigned char Data4[8];
 * };
 * }
 */
public class _GUID {

    public static MemoryLayout $LAYOUT() {
        return constants$27.const$0;
    }
    public static VarHandle Data1$VH() {
        return constants$27.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long Data1;
     * }
     */
    public static int Data1$get(MemorySegment seg) {
        return (int)constants$27.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long Data1;
     * }
     */
    public static void Data1$set(MemorySegment seg, int x) {
        constants$27.const$1.set(seg, x);
    }
    public static int Data1$get(MemorySegment seg, long index) {
        return (int)constants$27.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Data1$set(MemorySegment seg, long index, int x) {
        constants$27.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Data2$VH() {
        return constants$27.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short Data2;
     * }
     */
    public static short Data2$get(MemorySegment seg) {
        return (short)constants$27.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short Data2;
     * }
     */
    public static void Data2$set(MemorySegment seg, short x) {
        constants$27.const$2.set(seg, x);
    }
    public static short Data2$get(MemorySegment seg, long index) {
        return (short)constants$27.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Data2$set(MemorySegment seg, long index, short x) {
        constants$27.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Data3$VH() {
        return constants$27.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short Data3;
     * }
     */
    public static short Data3$get(MemorySegment seg) {
        return (short)constants$27.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short Data3;
     * }
     */
    public static void Data3$set(MemorySegment seg, short x) {
        constants$27.const$3.set(seg, x);
    }
    public static short Data3$get(MemorySegment seg, long index) {
        return (short)constants$27.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Data3$set(MemorySegment seg, long index, short x) {
        constants$27.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Data4$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


