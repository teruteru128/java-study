// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {
 *     DWORDLONG Offset;
 *     DWORD NameFlags;
 *     LONGLONG FileId;
 *     DWORD Reserved1;
 *     DWORD Reserved2;
 *     LONGLONG Reserved3;
 *     WCHAR FileName[1];
 * };
 * }
 */
public class _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {

    public static MemoryLayout $LAYOUT() {
        return constants$2656.const$1;
    }
    public static VarHandle Offset$VH() {
        return constants$2656.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG Offset;
     * }
     */
    public static long Offset$get(MemorySegment seg) {
        return (long)constants$2656.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG Offset;
     * }
     */
    public static void Offset$set(MemorySegment seg, long x) {
        constants$2656.const$2.set(seg, x);
    }
    public static long Offset$get(MemorySegment seg, long index) {
        return (long)constants$2656.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Offset$set(MemorySegment seg, long index, long x) {
        constants$2656.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NameFlags$VH() {
        return constants$2656.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD NameFlags;
     * }
     */
    public static int NameFlags$get(MemorySegment seg) {
        return (int)constants$2656.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD NameFlags;
     * }
     */
    public static void NameFlags$set(MemorySegment seg, int x) {
        constants$2656.const$3.set(seg, x);
    }
    public static int NameFlags$get(MemorySegment seg, long index) {
        return (int)constants$2656.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void NameFlags$set(MemorySegment seg, long index, int x) {
        constants$2656.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FileId$VH() {
        return constants$2656.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG FileId;
     * }
     */
    public static long FileId$get(MemorySegment seg) {
        return (long)constants$2656.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG FileId;
     * }
     */
    public static void FileId$set(MemorySegment seg, long x) {
        constants$2656.const$4.set(seg, x);
    }
    public static long FileId$get(MemorySegment seg, long index) {
        return (long)constants$2656.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void FileId$set(MemorySegment seg, long index, long x) {
        constants$2656.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved1$VH() {
        return constants$2656.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static int Reserved1$get(MemorySegment seg) {
        return (int)constants$2656.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static void Reserved1$set(MemorySegment seg, int x) {
        constants$2656.const$5.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)constants$2656.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        constants$2656.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved2$VH() {
        return constants$2657.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved2;
     * }
     */
    public static int Reserved2$get(MemorySegment seg) {
        return (int)constants$2657.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved2;
     * }
     */
    public static void Reserved2$set(MemorySegment seg, int x) {
        constants$2657.const$0.set(seg, x);
    }
    public static int Reserved2$get(MemorySegment seg, long index) {
        return (int)constants$2657.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, int x) {
        constants$2657.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved3$VH() {
        return constants$2657.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG Reserved3;
     * }
     */
    public static long Reserved3$get(MemorySegment seg) {
        return (long)constants$2657.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG Reserved3;
     * }
     */
    public static void Reserved3$set(MemorySegment seg, long x) {
        constants$2657.const$1.set(seg, x);
    }
    public static long Reserved3$get(MemorySegment seg, long index) {
        return (long)constants$2657.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved3$set(MemorySegment seg, long index, long x) {
        constants$2657.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment FileName$slice(MemorySegment seg) {
        return seg.asSlice(40, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


