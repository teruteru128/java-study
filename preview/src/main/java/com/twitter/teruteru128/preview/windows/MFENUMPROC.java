// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*MFENUMPROC)(struct HDC__* hdc,struct tagHANDLETABLE* lpht,struct tagMETARECORD* lpMR,int nObj,long long param);
 * }
 */
public interface MFENUMPROC {

    int apply(java.lang.foreign.MemorySegment hdc, java.lang.foreign.MemorySegment lpht, java.lang.foreign.MemorySegment lpmr, int nHandles, long data);
    static MemorySegment allocate(MFENUMPROC fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1045.const$0, fi, constants$1044.const$5, scope);
    }
    static MFENUMPROC ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _hdc, java.lang.foreign.MemorySegment _lpht, java.lang.foreign.MemorySegment _lpmr, int _nHandles, long _data) -> {
            try {
                return (int)constants$1045.const$1.invokeExact(symbol, _hdc, _lpht, _lpmr, _nHandles, _data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


