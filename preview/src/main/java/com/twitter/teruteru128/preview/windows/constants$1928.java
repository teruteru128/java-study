// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1928 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1928() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(16, JAVA_BYTE).withName("Key"),
        MemoryLayout.sequenceLayout(256, JAVA_BYTE).withName("SBox"),
        JAVA_BYTE.withName("i"),
        JAVA_BYTE.withName("j")
    ).withName("_CRYPT_RC4_KEY_STATE");
    static final VarHandle const$1 = constants$1928.const$0.varHandle(MemoryLayout.PathElement.groupElement("i"));
    static final VarHandle const$2 = constants$1928.const$0.varHandle(MemoryLayout.PathElement.groupElement("j"));
    static final StructLayout const$3 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Key"),
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("IV"),
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Feedback")
    ).withName("_CRYPT_DES_KEY_STATE");
    static final StructLayout const$4 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(24, JAVA_BYTE).withName("Key"),
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("IV"),
        MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Feedback")
    ).withName("_CRYPT_3DES_KEY_STATE");
    static final StructLayout const$5 = MemoryLayout.structLayout(
        MemoryLayout.sequenceLayout(16, JAVA_BYTE).withName("Key"),
        MemoryLayout.sequenceLayout(16, JAVA_BYTE).withName("IV"),
        MemoryLayout.sequenceLayout(11, MemoryLayout.sequenceLayout(16, JAVA_BYTE)).withName("EncryptionState"),
        MemoryLayout.sequenceLayout(11, MemoryLayout.sequenceLayout(16, JAVA_BYTE)).withName("DecryptionState"),
        MemoryLayout.sequenceLayout(16, JAVA_BYTE).withName("Feedback")
    ).withName("_CRYPT_AES_128_KEY_STATE");
}


