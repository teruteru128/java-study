// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _FILESYSTEM_STATISTICS {
 *     WORD FileSystemType;
 *     WORD Version;
 *     DWORD SizeOfCompleteStructure;
 *     DWORD UserFileReads;
 *     DWORD UserFileReadBytes;
 *     DWORD UserDiskReads;
 *     DWORD UserFileWrites;
 *     DWORD UserFileWriteBytes;
 *     DWORD UserDiskWrites;
 *     DWORD MetaDataReads;
 *     DWORD MetaDataReadBytes;
 *     DWORD MetaDataDiskReads;
 *     DWORD MetaDataWrites;
 *     DWORD MetaDataWriteBytes;
 *     DWORD MetaDataDiskWrites;
 * };
 * }
 */
public class _FILESYSTEM_STATISTICS {

    public static MemoryLayout $LAYOUT() {
        return constants$2603.const$2;
    }
    public static VarHandle FileSystemType$VH() {
        return constants$2603.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD FileSystemType;
     * }
     */
    public static short FileSystemType$get(MemorySegment seg) {
        return (short)constants$2603.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD FileSystemType;
     * }
     */
    public static void FileSystemType$set(MemorySegment seg, short x) {
        constants$2603.const$3.set(seg, x);
    }
    public static short FileSystemType$get(MemorySegment seg, long index) {
        return (short)constants$2603.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void FileSystemType$set(MemorySegment seg, long index, short x) {
        constants$2603.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Version$VH() {
        return constants$2603.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Version;
     * }
     */
    public static short Version$get(MemorySegment seg) {
        return (short)constants$2603.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Version;
     * }
     */
    public static void Version$set(MemorySegment seg, short x) {
        constants$2603.const$4.set(seg, x);
    }
    public static short Version$get(MemorySegment seg, long index) {
        return (short)constants$2603.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, short x) {
        constants$2603.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SizeOfCompleteStructure$VH() {
        return constants$2603.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD SizeOfCompleteStructure;
     * }
     */
    public static int SizeOfCompleteStructure$get(MemorySegment seg) {
        return (int)constants$2603.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD SizeOfCompleteStructure;
     * }
     */
    public static void SizeOfCompleteStructure$set(MemorySegment seg, int x) {
        constants$2603.const$5.set(seg, x);
    }
    public static int SizeOfCompleteStructure$get(MemorySegment seg, long index) {
        return (int)constants$2603.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void SizeOfCompleteStructure$set(MemorySegment seg, long index, int x) {
        constants$2603.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserFileReads$VH() {
        return constants$2604.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserFileReads;
     * }
     */
    public static int UserFileReads$get(MemorySegment seg) {
        return (int)constants$2604.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserFileReads;
     * }
     */
    public static void UserFileReads$set(MemorySegment seg, int x) {
        constants$2604.const$0.set(seg, x);
    }
    public static int UserFileReads$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void UserFileReads$set(MemorySegment seg, long index, int x) {
        constants$2604.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserFileReadBytes$VH() {
        return constants$2604.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserFileReadBytes;
     * }
     */
    public static int UserFileReadBytes$get(MemorySegment seg) {
        return (int)constants$2604.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserFileReadBytes;
     * }
     */
    public static void UserFileReadBytes$set(MemorySegment seg, int x) {
        constants$2604.const$1.set(seg, x);
    }
    public static int UserFileReadBytes$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void UserFileReadBytes$set(MemorySegment seg, long index, int x) {
        constants$2604.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserDiskReads$VH() {
        return constants$2604.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserDiskReads;
     * }
     */
    public static int UserDiskReads$get(MemorySegment seg) {
        return (int)constants$2604.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserDiskReads;
     * }
     */
    public static void UserDiskReads$set(MemorySegment seg, int x) {
        constants$2604.const$2.set(seg, x);
    }
    public static int UserDiskReads$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void UserDiskReads$set(MemorySegment seg, long index, int x) {
        constants$2604.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserFileWrites$VH() {
        return constants$2604.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserFileWrites;
     * }
     */
    public static int UserFileWrites$get(MemorySegment seg) {
        return (int)constants$2604.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserFileWrites;
     * }
     */
    public static void UserFileWrites$set(MemorySegment seg, int x) {
        constants$2604.const$3.set(seg, x);
    }
    public static int UserFileWrites$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void UserFileWrites$set(MemorySegment seg, long index, int x) {
        constants$2604.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserFileWriteBytes$VH() {
        return constants$2604.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserFileWriteBytes;
     * }
     */
    public static int UserFileWriteBytes$get(MemorySegment seg) {
        return (int)constants$2604.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserFileWriteBytes;
     * }
     */
    public static void UserFileWriteBytes$set(MemorySegment seg, int x) {
        constants$2604.const$4.set(seg, x);
    }
    public static int UserFileWriteBytes$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void UserFileWriteBytes$set(MemorySegment seg, long index, int x) {
        constants$2604.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserDiskWrites$VH() {
        return constants$2604.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD UserDiskWrites;
     * }
     */
    public static int UserDiskWrites$get(MemorySegment seg) {
        return (int)constants$2604.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD UserDiskWrites;
     * }
     */
    public static void UserDiskWrites$set(MemorySegment seg, int x) {
        constants$2604.const$5.set(seg, x);
    }
    public static int UserDiskWrites$get(MemorySegment seg, long index) {
        return (int)constants$2604.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void UserDiskWrites$set(MemorySegment seg, long index, int x) {
        constants$2604.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataReads$VH() {
        return constants$2605.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataReads;
     * }
     */
    public static int MetaDataReads$get(MemorySegment seg) {
        return (int)constants$2605.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataReads;
     * }
     */
    public static void MetaDataReads$set(MemorySegment seg, int x) {
        constants$2605.const$0.set(seg, x);
    }
    public static int MetaDataReads$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataReads$set(MemorySegment seg, long index, int x) {
        constants$2605.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataReadBytes$VH() {
        return constants$2605.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataReadBytes;
     * }
     */
    public static int MetaDataReadBytes$get(MemorySegment seg) {
        return (int)constants$2605.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataReadBytes;
     * }
     */
    public static void MetaDataReadBytes$set(MemorySegment seg, int x) {
        constants$2605.const$1.set(seg, x);
    }
    public static int MetaDataReadBytes$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataReadBytes$set(MemorySegment seg, long index, int x) {
        constants$2605.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataDiskReads$VH() {
        return constants$2605.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataDiskReads;
     * }
     */
    public static int MetaDataDiskReads$get(MemorySegment seg) {
        return (int)constants$2605.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataDiskReads;
     * }
     */
    public static void MetaDataDiskReads$set(MemorySegment seg, int x) {
        constants$2605.const$2.set(seg, x);
    }
    public static int MetaDataDiskReads$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataDiskReads$set(MemorySegment seg, long index, int x) {
        constants$2605.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataWrites$VH() {
        return constants$2605.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataWrites;
     * }
     */
    public static int MetaDataWrites$get(MemorySegment seg) {
        return (int)constants$2605.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataWrites;
     * }
     */
    public static void MetaDataWrites$set(MemorySegment seg, int x) {
        constants$2605.const$3.set(seg, x);
    }
    public static int MetaDataWrites$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataWrites$set(MemorySegment seg, long index, int x) {
        constants$2605.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataWriteBytes$VH() {
        return constants$2605.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataWriteBytes;
     * }
     */
    public static int MetaDataWriteBytes$get(MemorySegment seg) {
        return (int)constants$2605.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataWriteBytes;
     * }
     */
    public static void MetaDataWriteBytes$set(MemorySegment seg, int x) {
        constants$2605.const$4.set(seg, x);
    }
    public static int MetaDataWriteBytes$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataWriteBytes$set(MemorySegment seg, long index, int x) {
        constants$2605.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MetaDataDiskWrites$VH() {
        return constants$2605.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MetaDataDiskWrites;
     * }
     */
    public static int MetaDataDiskWrites$get(MemorySegment seg) {
        return (int)constants$2605.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MetaDataDiskWrites;
     * }
     */
    public static void MetaDataDiskWrites$set(MemorySegment seg, int x) {
        constants$2605.const$5.set(seg, x);
    }
    public static int MetaDataDiskWrites$get(MemorySegment seg, long index) {
        return (int)constants$2605.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MetaDataDiskWrites$set(MemorySegment seg, long index, int x) {
        constants$2605.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


