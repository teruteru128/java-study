// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
 *     DWORD dwFlags;
 *     DWORD ulFormatVersion;
 *     DWORD ulAssemblyCount;
 *     DWORD ulRootManifestPathType;
 *     DWORD ulRootManifestPathChars;
 *     DWORD ulRootConfigurationPathType;
 *     DWORD ulRootConfigurationPathChars;
 *     DWORD ulAppDirPathType;
 *     DWORD ulAppDirPathChars;
 *     PCWSTR lpRootManifestPath;
 *     PCWSTR lpRootConfigurationPath;
 *     PCWSTR lpAppDirPath;
 * };
 * }
 */
public class _ACTIVATION_CONTEXT_DETAILED_INFORMATION {

    public static MemoryLayout $LAYOUT() {
        return constants$504.const$3;
    }
    public static VarHandle dwFlags$VH() {
        return constants$504.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$504.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$504.const$4.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$504.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$504.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulFormatVersion$VH() {
        return constants$504.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulFormatVersion;
     * }
     */
    public static int ulFormatVersion$get(MemorySegment seg) {
        return (int)constants$504.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulFormatVersion;
     * }
     */
    public static void ulFormatVersion$set(MemorySegment seg, int x) {
        constants$504.const$5.set(seg, x);
    }
    public static int ulFormatVersion$get(MemorySegment seg, long index) {
        return (int)constants$504.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ulFormatVersion$set(MemorySegment seg, long index, int x) {
        constants$504.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulAssemblyCount$VH() {
        return constants$505.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulAssemblyCount;
     * }
     */
    public static int ulAssemblyCount$get(MemorySegment seg) {
        return (int)constants$505.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulAssemblyCount;
     * }
     */
    public static void ulAssemblyCount$set(MemorySegment seg, int x) {
        constants$505.const$0.set(seg, x);
    }
    public static int ulAssemblyCount$get(MemorySegment seg, long index) {
        return (int)constants$505.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ulAssemblyCount$set(MemorySegment seg, long index, int x) {
        constants$505.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulRootManifestPathType$VH() {
        return constants$505.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulRootManifestPathType;
     * }
     */
    public static int ulRootManifestPathType$get(MemorySegment seg) {
        return (int)constants$505.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulRootManifestPathType;
     * }
     */
    public static void ulRootManifestPathType$set(MemorySegment seg, int x) {
        constants$505.const$1.set(seg, x);
    }
    public static int ulRootManifestPathType$get(MemorySegment seg, long index) {
        return (int)constants$505.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ulRootManifestPathType$set(MemorySegment seg, long index, int x) {
        constants$505.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulRootManifestPathChars$VH() {
        return constants$505.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulRootManifestPathChars;
     * }
     */
    public static int ulRootManifestPathChars$get(MemorySegment seg) {
        return (int)constants$505.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulRootManifestPathChars;
     * }
     */
    public static void ulRootManifestPathChars$set(MemorySegment seg, int x) {
        constants$505.const$2.set(seg, x);
    }
    public static int ulRootManifestPathChars$get(MemorySegment seg, long index) {
        return (int)constants$505.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ulRootManifestPathChars$set(MemorySegment seg, long index, int x) {
        constants$505.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulRootConfigurationPathType$VH() {
        return constants$505.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulRootConfigurationPathType;
     * }
     */
    public static int ulRootConfigurationPathType$get(MemorySegment seg) {
        return (int)constants$505.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulRootConfigurationPathType;
     * }
     */
    public static void ulRootConfigurationPathType$set(MemorySegment seg, int x) {
        constants$505.const$3.set(seg, x);
    }
    public static int ulRootConfigurationPathType$get(MemorySegment seg, long index) {
        return (int)constants$505.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ulRootConfigurationPathType$set(MemorySegment seg, long index, int x) {
        constants$505.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulRootConfigurationPathChars$VH() {
        return constants$505.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulRootConfigurationPathChars;
     * }
     */
    public static int ulRootConfigurationPathChars$get(MemorySegment seg) {
        return (int)constants$505.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulRootConfigurationPathChars;
     * }
     */
    public static void ulRootConfigurationPathChars$set(MemorySegment seg, int x) {
        constants$505.const$4.set(seg, x);
    }
    public static int ulRootConfigurationPathChars$get(MemorySegment seg, long index) {
        return (int)constants$505.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ulRootConfigurationPathChars$set(MemorySegment seg, long index, int x) {
        constants$505.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulAppDirPathType$VH() {
        return constants$505.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulAppDirPathType;
     * }
     */
    public static int ulAppDirPathType$get(MemorySegment seg) {
        return (int)constants$505.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulAppDirPathType;
     * }
     */
    public static void ulAppDirPathType$set(MemorySegment seg, int x) {
        constants$505.const$5.set(seg, x);
    }
    public static int ulAppDirPathType$get(MemorySegment seg, long index) {
        return (int)constants$505.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ulAppDirPathType$set(MemorySegment seg, long index, int x) {
        constants$505.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulAppDirPathChars$VH() {
        return constants$506.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ulAppDirPathChars;
     * }
     */
    public static int ulAppDirPathChars$get(MemorySegment seg) {
        return (int)constants$506.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ulAppDirPathChars;
     * }
     */
    public static void ulAppDirPathChars$set(MemorySegment seg, int x) {
        constants$506.const$0.set(seg, x);
    }
    public static int ulAppDirPathChars$get(MemorySegment seg, long index) {
        return (int)constants$506.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ulAppDirPathChars$set(MemorySegment seg, long index, int x) {
        constants$506.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpRootManifestPath$VH() {
        return constants$506.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCWSTR lpRootManifestPath;
     * }
     */
    public static MemorySegment lpRootManifestPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$506.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCWSTR lpRootManifestPath;
     * }
     */
    public static void lpRootManifestPath$set(MemorySegment seg, MemorySegment x) {
        constants$506.const$1.set(seg, x);
    }
    public static MemorySegment lpRootManifestPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$506.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpRootManifestPath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$506.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpRootConfigurationPath$VH() {
        return constants$506.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCWSTR lpRootConfigurationPath;
     * }
     */
    public static MemorySegment lpRootConfigurationPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$506.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCWSTR lpRootConfigurationPath;
     * }
     */
    public static void lpRootConfigurationPath$set(MemorySegment seg, MemorySegment x) {
        constants$506.const$2.set(seg, x);
    }
    public static MemorySegment lpRootConfigurationPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$506.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpRootConfigurationPath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$506.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpAppDirPath$VH() {
        return constants$506.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCWSTR lpAppDirPath;
     * }
     */
    public static MemorySegment lpAppDirPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$506.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCWSTR lpAppDirPath;
     * }
     */
    public static void lpAppDirPath$set(MemorySegment seg, MemorySegment x) {
        constants$506.const$3.set(seg, x);
    }
    public static MemorySegment lpAppDirPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$506.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpAppDirPath$set(MemorySegment seg, long index, MemorySegment x) {
        constants$506.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


