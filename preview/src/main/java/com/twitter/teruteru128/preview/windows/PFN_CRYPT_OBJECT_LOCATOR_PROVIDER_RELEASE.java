// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE)(unsigned long dwReason,void* pPluginContext);
 * }
 */
public interface PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE {

    void apply(int dwNumServicesArgs, java.lang.foreign.MemorySegment lpServiceArgVectors);
    static MemorySegment allocate(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2242.const$1, fi, constants$605.const$4, scope);
    }
    static PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _dwNumServicesArgs, java.lang.foreign.MemorySegment _lpServiceArgVectors) -> {
            try {
                constants$2242.const$2.invokeExact(symbol, _dwNumServicesArgs, _lpServiceArgVectors);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


