// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagDRAWTEXTPARAMS {
 *     UINT cbSize;
 *     int iTabLength;
 *     int iLeftMargin;
 *     int iRightMargin;
 *     UINT uiLengthDrawn;
 * };
 * }
 */
public class tagDRAWTEXTPARAMS {

    public static MemoryLayout $LAYOUT() {
        return constants$1274.const$5;
    }
    public static VarHandle cbSize$VH() {
        return constants$1275.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$1275.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$1275.const$0.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$1275.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$1275.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iTabLength$VH() {
        return constants$1275.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int iTabLength;
     * }
     */
    public static int iTabLength$get(MemorySegment seg) {
        return (int)constants$1275.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int iTabLength;
     * }
     */
    public static void iTabLength$set(MemorySegment seg, int x) {
        constants$1275.const$1.set(seg, x);
    }
    public static int iTabLength$get(MemorySegment seg, long index) {
        return (int)constants$1275.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void iTabLength$set(MemorySegment seg, long index, int x) {
        constants$1275.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iLeftMargin$VH() {
        return constants$1275.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int iLeftMargin;
     * }
     */
    public static int iLeftMargin$get(MemorySegment seg) {
        return (int)constants$1275.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int iLeftMargin;
     * }
     */
    public static void iLeftMargin$set(MemorySegment seg, int x) {
        constants$1275.const$2.set(seg, x);
    }
    public static int iLeftMargin$get(MemorySegment seg, long index) {
        return (int)constants$1275.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void iLeftMargin$set(MemorySegment seg, long index, int x) {
        constants$1275.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iRightMargin$VH() {
        return constants$1275.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int iRightMargin;
     * }
     */
    public static int iRightMargin$get(MemorySegment seg) {
        return (int)constants$1275.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int iRightMargin;
     * }
     */
    public static void iRightMargin$set(MemorySegment seg, int x) {
        constants$1275.const$3.set(seg, x);
    }
    public static int iRightMargin$get(MemorySegment seg, long index) {
        return (int)constants$1275.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void iRightMargin$set(MemorySegment seg, long index, int x) {
        constants$1275.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uiLengthDrawn$VH() {
        return constants$1275.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT uiLengthDrawn;
     * }
     */
    public static int uiLengthDrawn$get(MemorySegment seg) {
        return (int)constants$1275.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT uiLengthDrawn;
     * }
     */
    public static void uiLengthDrawn$set(MemorySegment seg, int x) {
        constants$1275.const$4.set(seg, x);
    }
    public static int uiLengthDrawn$get(MemorySegment seg, long index) {
        return (int)constants$1275.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void uiLengthDrawn$set(MemorySegment seg, long index, int x) {
        constants$1275.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


