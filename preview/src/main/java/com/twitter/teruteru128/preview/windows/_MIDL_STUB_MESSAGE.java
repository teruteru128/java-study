// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _MIDL_STUB_MESSAGE {
 *     PRPC_MESSAGE RpcMsg;
 *     unsigned char* Buffer;
 *     unsigned char* BufferStart;
 *     unsigned char* BufferEnd;
 *     unsigned char* BufferMark;
 *     unsigned long BufferLength;
 *     unsigned long MemorySize;
 *     unsigned char* Memory;
 *     unsigned char IsClient;
 *     unsigned char Pad;
 *     unsigned short uFlags2;
 *     int ReuseBuffer;
 *     struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
 *     struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
 *     int IgnoreEmbeddedPointers;
 *     unsigned char* PointerBufferMark;
 *     unsigned char CorrDespIncrement;
 *     unsigned char uFlags;
 *     unsigned short UniquePtrCount;
 *     ULONG_PTR MaxCount;
 *     unsigned long Offset;
 *     unsigned long ActualCount;
 *     void* (*pfnAllocate)(size_t);
 *     void (*pfnFree)(void*);
 *     unsigned char* StackTop;
 *     unsigned char* pPresentedType;
 *     unsigned char* pTransmitType;
 *     handle_t SavedHandle;
 *     struct _MIDL_STUB_DESC* StubDesc;
 *     struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
 *     unsigned long FullPtrRefId;
 *     unsigned long PointerLength;
 *      *     int fInDontFree;
 *     int fDontCallFreeInst;
 *     int fUnused1;
 *     int fHasReturn;
 *     int fHasExtensions;
 *     int fHasNewCorrDesc;
 *     int fIsIn;
 *     int fIsOut;
 *     int fIsOicf;
 *     int fBufferValid;
 *     int fHasMemoryValidateCallback;
 *     int fInFree;
 *     int fNeedMCCP;
 *     int fUnused2;
 *     int fUnused3;
 *     unsigned long dwDestContext;
 *     void* pvDestContext;
 *     NDR_SCONTEXT* SavedContextHandles;
 *     long ParamNumber;
 *     struct IRpcChannelBuffer* pRpcChannelBuffer;
 *     PARRAY_INFO pArrayInfo;
 *     unsigned long* SizePtrCountArray;
 *     unsigned long* SizePtrOffsetArray;
 *     unsigned long* SizePtrLengthArray;
 *     void* pArgQueue;
 *     unsigned long dwStubPhase;
 *     void* LowStackMark;
 *     PNDR_ASYNC_MESSAGE pAsyncMsg;
 *     PNDR_CORRELATION_INFO pCorrInfo;
 *     unsigned char* pCorrMemory;
 *     void* pMemoryList;
 *     INT_PTR pCSInfo;
 *     unsigned char* ConformanceMark;
 *     unsigned char* VarianceMark;
 *     INT_PTR Unused;
 *     struct _NDR_PROC_CONTEXT* pContext;
 *     void* ContextHandleHash;
 *     void* pUserMarshalList;
 *     INT_PTR Reserved51_3;
 *     INT_PTR Reserved51_4;
 *     INT_PTR Reserved51_5;
 * };
 * }
 */
public class _MIDL_STUB_MESSAGE {

    public static MemoryLayout $LAYOUT() {
        return constants$2266.const$3;
    }
    public static VarHandle RpcMsg$VH() {
        return constants$2266.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PRPC_MESSAGE RpcMsg;
     * }
     */
    public static MemorySegment RpcMsg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2266.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PRPC_MESSAGE RpcMsg;
     * }
     */
    public static void RpcMsg$set(MemorySegment seg, MemorySegment x) {
        constants$2266.const$4.set(seg, x);
    }
    public static MemorySegment RpcMsg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2266.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void RpcMsg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2266.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Buffer$VH() {
        return constants$2266.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* Buffer;
     * }
     */
    public static MemorySegment Buffer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2266.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* Buffer;
     * }
     */
    public static void Buffer$set(MemorySegment seg, MemorySegment x) {
        constants$2266.const$5.set(seg, x);
    }
    public static MemorySegment Buffer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2266.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Buffer$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2266.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BufferStart$VH() {
        return constants$2267.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* BufferStart;
     * }
     */
    public static MemorySegment BufferStart$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* BufferStart;
     * }
     */
    public static void BufferStart$set(MemorySegment seg, MemorySegment x) {
        constants$2267.const$0.set(seg, x);
    }
    public static MemorySegment BufferStart$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void BufferStart$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2267.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BufferEnd$VH() {
        return constants$2267.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* BufferEnd;
     * }
     */
    public static MemorySegment BufferEnd$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* BufferEnd;
     * }
     */
    public static void BufferEnd$set(MemorySegment seg, MemorySegment x) {
        constants$2267.const$1.set(seg, x);
    }
    public static MemorySegment BufferEnd$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void BufferEnd$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2267.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BufferMark$VH() {
        return constants$2267.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* BufferMark;
     * }
     */
    public static MemorySegment BufferMark$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* BufferMark;
     * }
     */
    public static void BufferMark$set(MemorySegment seg, MemorySegment x) {
        constants$2267.const$2.set(seg, x);
    }
    public static MemorySegment BufferMark$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void BufferMark$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2267.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BufferLength$VH() {
        return constants$2267.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long BufferLength;
     * }
     */
    public static int BufferLength$get(MemorySegment seg) {
        return (int)constants$2267.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long BufferLength;
     * }
     */
    public static void BufferLength$set(MemorySegment seg, int x) {
        constants$2267.const$3.set(seg, x);
    }
    public static int BufferLength$get(MemorySegment seg, long index) {
        return (int)constants$2267.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void BufferLength$set(MemorySegment seg, long index, int x) {
        constants$2267.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MemorySize$VH() {
        return constants$2267.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long MemorySize;
     * }
     */
    public static int MemorySize$get(MemorySegment seg) {
        return (int)constants$2267.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long MemorySize;
     * }
     */
    public static void MemorySize$set(MemorySegment seg, int x) {
        constants$2267.const$4.set(seg, x);
    }
    public static int MemorySize$get(MemorySegment seg, long index) {
        return (int)constants$2267.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MemorySize$set(MemorySegment seg, long index, int x) {
        constants$2267.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Memory$VH() {
        return constants$2267.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* Memory;
     * }
     */
    public static MemorySegment Memory$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* Memory;
     * }
     */
    public static void Memory$set(MemorySegment seg, MemorySegment x) {
        constants$2267.const$5.set(seg, x);
    }
    public static MemorySegment Memory$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2267.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Memory$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2267.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IsClient$VH() {
        return constants$2268.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char IsClient;
     * }
     */
    public static byte IsClient$get(MemorySegment seg) {
        return (byte)constants$2268.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char IsClient;
     * }
     */
    public static void IsClient$set(MemorySegment seg, byte x) {
        constants$2268.const$0.set(seg, x);
    }
    public static byte IsClient$get(MemorySegment seg, long index) {
        return (byte)constants$2268.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void IsClient$set(MemorySegment seg, long index, byte x) {
        constants$2268.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Pad$VH() {
        return constants$2268.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char Pad;
     * }
     */
    public static byte Pad$get(MemorySegment seg) {
        return (byte)constants$2268.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char Pad;
     * }
     */
    public static void Pad$set(MemorySegment seg, byte x) {
        constants$2268.const$1.set(seg, x);
    }
    public static byte Pad$get(MemorySegment seg, long index) {
        return (byte)constants$2268.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Pad$set(MemorySegment seg, long index, byte x) {
        constants$2268.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uFlags2$VH() {
        return constants$2268.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short uFlags2;
     * }
     */
    public static short uFlags2$get(MemorySegment seg) {
        return (short)constants$2268.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short uFlags2;
     * }
     */
    public static void uFlags2$set(MemorySegment seg, short x) {
        constants$2268.const$2.set(seg, x);
    }
    public static short uFlags2$get(MemorySegment seg, long index) {
        return (short)constants$2268.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void uFlags2$set(MemorySegment seg, long index, short x) {
        constants$2268.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ReuseBuffer$VH() {
        return constants$2268.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int ReuseBuffer;
     * }
     */
    public static int ReuseBuffer$get(MemorySegment seg) {
        return (int)constants$2268.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int ReuseBuffer;
     * }
     */
    public static void ReuseBuffer$set(MemorySegment seg, int x) {
        constants$2268.const$3.set(seg, x);
    }
    public static int ReuseBuffer$get(MemorySegment seg, long index) {
        return (int)constants$2268.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void ReuseBuffer$set(MemorySegment seg, long index, int x) {
        constants$2268.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pAllocAllNodesContext$VH() {
        return constants$2268.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
     * }
     */
    public static MemorySegment pAllocAllNodesContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2268.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
     * }
     */
    public static void pAllocAllNodesContext$set(MemorySegment seg, MemorySegment x) {
        constants$2268.const$4.set(seg, x);
    }
    public static MemorySegment pAllocAllNodesContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2268.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pAllocAllNodesContext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2268.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pPointerQueueState$VH() {
        return constants$2268.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
     * }
     */
    public static MemorySegment pPointerQueueState$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2268.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
     * }
     */
    public static void pPointerQueueState$set(MemorySegment seg, MemorySegment x) {
        constants$2268.const$5.set(seg, x);
    }
    public static MemorySegment pPointerQueueState$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2268.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pPointerQueueState$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2268.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle IgnoreEmbeddedPointers$VH() {
        return constants$2269.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int IgnoreEmbeddedPointers;
     * }
     */
    public static int IgnoreEmbeddedPointers$get(MemorySegment seg) {
        return (int)constants$2269.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int IgnoreEmbeddedPointers;
     * }
     */
    public static void IgnoreEmbeddedPointers$set(MemorySegment seg, int x) {
        constants$2269.const$0.set(seg, x);
    }
    public static int IgnoreEmbeddedPointers$get(MemorySegment seg, long index) {
        return (int)constants$2269.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void IgnoreEmbeddedPointers$set(MemorySegment seg, long index, int x) {
        constants$2269.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PointerBufferMark$VH() {
        return constants$2269.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* PointerBufferMark;
     * }
     */
    public static MemorySegment PointerBufferMark$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2269.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* PointerBufferMark;
     * }
     */
    public static void PointerBufferMark$set(MemorySegment seg, MemorySegment x) {
        constants$2269.const$1.set(seg, x);
    }
    public static MemorySegment PointerBufferMark$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2269.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void PointerBufferMark$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2269.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CorrDespIncrement$VH() {
        return constants$2269.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char CorrDespIncrement;
     * }
     */
    public static byte CorrDespIncrement$get(MemorySegment seg) {
        return (byte)constants$2269.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char CorrDespIncrement;
     * }
     */
    public static void CorrDespIncrement$set(MemorySegment seg, byte x) {
        constants$2269.const$2.set(seg, x);
    }
    public static byte CorrDespIncrement$get(MemorySegment seg, long index) {
        return (byte)constants$2269.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void CorrDespIncrement$set(MemorySegment seg, long index, byte x) {
        constants$2269.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uFlags$VH() {
        return constants$2269.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char uFlags;
     * }
     */
    public static byte uFlags$get(MemorySegment seg) {
        return (byte)constants$2269.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char uFlags;
     * }
     */
    public static void uFlags$set(MemorySegment seg, byte x) {
        constants$2269.const$3.set(seg, x);
    }
    public static byte uFlags$get(MemorySegment seg, long index) {
        return (byte)constants$2269.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void uFlags$set(MemorySegment seg, long index, byte x) {
        constants$2269.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UniquePtrCount$VH() {
        return constants$2269.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short UniquePtrCount;
     * }
     */
    public static short UniquePtrCount$get(MemorySegment seg) {
        return (short)constants$2269.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short UniquePtrCount;
     * }
     */
    public static void UniquePtrCount$set(MemorySegment seg, short x) {
        constants$2269.const$4.set(seg, x);
    }
    public static short UniquePtrCount$get(MemorySegment seg, long index) {
        return (short)constants$2269.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void UniquePtrCount$set(MemorySegment seg, long index, short x) {
        constants$2269.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MaxCount$VH() {
        return constants$2269.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR MaxCount;
     * }
     */
    public static long MaxCount$get(MemorySegment seg) {
        return (long)constants$2269.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR MaxCount;
     * }
     */
    public static void MaxCount$set(MemorySegment seg, long x) {
        constants$2269.const$5.set(seg, x);
    }
    public static long MaxCount$get(MemorySegment seg, long index) {
        return (long)constants$2269.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxCount$set(MemorySegment seg, long index, long x) {
        constants$2269.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Offset$VH() {
        return constants$2270.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long Offset;
     * }
     */
    public static int Offset$get(MemorySegment seg) {
        return (int)constants$2270.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long Offset;
     * }
     */
    public static void Offset$set(MemorySegment seg, int x) {
        constants$2270.const$0.set(seg, x);
    }
    public static int Offset$get(MemorySegment seg, long index) {
        return (int)constants$2270.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Offset$set(MemorySegment seg, long index, int x) {
        constants$2270.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ActualCount$VH() {
        return constants$2270.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long ActualCount;
     * }
     */
    public static int ActualCount$get(MemorySegment seg) {
        return (int)constants$2270.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long ActualCount;
     * }
     */
    public static void ActualCount$set(MemorySegment seg, int x) {
        constants$2270.const$1.set(seg, x);
    }
    public static int ActualCount$get(MemorySegment seg, long index) {
        return (int)constants$2270.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ActualCount$set(MemorySegment seg, long index, int x) {
        constants$2270.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
 * void* (*pfnAllocate)(size_t);
     * }
     */
    public interface pfnAllocate {

        java.lang.foreign.MemorySegment apply(long Size);
        static MemorySegment allocate(pfnAllocate fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$2270.const$2, fi, constants$1977.const$2, scope);
        }
        static pfnAllocate ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (long _Size) -> {
                try {
                    return (java.lang.foreign.MemorySegment)constants$1977.const$4.invokeExact(symbol, _Size);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle pfnAllocate$VH() {
        return constants$2270.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* (*pfnAllocate)(size_t);
     * }
     */
    public static MemorySegment pfnAllocate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2270.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* (*pfnAllocate)(size_t);
     * }
     */
    public static void pfnAllocate$set(MemorySegment seg, MemorySegment x) {
        constants$2270.const$3.set(seg, x);
    }
    public static MemorySegment pfnAllocate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2270.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pfnAllocate$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2270.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static pfnAllocate pfnAllocate(MemorySegment segment, Arena scope) {
        return pfnAllocate.ofAddress(pfnAllocate$get(segment), scope);
    }
    /**
     * {@snippet :
 * void (*pfnFree)(void*);
     * }
     */
    public interface pfnFree {

        void apply(java.lang.foreign.MemorySegment pParameter);
        static MemorySegment allocate(pfnFree fi, Arena scope) {
            return RuntimeHelper.upcallStub(constants$2270.const$4, fi, constants$0.const$0, scope);
        }
        static pfnFree ofAddress(MemorySegment addr, Arena arena) {
            MemorySegment symbol = addr.reinterpret(arena, null);
            return (java.lang.foreign.MemorySegment _pParameter) -> {
                try {
                    constants$496.const$2.invokeExact(symbol, _pParameter);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    public static VarHandle pfnFree$VH() {
        return constants$2270.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void (*pfnFree)(void*);
     * }
     */
    public static MemorySegment pfnFree$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2270.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void (*pfnFree)(void*);
     * }
     */
    public static void pfnFree$set(MemorySegment seg, MemorySegment x) {
        constants$2270.const$5.set(seg, x);
    }
    public static MemorySegment pfnFree$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2270.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pfnFree$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2270.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static pfnFree pfnFree(MemorySegment segment, Arena scope) {
        return pfnFree.ofAddress(pfnFree$get(segment), scope);
    }
    public static VarHandle StackTop$VH() {
        return constants$2271.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* StackTop;
     * }
     */
    public static MemorySegment StackTop$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* StackTop;
     * }
     */
    public static void StackTop$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$0.set(seg, x);
    }
    public static MemorySegment StackTop$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void StackTop$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pPresentedType$VH() {
        return constants$2271.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* pPresentedType;
     * }
     */
    public static MemorySegment pPresentedType$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* pPresentedType;
     * }
     */
    public static void pPresentedType$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$1.set(seg, x);
    }
    public static MemorySegment pPresentedType$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pPresentedType$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pTransmitType$VH() {
        return constants$2271.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* pTransmitType;
     * }
     */
    public static MemorySegment pTransmitType$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* pTransmitType;
     * }
     */
    public static void pTransmitType$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$2.set(seg, x);
    }
    public static MemorySegment pTransmitType$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pTransmitType$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SavedHandle$VH() {
        return constants$2271.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * handle_t SavedHandle;
     * }
     */
    public static MemorySegment SavedHandle$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * handle_t SavedHandle;
     * }
     */
    public static void SavedHandle$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$3.set(seg, x);
    }
    public static MemorySegment SavedHandle$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void SavedHandle$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle StubDesc$VH() {
        return constants$2271.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _MIDL_STUB_DESC* StubDesc;
     * }
     */
    public static MemorySegment StubDesc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _MIDL_STUB_DESC* StubDesc;
     * }
     */
    public static void StubDesc$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$4.set(seg, x);
    }
    public static MemorySegment StubDesc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void StubDesc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FullPtrXlatTables$VH() {
        return constants$2271.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
     * }
     */
    public static MemorySegment FullPtrXlatTables$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
     * }
     */
    public static void FullPtrXlatTables$set(MemorySegment seg, MemorySegment x) {
        constants$2271.const$5.set(seg, x);
    }
    public static MemorySegment FullPtrXlatTables$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2271.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void FullPtrXlatTables$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2271.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FullPtrRefId$VH() {
        return constants$2272.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long FullPtrRefId;
     * }
     */
    public static int FullPtrRefId$get(MemorySegment seg) {
        return (int)constants$2272.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long FullPtrRefId;
     * }
     */
    public static void FullPtrRefId$set(MemorySegment seg, int x) {
        constants$2272.const$0.set(seg, x);
    }
    public static int FullPtrRefId$get(MemorySegment seg, long index) {
        return (int)constants$2272.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void FullPtrRefId$set(MemorySegment seg, long index, int x) {
        constants$2272.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PointerLength$VH() {
        return constants$2272.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long PointerLength;
     * }
     */
    public static int PointerLength$get(MemorySegment seg) {
        return (int)constants$2272.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long PointerLength;
     * }
     */
    public static void PointerLength$set(MemorySegment seg, int x) {
        constants$2272.const$1.set(seg, x);
    }
    public static int PointerLength$get(MemorySegment seg, long index) {
        return (int)constants$2272.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void PointerLength$set(MemorySegment seg, long index, int x) {
        constants$2272.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDestContext$VH() {
        return constants$2272.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long dwDestContext;
     * }
     */
    public static int dwDestContext$get(MemorySegment seg) {
        return (int)constants$2272.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long dwDestContext;
     * }
     */
    public static void dwDestContext$set(MemorySegment seg, int x) {
        constants$2272.const$2.set(seg, x);
    }
    public static int dwDestContext$get(MemorySegment seg, long index) {
        return (int)constants$2272.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDestContext$set(MemorySegment seg, long index, int x) {
        constants$2272.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pvDestContext$VH() {
        return constants$2272.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvDestContext;
     * }
     */
    public static MemorySegment pvDestContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2272.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvDestContext;
     * }
     */
    public static void pvDestContext$set(MemorySegment seg, MemorySegment x) {
        constants$2272.const$3.set(seg, x);
    }
    public static MemorySegment pvDestContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2272.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pvDestContext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2272.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SavedContextHandles$VH() {
        return constants$2272.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * NDR_SCONTEXT* SavedContextHandles;
     * }
     */
    public static MemorySegment SavedContextHandles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2272.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * NDR_SCONTEXT* SavedContextHandles;
     * }
     */
    public static void SavedContextHandles$set(MemorySegment seg, MemorySegment x) {
        constants$2272.const$4.set(seg, x);
    }
    public static MemorySegment SavedContextHandles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2272.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void SavedContextHandles$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2272.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ParamNumber$VH() {
        return constants$2272.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * long ParamNumber;
     * }
     */
    public static int ParamNumber$get(MemorySegment seg) {
        return (int)constants$2272.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * long ParamNumber;
     * }
     */
    public static void ParamNumber$set(MemorySegment seg, int x) {
        constants$2272.const$5.set(seg, x);
    }
    public static int ParamNumber$get(MemorySegment seg, long index) {
        return (int)constants$2272.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ParamNumber$set(MemorySegment seg, long index, int x) {
        constants$2272.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pRpcChannelBuffer$VH() {
        return constants$2273.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct IRpcChannelBuffer* pRpcChannelBuffer;
     * }
     */
    public static MemorySegment pRpcChannelBuffer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct IRpcChannelBuffer* pRpcChannelBuffer;
     * }
     */
    public static void pRpcChannelBuffer$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$0.set(seg, x);
    }
    public static MemorySegment pRpcChannelBuffer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pRpcChannelBuffer$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pArrayInfo$VH() {
        return constants$2273.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PARRAY_INFO pArrayInfo;
     * }
     */
    public static MemorySegment pArrayInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PARRAY_INFO pArrayInfo;
     * }
     */
    public static void pArrayInfo$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$1.set(seg, x);
    }
    public static MemorySegment pArrayInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pArrayInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SizePtrCountArray$VH() {
        return constants$2273.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long* SizePtrCountArray;
     * }
     */
    public static MemorySegment SizePtrCountArray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long* SizePtrCountArray;
     * }
     */
    public static void SizePtrCountArray$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$2.set(seg, x);
    }
    public static MemorySegment SizePtrCountArray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void SizePtrCountArray$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SizePtrOffsetArray$VH() {
        return constants$2273.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long* SizePtrOffsetArray;
     * }
     */
    public static MemorySegment SizePtrOffsetArray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long* SizePtrOffsetArray;
     * }
     */
    public static void SizePtrOffsetArray$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$3.set(seg, x);
    }
    public static MemorySegment SizePtrOffsetArray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void SizePtrOffsetArray$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SizePtrLengthArray$VH() {
        return constants$2273.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long* SizePtrLengthArray;
     * }
     */
    public static MemorySegment SizePtrLengthArray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long* SizePtrLengthArray;
     * }
     */
    public static void SizePtrLengthArray$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$4.set(seg, x);
    }
    public static MemorySegment SizePtrLengthArray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void SizePtrLengthArray$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pArgQueue$VH() {
        return constants$2273.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pArgQueue;
     * }
     */
    public static MemorySegment pArgQueue$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pArgQueue;
     * }
     */
    public static void pArgQueue$set(MemorySegment seg, MemorySegment x) {
        constants$2273.const$5.set(seg, x);
    }
    public static MemorySegment pArgQueue$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2273.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pArgQueue$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2273.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStubPhase$VH() {
        return constants$2274.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long dwStubPhase;
     * }
     */
    public static int dwStubPhase$get(MemorySegment seg) {
        return (int)constants$2274.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long dwStubPhase;
     * }
     */
    public static void dwStubPhase$set(MemorySegment seg, int x) {
        constants$2274.const$0.set(seg, x);
    }
    public static int dwStubPhase$get(MemorySegment seg, long index) {
        return (int)constants$2274.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStubPhase$set(MemorySegment seg, long index, int x) {
        constants$2274.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LowStackMark$VH() {
        return constants$2274.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* LowStackMark;
     * }
     */
    public static MemorySegment LowStackMark$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* LowStackMark;
     * }
     */
    public static void LowStackMark$set(MemorySegment seg, MemorySegment x) {
        constants$2274.const$1.set(seg, x);
    }
    public static MemorySegment LowStackMark$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void LowStackMark$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2274.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pAsyncMsg$VH() {
        return constants$2274.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PNDR_ASYNC_MESSAGE pAsyncMsg;
     * }
     */
    public static MemorySegment pAsyncMsg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PNDR_ASYNC_MESSAGE pAsyncMsg;
     * }
     */
    public static void pAsyncMsg$set(MemorySegment seg, MemorySegment x) {
        constants$2274.const$2.set(seg, x);
    }
    public static MemorySegment pAsyncMsg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pAsyncMsg$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2274.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pCorrInfo$VH() {
        return constants$2274.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PNDR_CORRELATION_INFO pCorrInfo;
     * }
     */
    public static MemorySegment pCorrInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PNDR_CORRELATION_INFO pCorrInfo;
     * }
     */
    public static void pCorrInfo$set(MemorySegment seg, MemorySegment x) {
        constants$2274.const$3.set(seg, x);
    }
    public static MemorySegment pCorrInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pCorrInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2274.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pCorrMemory$VH() {
        return constants$2274.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* pCorrMemory;
     * }
     */
    public static MemorySegment pCorrMemory$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* pCorrMemory;
     * }
     */
    public static void pCorrMemory$set(MemorySegment seg, MemorySegment x) {
        constants$2274.const$4.set(seg, x);
    }
    public static MemorySegment pCorrMemory$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pCorrMemory$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2274.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pMemoryList$VH() {
        return constants$2274.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pMemoryList;
     * }
     */
    public static MemorySegment pMemoryList$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pMemoryList;
     * }
     */
    public static void pMemoryList$set(MemorySegment seg, MemorySegment x) {
        constants$2274.const$5.set(seg, x);
    }
    public static MemorySegment pMemoryList$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2274.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pMemoryList$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2274.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pCSInfo$VH() {
        return constants$2275.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT_PTR pCSInfo;
     * }
     */
    public static long pCSInfo$get(MemorySegment seg) {
        return (long)constants$2275.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT_PTR pCSInfo;
     * }
     */
    public static void pCSInfo$set(MemorySegment seg, long x) {
        constants$2275.const$0.set(seg, x);
    }
    public static long pCSInfo$get(MemorySegment seg, long index) {
        return (long)constants$2275.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pCSInfo$set(MemorySegment seg, long index, long x) {
        constants$2275.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ConformanceMark$VH() {
        return constants$2275.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* ConformanceMark;
     * }
     */
    public static MemorySegment ConformanceMark$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* ConformanceMark;
     * }
     */
    public static void ConformanceMark$set(MemorySegment seg, MemorySegment x) {
        constants$2275.const$1.set(seg, x);
    }
    public static MemorySegment ConformanceMark$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ConformanceMark$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2275.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VarianceMark$VH() {
        return constants$2275.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char* VarianceMark;
     * }
     */
    public static MemorySegment VarianceMark$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char* VarianceMark;
     * }
     */
    public static void VarianceMark$set(MemorySegment seg, MemorySegment x) {
        constants$2275.const$2.set(seg, x);
    }
    public static MemorySegment VarianceMark$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void VarianceMark$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2275.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Unused$VH() {
        return constants$2275.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT_PTR Unused;
     * }
     */
    public static long Unused$get(MemorySegment seg) {
        return (long)constants$2275.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT_PTR Unused;
     * }
     */
    public static void Unused$set(MemorySegment seg, long x) {
        constants$2275.const$3.set(seg, x);
    }
    public static long Unused$get(MemorySegment seg, long index) {
        return (long)constants$2275.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Unused$set(MemorySegment seg, long index, long x) {
        constants$2275.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pContext$VH() {
        return constants$2275.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * struct _NDR_PROC_CONTEXT* pContext;
     * }
     */
    public static MemorySegment pContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * struct _NDR_PROC_CONTEXT* pContext;
     * }
     */
    public static void pContext$set(MemorySegment seg, MemorySegment x) {
        constants$2275.const$4.set(seg, x);
    }
    public static MemorySegment pContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pContext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2275.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ContextHandleHash$VH() {
        return constants$2275.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* ContextHandleHash;
     * }
     */
    public static MemorySegment ContextHandleHash$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* ContextHandleHash;
     * }
     */
    public static void ContextHandleHash$set(MemorySegment seg, MemorySegment x) {
        constants$2275.const$5.set(seg, x);
    }
    public static MemorySegment ContextHandleHash$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2275.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ContextHandleHash$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2275.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pUserMarshalList$VH() {
        return constants$2276.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pUserMarshalList;
     * }
     */
    public static MemorySegment pUserMarshalList$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2276.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pUserMarshalList;
     * }
     */
    public static void pUserMarshalList$set(MemorySegment seg, MemorySegment x) {
        constants$2276.const$0.set(seg, x);
    }
    public static MemorySegment pUserMarshalList$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2276.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pUserMarshalList$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2276.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved51_3$VH() {
        return constants$2276.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT_PTR Reserved51_3;
     * }
     */
    public static long Reserved51_3$get(MemorySegment seg) {
        return (long)constants$2276.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT_PTR Reserved51_3;
     * }
     */
    public static void Reserved51_3$set(MemorySegment seg, long x) {
        constants$2276.const$1.set(seg, x);
    }
    public static long Reserved51_3$get(MemorySegment seg, long index) {
        return (long)constants$2276.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved51_3$set(MemorySegment seg, long index, long x) {
        constants$2276.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved51_4$VH() {
        return constants$2276.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT_PTR Reserved51_4;
     * }
     */
    public static long Reserved51_4$get(MemorySegment seg) {
        return (long)constants$2276.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT_PTR Reserved51_4;
     * }
     */
    public static void Reserved51_4$set(MemorySegment seg, long x) {
        constants$2276.const$2.set(seg, x);
    }
    public static long Reserved51_4$get(MemorySegment seg, long index) {
        return (long)constants$2276.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved51_4$set(MemorySegment seg, long index, long x) {
        constants$2276.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved51_5$VH() {
        return constants$2276.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT_PTR Reserved51_5;
     * }
     */
    public static long Reserved51_5$get(MemorySegment seg) {
        return (long)constants$2276.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT_PTR Reserved51_5;
     * }
     */
    public static void Reserved51_5$set(MemorySegment seg, long x) {
        constants$2276.const$3.set(seg, x);
    }
    public static long Reserved51_5$get(MemorySegment seg, long index) {
        return (long)constants$2276.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved51_5$set(MemorySegment seg, long index, long x) {
        constants$2276.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


