// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_PROTOCOL_COMMAND {
 *     DWORD Version;
 *     DWORD Length;
 *     STORAGE_PROTOCOL_TYPE ProtocolType;
 *     DWORD Flags;
 *     DWORD ReturnStatus;
 *     DWORD ErrorCode;
 *     DWORD CommandLength;
 *     DWORD ErrorInfoLength;
 *     DWORD DataToDeviceTransferLength;
 *     DWORD DataFromDeviceTransferLength;
 *     DWORD TimeOutValue;
 *     DWORD ErrorInfoOffset;
 *     DWORD DataToDeviceBufferOffset;
 *     DWORD DataFromDeviceBufferOffset;
 *     DWORD CommandSpecific;
 *     DWORD Reserved0;
 *     DWORD FixedProtocolReturnData;
 *     DWORD Reserved1[3];
 *     BYTE Command[1];
 * };
 * }
 */
public class _STORAGE_PROTOCOL_COMMAND {

    public static MemoryLayout $LAYOUT() {
        return constants$2499.const$2;
    }
    public static VarHandle Version$VH() {
        return constants$2499.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$2499.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$2499.const$3.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$2499.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$2499.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Length$VH() {
        return constants$2499.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static int Length$get(MemorySegment seg) {
        return (int)constants$2499.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static void Length$set(MemorySegment seg, int x) {
        constants$2499.const$4.set(seg, x);
    }
    public static int Length$get(MemorySegment seg, long index) {
        return (int)constants$2499.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Length$set(MemorySegment seg, long index, int x) {
        constants$2499.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ProtocolType$VH() {
        return constants$2499.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * STORAGE_PROTOCOL_TYPE ProtocolType;
     * }
     */
    public static int ProtocolType$get(MemorySegment seg) {
        return (int)constants$2499.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * STORAGE_PROTOCOL_TYPE ProtocolType;
     * }
     */
    public static void ProtocolType$set(MemorySegment seg, int x) {
        constants$2499.const$5.set(seg, x);
    }
    public static int ProtocolType$get(MemorySegment seg, long index) {
        return (int)constants$2499.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ProtocolType$set(MemorySegment seg, long index, int x) {
        constants$2499.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Flags$VH() {
        return constants$2500.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$2500.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$2500.const$0.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$2500.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ReturnStatus$VH() {
        return constants$2500.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ReturnStatus;
     * }
     */
    public static int ReturnStatus$get(MemorySegment seg) {
        return (int)constants$2500.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ReturnStatus;
     * }
     */
    public static void ReturnStatus$set(MemorySegment seg, int x) {
        constants$2500.const$1.set(seg, x);
    }
    public static int ReturnStatus$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ReturnStatus$set(MemorySegment seg, long index, int x) {
        constants$2500.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ErrorCode$VH() {
        return constants$2500.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ErrorCode;
     * }
     */
    public static int ErrorCode$get(MemorySegment seg) {
        return (int)constants$2500.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ErrorCode;
     * }
     */
    public static void ErrorCode$set(MemorySegment seg, int x) {
        constants$2500.const$2.set(seg, x);
    }
    public static int ErrorCode$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorCode$set(MemorySegment seg, long index, int x) {
        constants$2500.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CommandLength$VH() {
        return constants$2500.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD CommandLength;
     * }
     */
    public static int CommandLength$get(MemorySegment seg) {
        return (int)constants$2500.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD CommandLength;
     * }
     */
    public static void CommandLength$set(MemorySegment seg, int x) {
        constants$2500.const$3.set(seg, x);
    }
    public static int CommandLength$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandLength$set(MemorySegment seg, long index, int x) {
        constants$2500.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ErrorInfoLength$VH() {
        return constants$2500.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ErrorInfoLength;
     * }
     */
    public static int ErrorInfoLength$get(MemorySegment seg) {
        return (int)constants$2500.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ErrorInfoLength;
     * }
     */
    public static void ErrorInfoLength$set(MemorySegment seg, int x) {
        constants$2500.const$4.set(seg, x);
    }
    public static int ErrorInfoLength$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorInfoLength$set(MemorySegment seg, long index, int x) {
        constants$2500.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DataToDeviceTransferLength$VH() {
        return constants$2500.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DataToDeviceTransferLength;
     * }
     */
    public static int DataToDeviceTransferLength$get(MemorySegment seg) {
        return (int)constants$2500.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DataToDeviceTransferLength;
     * }
     */
    public static void DataToDeviceTransferLength$set(MemorySegment seg, int x) {
        constants$2500.const$5.set(seg, x);
    }
    public static int DataToDeviceTransferLength$get(MemorySegment seg, long index) {
        return (int)constants$2500.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void DataToDeviceTransferLength$set(MemorySegment seg, long index, int x) {
        constants$2500.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DataFromDeviceTransferLength$VH() {
        return constants$2501.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DataFromDeviceTransferLength;
     * }
     */
    public static int DataFromDeviceTransferLength$get(MemorySegment seg) {
        return (int)constants$2501.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DataFromDeviceTransferLength;
     * }
     */
    public static void DataFromDeviceTransferLength$set(MemorySegment seg, int x) {
        constants$2501.const$0.set(seg, x);
    }
    public static int DataFromDeviceTransferLength$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void DataFromDeviceTransferLength$set(MemorySegment seg, long index, int x) {
        constants$2501.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TimeOutValue$VH() {
        return constants$2501.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD TimeOutValue;
     * }
     */
    public static int TimeOutValue$get(MemorySegment seg) {
        return (int)constants$2501.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD TimeOutValue;
     * }
     */
    public static void TimeOutValue$set(MemorySegment seg, int x) {
        constants$2501.const$1.set(seg, x);
    }
    public static int TimeOutValue$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void TimeOutValue$set(MemorySegment seg, long index, int x) {
        constants$2501.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ErrorInfoOffset$VH() {
        return constants$2501.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ErrorInfoOffset;
     * }
     */
    public static int ErrorInfoOffset$get(MemorySegment seg) {
        return (int)constants$2501.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ErrorInfoOffset;
     * }
     */
    public static void ErrorInfoOffset$set(MemorySegment seg, int x) {
        constants$2501.const$2.set(seg, x);
    }
    public static int ErrorInfoOffset$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ErrorInfoOffset$set(MemorySegment seg, long index, int x) {
        constants$2501.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DataToDeviceBufferOffset$VH() {
        return constants$2501.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DataToDeviceBufferOffset;
     * }
     */
    public static int DataToDeviceBufferOffset$get(MemorySegment seg) {
        return (int)constants$2501.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DataToDeviceBufferOffset;
     * }
     */
    public static void DataToDeviceBufferOffset$set(MemorySegment seg, int x) {
        constants$2501.const$3.set(seg, x);
    }
    public static int DataToDeviceBufferOffset$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void DataToDeviceBufferOffset$set(MemorySegment seg, long index, int x) {
        constants$2501.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle DataFromDeviceBufferOffset$VH() {
        return constants$2501.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DataFromDeviceBufferOffset;
     * }
     */
    public static int DataFromDeviceBufferOffset$get(MemorySegment seg) {
        return (int)constants$2501.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DataFromDeviceBufferOffset;
     * }
     */
    public static void DataFromDeviceBufferOffset$set(MemorySegment seg, int x) {
        constants$2501.const$4.set(seg, x);
    }
    public static int DataFromDeviceBufferOffset$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void DataFromDeviceBufferOffset$set(MemorySegment seg, long index, int x) {
        constants$2501.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CommandSpecific$VH() {
        return constants$2501.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD CommandSpecific;
     * }
     */
    public static int CommandSpecific$get(MemorySegment seg) {
        return (int)constants$2501.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD CommandSpecific;
     * }
     */
    public static void CommandSpecific$set(MemorySegment seg, int x) {
        constants$2501.const$5.set(seg, x);
    }
    public static int CommandSpecific$get(MemorySegment seg, long index) {
        return (int)constants$2501.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandSpecific$set(MemorySegment seg, long index, int x) {
        constants$2501.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved0$VH() {
        return constants$2502.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved0;
     * }
     */
    public static int Reserved0$get(MemorySegment seg) {
        return (int)constants$2502.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved0;
     * }
     */
    public static void Reserved0$set(MemorySegment seg, int x) {
        constants$2502.const$0.set(seg, x);
    }
    public static int Reserved0$get(MemorySegment seg, long index) {
        return (int)constants$2502.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved0$set(MemorySegment seg, long index, int x) {
        constants$2502.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FixedProtocolReturnData$VH() {
        return constants$2502.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD FixedProtocolReturnData;
     * }
     */
    public static int FixedProtocolReturnData$get(MemorySegment seg) {
        return (int)constants$2502.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD FixedProtocolReturnData;
     * }
     */
    public static void FixedProtocolReturnData$set(MemorySegment seg, int x) {
        constants$2502.const$1.set(seg, x);
    }
    public static int FixedProtocolReturnData$get(MemorySegment seg, long index) {
        return (int)constants$2502.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void FixedProtocolReturnData$set(MemorySegment seg, long index, int x) {
        constants$2502.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Reserved1$slice(MemorySegment seg) {
        return seg.asSlice(68, 12);
    }
    public static MemorySegment Command$slice(MemorySegment seg) {
        return seg.asSlice(80, 1);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


