// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagSERIALKEYSW {
 *     UINT cbSize;
 *     DWORD dwFlags;
 *     LPWSTR lpszActivePort;
 *     LPWSTR lpszPort;
 *     UINT iBaudRate;
 *     UINT iPortState;
 *     UINT iActive;
 * };
 * }
 */
public class tagSERIALKEYSW {

    public static MemoryLayout $LAYOUT() {
        return constants$1346.const$4;
    }
    public static VarHandle cbSize$VH() {
        return constants$1346.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$1346.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$1346.const$5.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$1346.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$1346.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFlags$VH() {
        return constants$1347.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$1347.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$1347.const$0.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$1347.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$1347.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszActivePort$VH() {
        return constants$1347.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpszActivePort;
     * }
     */
    public static MemorySegment lpszActivePort$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1347.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpszActivePort;
     * }
     */
    public static void lpszActivePort$set(MemorySegment seg, MemorySegment x) {
        constants$1347.const$1.set(seg, x);
    }
    public static MemorySegment lpszActivePort$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1347.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszActivePort$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1347.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpszPort$VH() {
        return constants$1347.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR lpszPort;
     * }
     */
    public static MemorySegment lpszPort$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1347.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR lpszPort;
     * }
     */
    public static void lpszPort$set(MemorySegment seg, MemorySegment x) {
        constants$1347.const$2.set(seg, x);
    }
    public static MemorySegment lpszPort$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1347.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszPort$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1347.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iBaudRate$VH() {
        return constants$1347.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT iBaudRate;
     * }
     */
    public static int iBaudRate$get(MemorySegment seg) {
        return (int)constants$1347.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT iBaudRate;
     * }
     */
    public static void iBaudRate$set(MemorySegment seg, int x) {
        constants$1347.const$3.set(seg, x);
    }
    public static int iBaudRate$get(MemorySegment seg, long index) {
        return (int)constants$1347.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void iBaudRate$set(MemorySegment seg, long index, int x) {
        constants$1347.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iPortState$VH() {
        return constants$1347.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT iPortState;
     * }
     */
    public static int iPortState$get(MemorySegment seg) {
        return (int)constants$1347.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT iPortState;
     * }
     */
    public static void iPortState$set(MemorySegment seg, int x) {
        constants$1347.const$4.set(seg, x);
    }
    public static int iPortState$get(MemorySegment seg, long index) {
        return (int)constants$1347.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void iPortState$set(MemorySegment seg, long index, int x) {
        constants$1347.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iActive$VH() {
        return constants$1347.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT iActive;
     * }
     */
    public static int iActive$get(MemorySegment seg) {
        return (int)constants$1347.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT iActive;
     * }
     */
    public static void iActive$set(MemorySegment seg, int x) {
        constants$1347.const$5.set(seg, x);
    }
    public static int iActive$get(MemorySegment seg, long index) {
        return (int)constants$1347.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void iActive$set(MemorySegment seg, long index, int x) {
        constants$1347.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


