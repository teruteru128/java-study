// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagCANDIDATELIST {
 *     DWORD dwSize;
 *     DWORD dwStyle;
 *     DWORD dwCount;
 *     DWORD dwSelection;
 *     DWORD dwPageStart;
 *     DWORD dwPageSize;
 *     DWORD dwOffset[1];
 * };
 * }
 */
public class tagCANDIDATELIST {

    public static MemoryLayout $LAYOUT() {
        return constants$4521.const$5;
    }
    public static VarHandle dwSize$VH() {
        return constants$4522.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSize;
     * }
     */
    public static int dwSize$get(MemorySegment seg) {
        return (int)constants$4522.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSize;
     * }
     */
    public static void dwSize$set(MemorySegment seg, int x) {
        constants$4522.const$0.set(seg, x);
    }
    public static int dwSize$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSize$set(MemorySegment seg, long index, int x) {
        constants$4522.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStyle$VH() {
        return constants$4522.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static int dwStyle$get(MemorySegment seg) {
        return (int)constants$4522.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static void dwStyle$set(MemorySegment seg, int x) {
        constants$4522.const$1.set(seg, x);
    }
    public static int dwStyle$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStyle$set(MemorySegment seg, long index, int x) {
        constants$4522.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCount$VH() {
        return constants$4522.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCount;
     * }
     */
    public static int dwCount$get(MemorySegment seg) {
        return (int)constants$4522.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCount;
     * }
     */
    public static void dwCount$set(MemorySegment seg, int x) {
        constants$4522.const$2.set(seg, x);
    }
    public static int dwCount$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCount$set(MemorySegment seg, long index, int x) {
        constants$4522.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwSelection$VH() {
        return constants$4522.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSelection;
     * }
     */
    public static int dwSelection$get(MemorySegment seg) {
        return (int)constants$4522.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSelection;
     * }
     */
    public static void dwSelection$set(MemorySegment seg, int x) {
        constants$4522.const$3.set(seg, x);
    }
    public static int dwSelection$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSelection$set(MemorySegment seg, long index, int x) {
        constants$4522.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPageStart$VH() {
        return constants$4522.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPageStart;
     * }
     */
    public static int dwPageStart$get(MemorySegment seg) {
        return (int)constants$4522.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPageStart;
     * }
     */
    public static void dwPageStart$set(MemorySegment seg, int x) {
        constants$4522.const$4.set(seg, x);
    }
    public static int dwPageStart$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPageStart$set(MemorySegment seg, long index, int x) {
        constants$4522.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPageSize$VH() {
        return constants$4522.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPageSize;
     * }
     */
    public static int dwPageSize$get(MemorySegment seg) {
        return (int)constants$4522.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPageSize;
     * }
     */
    public static void dwPageSize$set(MemorySegment seg, int x) {
        constants$4522.const$5.set(seg, x);
    }
    public static int dwPageSize$get(MemorySegment seg, long index) {
        return (int)constants$4522.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPageSize$set(MemorySegment seg, long index, int x) {
        constants$4522.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment dwOffset$slice(MemorySegment seg) {
        return seg.asSlice(24, 4);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


