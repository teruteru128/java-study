// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*clLogMessagesToStdoutAPPLE_fn)(char* errstr,void* private_info,unsigned long long cb,void* user_data);
 * }
 */
public interface clLogMessagesToStdoutAPPLE_fn {

    void apply(java.lang.foreign.MemorySegment errstr, java.lang.foreign.MemorySegment private_info, long cb, java.lang.foreign.MemorySegment user_data);
    static MemorySegment allocate(clLogMessagesToStdoutAPPLE_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$226.const$0, fi, constants$178.const$4, scope);
    }
    static clLogMessagesToStdoutAPPLE_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _errstr, java.lang.foreign.MemorySegment _private_info, long _cb, java.lang.foreign.MemorySegment _user_data) -> {
            try {
                constants$179.const$0.invokeExact(symbol, _errstr, _private_info, _cb, _user_data);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


