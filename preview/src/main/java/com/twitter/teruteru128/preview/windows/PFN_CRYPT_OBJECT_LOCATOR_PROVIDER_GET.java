// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET)(void* pPluginContext,struct _CRYPTOAPI_BLOB* pIdentifier,unsigned long dwNameType,struct _CRYPTOAPI_BLOB* pNameBlob,unsigned char** ppbContent,unsigned long* pcbContent,unsigned short** ppwszPassword,struct _CRYPTOAPI_BLOB** ppIdentifier);
 * }
 */
public interface PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET {

    int apply(java.lang.foreign.MemorySegment pPluginContext, java.lang.foreign.MemorySegment pIdentifier, int dwNameType, java.lang.foreign.MemorySegment pNameBlob, java.lang.foreign.MemorySegment ppbContent, java.lang.foreign.MemorySegment pcbContent, java.lang.foreign.MemorySegment ppwszPassword, java.lang.foreign.MemorySegment ppIdentifier);
    static MemorySegment allocate(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$2241.const$5, fi, constants$717.const$2, scope);
    }
    static PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _pPluginContext, java.lang.foreign.MemorySegment _pIdentifier, int _dwNameType, java.lang.foreign.MemorySegment _pNameBlob, java.lang.foreign.MemorySegment _ppbContent, java.lang.foreign.MemorySegment _pcbContent, java.lang.foreign.MemorySegment _ppwszPassword, java.lang.foreign.MemorySegment _ppIdentifier) -> {
            try {
                return (int)constants$2242.const$0.invokeExact(symbol, _pPluginContext, _pIdentifier, _dwNameType, _pNameBlob, _ppbContent, _pcbContent, _ppwszPassword, _ppIdentifier);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


