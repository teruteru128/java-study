// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagLOGCOLORSPACEA {
 *     DWORD lcsSignature;
 *     DWORD lcsVersion;
 *     DWORD lcsSize;
 *     LCSCSTYPE lcsCSType;
 *     LCSGAMUTMATCH lcsIntent;
 *     CIEXYZTRIPLE lcsEndpoints;
 *     DWORD lcsGammaRed;
 *     DWORD lcsGammaGreen;
 *     DWORD lcsGammaBlue;
 *     CHAR lcsFilename[260];
 * };
 * }
 */
public class tagLOGCOLORSPACEA {

    public static MemoryLayout $LAYOUT() {
        return constants$891.const$5;
    }
    public static VarHandle lcsSignature$VH() {
        return constants$892.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsSignature;
     * }
     */
    public static int lcsSignature$get(MemorySegment seg) {
        return (int)constants$892.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsSignature;
     * }
     */
    public static void lcsSignature$set(MemorySegment seg, int x) {
        constants$892.const$0.set(seg, x);
    }
    public static int lcsSignature$get(MemorySegment seg, long index) {
        return (int)constants$892.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsSignature$set(MemorySegment seg, long index, int x) {
        constants$892.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsVersion$VH() {
        return constants$892.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsVersion;
     * }
     */
    public static int lcsVersion$get(MemorySegment seg) {
        return (int)constants$892.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsVersion;
     * }
     */
    public static void lcsVersion$set(MemorySegment seg, int x) {
        constants$892.const$1.set(seg, x);
    }
    public static int lcsVersion$get(MemorySegment seg, long index) {
        return (int)constants$892.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsVersion$set(MemorySegment seg, long index, int x) {
        constants$892.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsSize$VH() {
        return constants$892.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsSize;
     * }
     */
    public static int lcsSize$get(MemorySegment seg) {
        return (int)constants$892.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsSize;
     * }
     */
    public static void lcsSize$set(MemorySegment seg, int x) {
        constants$892.const$2.set(seg, x);
    }
    public static int lcsSize$get(MemorySegment seg, long index) {
        return (int)constants$892.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsSize$set(MemorySegment seg, long index, int x) {
        constants$892.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsCSType$VH() {
        return constants$892.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LCSCSTYPE lcsCSType;
     * }
     */
    public static int lcsCSType$get(MemorySegment seg) {
        return (int)constants$892.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LCSCSTYPE lcsCSType;
     * }
     */
    public static void lcsCSType$set(MemorySegment seg, int x) {
        constants$892.const$3.set(seg, x);
    }
    public static int lcsCSType$get(MemorySegment seg, long index) {
        return (int)constants$892.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsCSType$set(MemorySegment seg, long index, int x) {
        constants$892.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsIntent$VH() {
        return constants$892.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LCSGAMUTMATCH lcsIntent;
     * }
     */
    public static int lcsIntent$get(MemorySegment seg) {
        return (int)constants$892.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LCSGAMUTMATCH lcsIntent;
     * }
     */
    public static void lcsIntent$set(MemorySegment seg, int x) {
        constants$892.const$4.set(seg, x);
    }
    public static int lcsIntent$get(MemorySegment seg, long index) {
        return (int)constants$892.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsIntent$set(MemorySegment seg, long index, int x) {
        constants$892.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lcsEndpoints$slice(MemorySegment seg) {
        return seg.asSlice(20, 36);
    }
    public static VarHandle lcsGammaRed$VH() {
        return constants$892.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsGammaRed;
     * }
     */
    public static int lcsGammaRed$get(MemorySegment seg) {
        return (int)constants$892.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsGammaRed;
     * }
     */
    public static void lcsGammaRed$set(MemorySegment seg, int x) {
        constants$892.const$5.set(seg, x);
    }
    public static int lcsGammaRed$get(MemorySegment seg, long index) {
        return (int)constants$892.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsGammaRed$set(MemorySegment seg, long index, int x) {
        constants$892.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsGammaGreen$VH() {
        return constants$893.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsGammaGreen;
     * }
     */
    public static int lcsGammaGreen$get(MemorySegment seg) {
        return (int)constants$893.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsGammaGreen;
     * }
     */
    public static void lcsGammaGreen$set(MemorySegment seg, int x) {
        constants$893.const$0.set(seg, x);
    }
    public static int lcsGammaGreen$get(MemorySegment seg, long index) {
        return (int)constants$893.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsGammaGreen$set(MemorySegment seg, long index, int x) {
        constants$893.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lcsGammaBlue$VH() {
        return constants$893.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD lcsGammaBlue;
     * }
     */
    public static int lcsGammaBlue$get(MemorySegment seg) {
        return (int)constants$893.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD lcsGammaBlue;
     * }
     */
    public static void lcsGammaBlue$set(MemorySegment seg, int x) {
        constants$893.const$1.set(seg, x);
    }
    public static int lcsGammaBlue$get(MemorySegment seg, long index) {
        return (int)constants$893.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lcsGammaBlue$set(MemorySegment seg, long index, int x) {
        constants$893.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lcsFilename$slice(MemorySegment seg) {
        return seg.asSlice(68, 260);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


