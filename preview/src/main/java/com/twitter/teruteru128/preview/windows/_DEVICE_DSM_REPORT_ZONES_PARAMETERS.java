// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DEVICE_DSM_REPORT_ZONES_PARAMETERS {
 *     DWORD Size;
 *     BYTE ReportOption;
 *     BYTE Partial;
 *     BYTE Reserved[2];
 * };
 * }
 */
public class _DEVICE_DSM_REPORT_ZONES_PARAMETERS {

    public static MemoryLayout $LAYOUT() {
        return constants$2458.const$4;
    }
    public static VarHandle Size$VH() {
        return constants$2458.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static int Size$get(MemorySegment seg) {
        return (int)constants$2458.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static void Size$set(MemorySegment seg, int x) {
        constants$2458.const$5.set(seg, x);
    }
    public static int Size$get(MemorySegment seg, long index) {
        return (int)constants$2458.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Size$set(MemorySegment seg, long index, int x) {
        constants$2458.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ReportOption$VH() {
        return constants$2459.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE ReportOption;
     * }
     */
    public static byte ReportOption$get(MemorySegment seg) {
        return (byte)constants$2459.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE ReportOption;
     * }
     */
    public static void ReportOption$set(MemorySegment seg, byte x) {
        constants$2459.const$0.set(seg, x);
    }
    public static byte ReportOption$get(MemorySegment seg, long index) {
        return (byte)constants$2459.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void ReportOption$set(MemorySegment seg, long index, byte x) {
        constants$2459.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Partial$VH() {
        return constants$2459.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE Partial;
     * }
     */
    public static byte Partial$get(MemorySegment seg) {
        return (byte)constants$2459.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE Partial;
     * }
     */
    public static void Partial$set(MemorySegment seg, byte x) {
        constants$2459.const$1.set(seg, x);
    }
    public static byte Partial$get(MemorySegment seg, long index) {
        return (byte)constants$2459.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Partial$set(MemorySegment seg, long index, byte x) {
        constants$2459.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Reserved$slice(MemorySegment seg) {
        return seg.asSlice(6, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


