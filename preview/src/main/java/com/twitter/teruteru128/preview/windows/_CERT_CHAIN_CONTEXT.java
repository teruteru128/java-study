// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_CHAIN_CONTEXT {
 *     DWORD cbSize;
 *     CERT_TRUST_STATUS TrustStatus;
 *     DWORD cChain;
 *     PCERT_SIMPLE_CHAIN* rgpChain;
 *     DWORD cLowerQualityChainContext;
 *     PCCERT_CHAIN_CONTEXT* rgpLowerQualityChainContext;
 *     BOOL fHasRevocationFreshnessTime;
 *     DWORD dwRevocationFreshnessTime;
 *     DWORD dwCreateFlags;
 *     GUID ChainId;
 * };
 * }
 */
public class _CERT_CHAIN_CONTEXT {

    public static MemoryLayout $LAYOUT() {
        return constants$2212.const$1;
    }
    public static VarHandle cbSize$VH() {
        return constants$2212.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$2212.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$2212.const$2.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$2212.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$2212.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment TrustStatus$slice(MemorySegment seg) {
        return seg.asSlice(4, 8);
    }
    public static VarHandle cChain$VH() {
        return constants$2212.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cChain;
     * }
     */
    public static int cChain$get(MemorySegment seg) {
        return (int)constants$2212.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cChain;
     * }
     */
    public static void cChain$set(MemorySegment seg, int x) {
        constants$2212.const$3.set(seg, x);
    }
    public static int cChain$get(MemorySegment seg, long index) {
        return (int)constants$2212.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cChain$set(MemorySegment seg, long index, int x) {
        constants$2212.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgpChain$VH() {
        return constants$2212.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_SIMPLE_CHAIN* rgpChain;
     * }
     */
    public static MemorySegment rgpChain$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2212.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_SIMPLE_CHAIN* rgpChain;
     * }
     */
    public static void rgpChain$set(MemorySegment seg, MemorySegment x) {
        constants$2212.const$4.set(seg, x);
    }
    public static MemorySegment rgpChain$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2212.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpChain$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2212.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cLowerQualityChainContext$VH() {
        return constants$2212.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cLowerQualityChainContext;
     * }
     */
    public static int cLowerQualityChainContext$get(MemorySegment seg) {
        return (int)constants$2212.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cLowerQualityChainContext;
     * }
     */
    public static void cLowerQualityChainContext$set(MemorySegment seg, int x) {
        constants$2212.const$5.set(seg, x);
    }
    public static int cLowerQualityChainContext$get(MemorySegment seg, long index) {
        return (int)constants$2212.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cLowerQualityChainContext$set(MemorySegment seg, long index, int x) {
        constants$2212.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgpLowerQualityChainContext$VH() {
        return constants$2213.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCCERT_CHAIN_CONTEXT* rgpLowerQualityChainContext;
     * }
     */
    public static MemorySegment rgpLowerQualityChainContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2213.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCCERT_CHAIN_CONTEXT* rgpLowerQualityChainContext;
     * }
     */
    public static void rgpLowerQualityChainContext$set(MemorySegment seg, MemorySegment x) {
        constants$2213.const$0.set(seg, x);
    }
    public static MemorySegment rgpLowerQualityChainContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2213.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpLowerQualityChainContext$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2213.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fHasRevocationFreshnessTime$VH() {
        return constants$2213.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOL fHasRevocationFreshnessTime;
     * }
     */
    public static int fHasRevocationFreshnessTime$get(MemorySegment seg) {
        return (int)constants$2213.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOL fHasRevocationFreshnessTime;
     * }
     */
    public static void fHasRevocationFreshnessTime$set(MemorySegment seg, int x) {
        constants$2213.const$1.set(seg, x);
    }
    public static int fHasRevocationFreshnessTime$get(MemorySegment seg, long index) {
        return (int)constants$2213.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void fHasRevocationFreshnessTime$set(MemorySegment seg, long index, int x) {
        constants$2213.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwRevocationFreshnessTime$VH() {
        return constants$2213.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwRevocationFreshnessTime;
     * }
     */
    public static int dwRevocationFreshnessTime$get(MemorySegment seg) {
        return (int)constants$2213.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwRevocationFreshnessTime;
     * }
     */
    public static void dwRevocationFreshnessTime$set(MemorySegment seg, int x) {
        constants$2213.const$2.set(seg, x);
    }
    public static int dwRevocationFreshnessTime$get(MemorySegment seg, long index) {
        return (int)constants$2213.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwRevocationFreshnessTime$set(MemorySegment seg, long index, int x) {
        constants$2213.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCreateFlags$VH() {
        return constants$2213.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCreateFlags;
     * }
     */
    public static int dwCreateFlags$get(MemorySegment seg) {
        return (int)constants$2213.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCreateFlags;
     * }
     */
    public static void dwCreateFlags$set(MemorySegment seg, int x) {
        constants$2213.const$3.set(seg, x);
    }
    public static int dwCreateFlags$get(MemorySegment seg, long index) {
        return (int)constants$2213.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCreateFlags$set(MemorySegment seg, long index, int x) {
        constants$2213.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ChainId$slice(MemorySegment seg) {
        return seg.asSlice(52, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


