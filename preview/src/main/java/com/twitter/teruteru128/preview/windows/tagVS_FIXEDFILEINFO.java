// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagVS_FIXEDFILEINFO {
 *     DWORD dwSignature;
 *     DWORD dwStrucVersion;
 *     DWORD dwFileVersionMS;
 *     DWORD dwFileVersionLS;
 *     DWORD dwProductVersionMS;
 *     DWORD dwProductVersionLS;
 *     DWORD dwFileFlagsMask;
 *     DWORD dwFileFlags;
 *     DWORD dwFileOS;
 *     DWORD dwFileType;
 *     DWORD dwFileSubtype;
 *     DWORD dwFileDateMS;
 *     DWORD dwFileDateLS;
 * };
 * }
 */
public class tagVS_FIXEDFILEINFO {

    public static MemoryLayout $LAYOUT() {
        return constants$1474.const$5;
    }
    public static VarHandle dwSignature$VH() {
        return constants$1475.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSignature;
     * }
     */
    public static int dwSignature$get(MemorySegment seg) {
        return (int)constants$1475.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSignature;
     * }
     */
    public static void dwSignature$set(MemorySegment seg, int x) {
        constants$1475.const$0.set(seg, x);
    }
    public static int dwSignature$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSignature$set(MemorySegment seg, long index, int x) {
        constants$1475.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStrucVersion$VH() {
        return constants$1475.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStrucVersion;
     * }
     */
    public static int dwStrucVersion$get(MemorySegment seg) {
        return (int)constants$1475.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStrucVersion;
     * }
     */
    public static void dwStrucVersion$set(MemorySegment seg, int x) {
        constants$1475.const$1.set(seg, x);
    }
    public static int dwStrucVersion$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStrucVersion$set(MemorySegment seg, long index, int x) {
        constants$1475.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileVersionMS$VH() {
        return constants$1475.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileVersionMS;
     * }
     */
    public static int dwFileVersionMS$get(MemorySegment seg) {
        return (int)constants$1475.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileVersionMS;
     * }
     */
    public static void dwFileVersionMS$set(MemorySegment seg, int x) {
        constants$1475.const$2.set(seg, x);
    }
    public static int dwFileVersionMS$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileVersionMS$set(MemorySegment seg, long index, int x) {
        constants$1475.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileVersionLS$VH() {
        return constants$1475.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileVersionLS;
     * }
     */
    public static int dwFileVersionLS$get(MemorySegment seg) {
        return (int)constants$1475.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileVersionLS;
     * }
     */
    public static void dwFileVersionLS$set(MemorySegment seg, int x) {
        constants$1475.const$3.set(seg, x);
    }
    public static int dwFileVersionLS$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileVersionLS$set(MemorySegment seg, long index, int x) {
        constants$1475.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProductVersionMS$VH() {
        return constants$1475.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProductVersionMS;
     * }
     */
    public static int dwProductVersionMS$get(MemorySegment seg) {
        return (int)constants$1475.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProductVersionMS;
     * }
     */
    public static void dwProductVersionMS$set(MemorySegment seg, int x) {
        constants$1475.const$4.set(seg, x);
    }
    public static int dwProductVersionMS$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProductVersionMS$set(MemorySegment seg, long index, int x) {
        constants$1475.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProductVersionLS$VH() {
        return constants$1475.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProductVersionLS;
     * }
     */
    public static int dwProductVersionLS$get(MemorySegment seg) {
        return (int)constants$1475.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProductVersionLS;
     * }
     */
    public static void dwProductVersionLS$set(MemorySegment seg, int x) {
        constants$1475.const$5.set(seg, x);
    }
    public static int dwProductVersionLS$get(MemorySegment seg, long index) {
        return (int)constants$1475.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProductVersionLS$set(MemorySegment seg, long index, int x) {
        constants$1475.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileFlagsMask$VH() {
        return constants$1476.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileFlagsMask;
     * }
     */
    public static int dwFileFlagsMask$get(MemorySegment seg) {
        return (int)constants$1476.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileFlagsMask;
     * }
     */
    public static void dwFileFlagsMask$set(MemorySegment seg, int x) {
        constants$1476.const$0.set(seg, x);
    }
    public static int dwFileFlagsMask$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileFlagsMask$set(MemorySegment seg, long index, int x) {
        constants$1476.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileFlags$VH() {
        return constants$1476.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileFlags;
     * }
     */
    public static int dwFileFlags$get(MemorySegment seg) {
        return (int)constants$1476.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileFlags;
     * }
     */
    public static void dwFileFlags$set(MemorySegment seg, int x) {
        constants$1476.const$1.set(seg, x);
    }
    public static int dwFileFlags$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileFlags$set(MemorySegment seg, long index, int x) {
        constants$1476.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileOS$VH() {
        return constants$1476.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileOS;
     * }
     */
    public static int dwFileOS$get(MemorySegment seg) {
        return (int)constants$1476.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileOS;
     * }
     */
    public static void dwFileOS$set(MemorySegment seg, int x) {
        constants$1476.const$2.set(seg, x);
    }
    public static int dwFileOS$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileOS$set(MemorySegment seg, long index, int x) {
        constants$1476.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileType$VH() {
        return constants$1476.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileType;
     * }
     */
    public static int dwFileType$get(MemorySegment seg) {
        return (int)constants$1476.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileType;
     * }
     */
    public static void dwFileType$set(MemorySegment seg, int x) {
        constants$1476.const$3.set(seg, x);
    }
    public static int dwFileType$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileType$set(MemorySegment seg, long index, int x) {
        constants$1476.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileSubtype$VH() {
        return constants$1476.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileSubtype;
     * }
     */
    public static int dwFileSubtype$get(MemorySegment seg) {
        return (int)constants$1476.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileSubtype;
     * }
     */
    public static void dwFileSubtype$set(MemorySegment seg, int x) {
        constants$1476.const$4.set(seg, x);
    }
    public static int dwFileSubtype$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileSubtype$set(MemorySegment seg, long index, int x) {
        constants$1476.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileDateMS$VH() {
        return constants$1476.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileDateMS;
     * }
     */
    public static int dwFileDateMS$get(MemorySegment seg) {
        return (int)constants$1476.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileDateMS;
     * }
     */
    public static void dwFileDateMS$set(MemorySegment seg, int x) {
        constants$1476.const$5.set(seg, x);
    }
    public static int dwFileDateMS$get(MemorySegment seg, long index) {
        return (int)constants$1476.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileDateMS$set(MemorySegment seg, long index, int x) {
        constants$1476.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileDateLS$VH() {
        return constants$1477.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileDateLS;
     * }
     */
    public static int dwFileDateLS$get(MemorySegment seg) {
        return (int)constants$1477.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileDateLS;
     * }
     */
    public static void dwFileDateLS$set(MemorySegment seg, int x) {
        constants$1477.const$0.set(seg, x);
    }
    public static int dwFileDateLS$get(MemorySegment seg, long index) {
        return (int)constants$1477.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileDateLS$set(MemorySegment seg, long index, int x) {
        constants$1477.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


