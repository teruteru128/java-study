// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CRYPT_PROVIDER_REF {
 *     ULONG dwInterface;
 *     PWSTR pszFunction;
 *     PWSTR pszProvider;
 *     ULONG cProperties;
 *     PCRYPT_PROPERTY_REF* rgpProperties;
 *     PCRYPT_IMAGE_REF pUM;
 *     PCRYPT_IMAGE_REF pKM;
 * };
 * }
 */
public class _CRYPT_PROVIDER_REF {

    public static MemoryLayout $LAYOUT() {
        return constants$1971.const$5;
    }
    public static VarHandle dwInterface$VH() {
        return constants$1972.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG dwInterface;
     * }
     */
    public static int dwInterface$get(MemorySegment seg) {
        return (int)constants$1972.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG dwInterface;
     * }
     */
    public static void dwInterface$set(MemorySegment seg, int x) {
        constants$1972.const$0.set(seg, x);
    }
    public static int dwInterface$get(MemorySegment seg, long index) {
        return (int)constants$1972.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwInterface$set(MemorySegment seg, long index, int x) {
        constants$1972.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszFunction$VH() {
        return constants$1972.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWSTR pszFunction;
     * }
     */
    public static MemorySegment pszFunction$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWSTR pszFunction;
     * }
     */
    public static void pszFunction$set(MemorySegment seg, MemorySegment x) {
        constants$1972.const$1.set(seg, x);
    }
    public static MemorySegment pszFunction$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pszFunction$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1972.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pszProvider$VH() {
        return constants$1972.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWSTR pszProvider;
     * }
     */
    public static MemorySegment pszProvider$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWSTR pszProvider;
     * }
     */
    public static void pszProvider$set(MemorySegment seg, MemorySegment x) {
        constants$1972.const$2.set(seg, x);
    }
    public static MemorySegment pszProvider$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pszProvider$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1972.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cProperties$VH() {
        return constants$1972.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cProperties;
     * }
     */
    public static int cProperties$get(MemorySegment seg) {
        return (int)constants$1972.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cProperties;
     * }
     */
    public static void cProperties$set(MemorySegment seg, int x) {
        constants$1972.const$3.set(seg, x);
    }
    public static int cProperties$get(MemorySegment seg, long index) {
        return (int)constants$1972.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cProperties$set(MemorySegment seg, long index, int x) {
        constants$1972.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgpProperties$VH() {
        return constants$1972.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_PROPERTY_REF* rgpProperties;
     * }
     */
    public static MemorySegment rgpProperties$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_PROPERTY_REF* rgpProperties;
     * }
     */
    public static void rgpProperties$set(MemorySegment seg, MemorySegment x) {
        constants$1972.const$4.set(seg, x);
    }
    public static MemorySegment rgpProperties$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpProperties$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1972.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pUM$VH() {
        return constants$1972.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_IMAGE_REF pUM;
     * }
     */
    public static MemorySegment pUM$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_IMAGE_REF pUM;
     * }
     */
    public static void pUM$set(MemorySegment seg, MemorySegment x) {
        constants$1972.const$5.set(seg, x);
    }
    public static MemorySegment pUM$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1972.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pUM$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1972.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pKM$VH() {
        return constants$1973.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_IMAGE_REF pKM;
     * }
     */
    public static MemorySegment pKM$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1973.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_IMAGE_REF pKM;
     * }
     */
    public static void pKM$set(MemorySegment seg, MemorySegment x) {
        constants$1973.const$0.set(seg, x);
    }
    public static MemorySegment pKM$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1973.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pKM$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1973.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


