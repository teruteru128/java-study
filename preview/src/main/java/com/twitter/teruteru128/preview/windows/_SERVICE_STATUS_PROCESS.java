// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _SERVICE_STATUS_PROCESS {
 *     DWORD dwServiceType;
 *     DWORD dwCurrentState;
 *     DWORD dwControlsAccepted;
 *     DWORD dwWin32ExitCode;
 *     DWORD dwServiceSpecificExitCode;
 *     DWORD dwCheckPoint;
 *     DWORD dwWaitHint;
 *     DWORD dwProcessId;
 *     DWORD dwServiceFlags;
 * };
 * }
 */
public class _SERVICE_STATUS_PROCESS {

    public static MemoryLayout $LAYOUT() {
        return constants$4489.const$1;
    }
    public static VarHandle dwServiceType$VH() {
        return constants$4489.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwServiceType;
     * }
     */
    public static int dwServiceType$get(MemorySegment seg) {
        return (int)constants$4489.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwServiceType;
     * }
     */
    public static void dwServiceType$set(MemorySegment seg, int x) {
        constants$4489.const$2.set(seg, x);
    }
    public static int dwServiceType$get(MemorySegment seg, long index) {
        return (int)constants$4489.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceType$set(MemorySegment seg, long index, int x) {
        constants$4489.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCurrentState$VH() {
        return constants$4489.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCurrentState;
     * }
     */
    public static int dwCurrentState$get(MemorySegment seg) {
        return (int)constants$4489.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCurrentState;
     * }
     */
    public static void dwCurrentState$set(MemorySegment seg, int x) {
        constants$4489.const$3.set(seg, x);
    }
    public static int dwCurrentState$get(MemorySegment seg, long index) {
        return (int)constants$4489.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCurrentState$set(MemorySegment seg, long index, int x) {
        constants$4489.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwControlsAccepted$VH() {
        return constants$4489.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwControlsAccepted;
     * }
     */
    public static int dwControlsAccepted$get(MemorySegment seg) {
        return (int)constants$4489.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwControlsAccepted;
     * }
     */
    public static void dwControlsAccepted$set(MemorySegment seg, int x) {
        constants$4489.const$4.set(seg, x);
    }
    public static int dwControlsAccepted$get(MemorySegment seg, long index) {
        return (int)constants$4489.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwControlsAccepted$set(MemorySegment seg, long index, int x) {
        constants$4489.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwWin32ExitCode$VH() {
        return constants$4489.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwWin32ExitCode;
     * }
     */
    public static int dwWin32ExitCode$get(MemorySegment seg) {
        return (int)constants$4489.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwWin32ExitCode;
     * }
     */
    public static void dwWin32ExitCode$set(MemorySegment seg, int x) {
        constants$4489.const$5.set(seg, x);
    }
    public static int dwWin32ExitCode$get(MemorySegment seg, long index) {
        return (int)constants$4489.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwWin32ExitCode$set(MemorySegment seg, long index, int x) {
        constants$4489.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwServiceSpecificExitCode$VH() {
        return constants$4490.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwServiceSpecificExitCode;
     * }
     */
    public static int dwServiceSpecificExitCode$get(MemorySegment seg) {
        return (int)constants$4490.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwServiceSpecificExitCode;
     * }
     */
    public static void dwServiceSpecificExitCode$set(MemorySegment seg, int x) {
        constants$4490.const$0.set(seg, x);
    }
    public static int dwServiceSpecificExitCode$get(MemorySegment seg, long index) {
        return (int)constants$4490.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceSpecificExitCode$set(MemorySegment seg, long index, int x) {
        constants$4490.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCheckPoint$VH() {
        return constants$4490.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCheckPoint;
     * }
     */
    public static int dwCheckPoint$get(MemorySegment seg) {
        return (int)constants$4490.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCheckPoint;
     * }
     */
    public static void dwCheckPoint$set(MemorySegment seg, int x) {
        constants$4490.const$1.set(seg, x);
    }
    public static int dwCheckPoint$get(MemorySegment seg, long index) {
        return (int)constants$4490.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCheckPoint$set(MemorySegment seg, long index, int x) {
        constants$4490.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwWaitHint$VH() {
        return constants$4490.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwWaitHint;
     * }
     */
    public static int dwWaitHint$get(MemorySegment seg) {
        return (int)constants$4490.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwWaitHint;
     * }
     */
    public static void dwWaitHint$set(MemorySegment seg, int x) {
        constants$4490.const$2.set(seg, x);
    }
    public static int dwWaitHint$get(MemorySegment seg, long index) {
        return (int)constants$4490.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwWaitHint$set(MemorySegment seg, long index, int x) {
        constants$4490.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProcessId$VH() {
        return constants$4490.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProcessId;
     * }
     */
    public static int dwProcessId$get(MemorySegment seg) {
        return (int)constants$4490.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProcessId;
     * }
     */
    public static void dwProcessId$set(MemorySegment seg, int x) {
        constants$4490.const$3.set(seg, x);
    }
    public static int dwProcessId$get(MemorySegment seg, long index) {
        return (int)constants$4490.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProcessId$set(MemorySegment seg, long index, int x) {
        constants$4490.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwServiceFlags$VH() {
        return constants$4490.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwServiceFlags;
     * }
     */
    public static int dwServiceFlags$get(MemorySegment seg) {
        return (int)constants$4490.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwServiceFlags;
     * }
     */
    public static void dwServiceFlags$set(MemorySegment seg, int x) {
        constants$4490.const$4.set(seg, x);
    }
    public static int dwServiceFlags$get(MemorySegment seg, long index) {
        return (int)constants$4490.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceFlags$set(MemorySegment seg, long index, int x) {
        constants$4490.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


