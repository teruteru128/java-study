// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CMC_STATUS_INFO {
 *     DWORD dwStatus;
 *     DWORD cBodyList;
 *     DWORD* rgdwBodyList;
 *     LPWSTR pwszStatusString;
 *     DWORD dwOtherInfoChoice;
 *     union {
 *         DWORD dwFailInfo;
 *         PCMC_PEND_INFO pPendInfo;
 *     };
 * };
 * }
 */
public class _CMC_STATUS_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2052.const$2;
    }
    public static VarHandle dwStatus$VH() {
        return constants$2052.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStatus;
     * }
     */
    public static int dwStatus$get(MemorySegment seg) {
        return (int)constants$2052.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStatus;
     * }
     */
    public static void dwStatus$set(MemorySegment seg, int x) {
        constants$2052.const$3.set(seg, x);
    }
    public static int dwStatus$get(MemorySegment seg, long index) {
        return (int)constants$2052.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStatus$set(MemorySegment seg, long index, int x) {
        constants$2052.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cBodyList$VH() {
        return constants$2052.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cBodyList;
     * }
     */
    public static int cBodyList$get(MemorySegment seg) {
        return (int)constants$2052.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cBodyList;
     * }
     */
    public static void cBodyList$set(MemorySegment seg, int x) {
        constants$2052.const$4.set(seg, x);
    }
    public static int cBodyList$get(MemorySegment seg, long index) {
        return (int)constants$2052.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cBodyList$set(MemorySegment seg, long index, int x) {
        constants$2052.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rgdwBodyList$VH() {
        return constants$2052.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD* rgdwBodyList;
     * }
     */
    public static MemorySegment rgdwBodyList$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2052.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD* rgdwBodyList;
     * }
     */
    public static void rgdwBodyList$set(MemorySegment seg, MemorySegment x) {
        constants$2052.const$5.set(seg, x);
    }
    public static MemorySegment rgdwBodyList$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2052.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void rgdwBodyList$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2052.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pwszStatusString$VH() {
        return constants$2053.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszStatusString;
     * }
     */
    public static MemorySegment pwszStatusString$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2053.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszStatusString;
     * }
     */
    public static void pwszStatusString$set(MemorySegment seg, MemorySegment x) {
        constants$2053.const$0.set(seg, x);
    }
    public static MemorySegment pwszStatusString$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2053.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszStatusString$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2053.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwOtherInfoChoice$VH() {
        return constants$2053.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwOtherInfoChoice;
     * }
     */
    public static int dwOtherInfoChoice$get(MemorySegment seg) {
        return (int)constants$2053.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwOtherInfoChoice;
     * }
     */
    public static void dwOtherInfoChoice$set(MemorySegment seg, int x) {
        constants$2053.const$1.set(seg, x);
    }
    public static int dwOtherInfoChoice$get(MemorySegment seg, long index) {
        return (int)constants$2053.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwOtherInfoChoice$set(MemorySegment seg, long index, int x) {
        constants$2053.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFailInfo$VH() {
        return constants$2053.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFailInfo;
     * }
     */
    public static int dwFailInfo$get(MemorySegment seg) {
        return (int)constants$2053.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFailInfo;
     * }
     */
    public static void dwFailInfo$set(MemorySegment seg, int x) {
        constants$2053.const$2.set(seg, x);
    }
    public static int dwFailInfo$get(MemorySegment seg, long index) {
        return (int)constants$2053.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFailInfo$set(MemorySegment seg, long index, int x) {
        constants$2053.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pPendInfo$VH() {
        return constants$2053.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMC_PEND_INFO pPendInfo;
     * }
     */
    public static MemorySegment pPendInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2053.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMC_PEND_INFO pPendInfo;
     * }
     */
    public static void pPendInfo$set(MemorySegment seg, MemorySegment x) {
        constants$2053.const$3.set(seg, x);
    }
    public static MemorySegment pPendInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2053.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pPendInfo$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2053.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


