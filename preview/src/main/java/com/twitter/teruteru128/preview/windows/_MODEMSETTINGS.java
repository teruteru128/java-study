// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _MODEMSETTINGS {
 *     DWORD dwActualSize;
 *     DWORD dwRequiredSize;
 *     DWORD dwDevSpecificOffset;
 *     DWORD dwDevSpecificSize;
 *     DWORD dwCallSetupFailTimer;
 *     DWORD dwInactivityTimeout;
 *     DWORD dwSpeakerVolume;
 *     DWORD dwSpeakerMode;
 *     DWORD dwPreferredModemOptions;
 *     DWORD dwNegotiatedModemOptions;
 *     DWORD dwNegotiatedDCERate;
 *     BYTE abVariablePortion[1];
 * };
 * }
 */
public class _MODEMSETTINGS {

    public static MemoryLayout $LAYOUT() {
        return constants$4518.const$2;
    }
    public static VarHandle dwActualSize$VH() {
        return constants$4518.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwActualSize;
     * }
     */
    public static int dwActualSize$get(MemorySegment seg) {
        return (int)constants$4518.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwActualSize;
     * }
     */
    public static void dwActualSize$set(MemorySegment seg, int x) {
        constants$4518.const$3.set(seg, x);
    }
    public static int dwActualSize$get(MemorySegment seg, long index) {
        return (int)constants$4518.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwActualSize$set(MemorySegment seg, long index, int x) {
        constants$4518.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwRequiredSize$VH() {
        return constants$4518.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwRequiredSize;
     * }
     */
    public static int dwRequiredSize$get(MemorySegment seg) {
        return (int)constants$4518.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwRequiredSize;
     * }
     */
    public static void dwRequiredSize$set(MemorySegment seg, int x) {
        constants$4518.const$4.set(seg, x);
    }
    public static int dwRequiredSize$get(MemorySegment seg, long index) {
        return (int)constants$4518.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwRequiredSize$set(MemorySegment seg, long index, int x) {
        constants$4518.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDevSpecificOffset$VH() {
        return constants$4518.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDevSpecificOffset;
     * }
     */
    public static int dwDevSpecificOffset$get(MemorySegment seg) {
        return (int)constants$4518.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDevSpecificOffset;
     * }
     */
    public static void dwDevSpecificOffset$set(MemorySegment seg, int x) {
        constants$4518.const$5.set(seg, x);
    }
    public static int dwDevSpecificOffset$get(MemorySegment seg, long index) {
        return (int)constants$4518.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDevSpecificOffset$set(MemorySegment seg, long index, int x) {
        constants$4518.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDevSpecificSize$VH() {
        return constants$4519.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDevSpecificSize;
     * }
     */
    public static int dwDevSpecificSize$get(MemorySegment seg) {
        return (int)constants$4519.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDevSpecificSize;
     * }
     */
    public static void dwDevSpecificSize$set(MemorySegment seg, int x) {
        constants$4519.const$0.set(seg, x);
    }
    public static int dwDevSpecificSize$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDevSpecificSize$set(MemorySegment seg, long index, int x) {
        constants$4519.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCallSetupFailTimer$VH() {
        return constants$4519.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCallSetupFailTimer;
     * }
     */
    public static int dwCallSetupFailTimer$get(MemorySegment seg) {
        return (int)constants$4519.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCallSetupFailTimer;
     * }
     */
    public static void dwCallSetupFailTimer$set(MemorySegment seg, int x) {
        constants$4519.const$1.set(seg, x);
    }
    public static int dwCallSetupFailTimer$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCallSetupFailTimer$set(MemorySegment seg, long index, int x) {
        constants$4519.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwInactivityTimeout$VH() {
        return constants$4519.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwInactivityTimeout;
     * }
     */
    public static int dwInactivityTimeout$get(MemorySegment seg) {
        return (int)constants$4519.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwInactivityTimeout;
     * }
     */
    public static void dwInactivityTimeout$set(MemorySegment seg, int x) {
        constants$4519.const$2.set(seg, x);
    }
    public static int dwInactivityTimeout$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwInactivityTimeout$set(MemorySegment seg, long index, int x) {
        constants$4519.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwSpeakerVolume$VH() {
        return constants$4519.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSpeakerVolume;
     * }
     */
    public static int dwSpeakerVolume$get(MemorySegment seg) {
        return (int)constants$4519.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSpeakerVolume;
     * }
     */
    public static void dwSpeakerVolume$set(MemorySegment seg, int x) {
        constants$4519.const$3.set(seg, x);
    }
    public static int dwSpeakerVolume$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSpeakerVolume$set(MemorySegment seg, long index, int x) {
        constants$4519.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwSpeakerMode$VH() {
        return constants$4519.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwSpeakerMode;
     * }
     */
    public static int dwSpeakerMode$get(MemorySegment seg) {
        return (int)constants$4519.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwSpeakerMode;
     * }
     */
    public static void dwSpeakerMode$set(MemorySegment seg, int x) {
        constants$4519.const$4.set(seg, x);
    }
    public static int dwSpeakerMode$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwSpeakerMode$set(MemorySegment seg, long index, int x) {
        constants$4519.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPreferredModemOptions$VH() {
        return constants$4519.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPreferredModemOptions;
     * }
     */
    public static int dwPreferredModemOptions$get(MemorySegment seg) {
        return (int)constants$4519.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPreferredModemOptions;
     * }
     */
    public static void dwPreferredModemOptions$set(MemorySegment seg, int x) {
        constants$4519.const$5.set(seg, x);
    }
    public static int dwPreferredModemOptions$get(MemorySegment seg, long index) {
        return (int)constants$4519.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPreferredModemOptions$set(MemorySegment seg, long index, int x) {
        constants$4519.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNegotiatedModemOptions$VH() {
        return constants$4520.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNegotiatedModemOptions;
     * }
     */
    public static int dwNegotiatedModemOptions$get(MemorySegment seg) {
        return (int)constants$4520.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNegotiatedModemOptions;
     * }
     */
    public static void dwNegotiatedModemOptions$set(MemorySegment seg, int x) {
        constants$4520.const$0.set(seg, x);
    }
    public static int dwNegotiatedModemOptions$get(MemorySegment seg, long index) {
        return (int)constants$4520.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNegotiatedModemOptions$set(MemorySegment seg, long index, int x) {
        constants$4520.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNegotiatedDCERate$VH() {
        return constants$4520.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNegotiatedDCERate;
     * }
     */
    public static int dwNegotiatedDCERate$get(MemorySegment seg) {
        return (int)constants$4520.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNegotiatedDCERate;
     * }
     */
    public static void dwNegotiatedDCERate$set(MemorySegment seg, int x) {
        constants$4520.const$1.set(seg, x);
    }
    public static int dwNegotiatedDCERate$get(MemorySegment seg, long index) {
        return (int)constants$4520.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNegotiatedDCERate$set(MemorySegment seg, long index, int x) {
        constants$4520.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment abVariablePortion$slice(MemorySegment seg) {
        return seg.asSlice(44, 1);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


