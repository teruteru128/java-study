// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clSetKernelExecInfoARM_fn)(struct _cl_kernel* kernel,unsigned int param_name,unsigned long long param_value_size,void* param_value);
 * }
 */
public interface clSetKernelExecInfoARM_fn {

    int apply(java.lang.foreign.MemorySegment kernel, int param_name, long param_value_size, java.lang.foreign.MemorySegment param_value);
    static MemorySegment allocate(clSetKernelExecInfoARM_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$243.const$2, fi, constants$189.const$4, scope);
    }
    static clSetKernelExecInfoARM_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _kernel, int _param_name, long _param_value_size, java.lang.foreign.MemorySegment _param_value) -> {
            try {
                return (int)constants$243.const$3.invokeExact(symbol, _kernel, _param_name, _param_value_size, _param_value);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


