// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct STORAGE_BREAK_RESERVATION_REQUEST {
 *     DWORD Length;
 *     BYTE _unused;
 *     BYTE PathId;
 *     BYTE TargetId;
 *     BYTE Lun;
 * };
 * }
 */
public class STORAGE_BREAK_RESERVATION_REQUEST {

    public static MemoryLayout $LAYOUT() {
        return constants$2375.const$4;
    }
    public static VarHandle Length$VH() {
        return constants$2375.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static int Length$get(MemorySegment seg) {
        return (int)constants$2375.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static void Length$set(MemorySegment seg, int x) {
        constants$2375.const$5.set(seg, x);
    }
    public static int Length$get(MemorySegment seg, long index) {
        return (int)constants$2375.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Length$set(MemorySegment seg, long index, int x) {
        constants$2375.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle _unused$VH() {
        return constants$2376.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE _unused;
     * }
     */
    public static byte _unused$get(MemorySegment seg) {
        return (byte)constants$2376.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE _unused;
     * }
     */
    public static void _unused$set(MemorySegment seg, byte x) {
        constants$2376.const$0.set(seg, x);
    }
    public static byte _unused$get(MemorySegment seg, long index) {
        return (byte)constants$2376.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void _unused$set(MemorySegment seg, long index, byte x) {
        constants$2376.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle PathId$VH() {
        return constants$2376.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE PathId;
     * }
     */
    public static byte PathId$get(MemorySegment seg) {
        return (byte)constants$2376.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE PathId;
     * }
     */
    public static void PathId$set(MemorySegment seg, byte x) {
        constants$2376.const$1.set(seg, x);
    }
    public static byte PathId$get(MemorySegment seg, long index) {
        return (byte)constants$2376.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void PathId$set(MemorySegment seg, long index, byte x) {
        constants$2376.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TargetId$VH() {
        return constants$2376.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE TargetId;
     * }
     */
    public static byte TargetId$get(MemorySegment seg) {
        return (byte)constants$2376.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE TargetId;
     * }
     */
    public static void TargetId$set(MemorySegment seg, byte x) {
        constants$2376.const$2.set(seg, x);
    }
    public static byte TargetId$get(MemorySegment seg, long index) {
        return (byte)constants$2376.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void TargetId$set(MemorySegment seg, long index, byte x) {
        constants$2376.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Lun$VH() {
        return constants$2376.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE Lun;
     * }
     */
    public static byte Lun$get(MemorySegment seg) {
        return (byte)constants$2376.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE Lun;
     * }
     */
    public static void Lun$set(MemorySegment seg, byte x) {
        constants$2376.const$3.set(seg, x);
    }
    public static byte Lun$get(MemorySegment seg, long index) {
        return (byte)constants$2376.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Lun$set(MemorySegment seg, long index, byte x) {
        constants$2376.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


