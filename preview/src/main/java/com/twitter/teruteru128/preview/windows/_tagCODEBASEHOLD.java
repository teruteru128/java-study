// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _tagCODEBASEHOLD {
 *     ULONG cbSize;
 *     LPWSTR szDistUnit;
 *     LPWSTR szCodeBase;
 *     DWORD dwVersionMS;
 *     DWORD dwVersionLS;
 *     DWORD dwStyle;
 * };
 * }
 */
public class _tagCODEBASEHOLD {

    public static MemoryLayout $LAYOUT() {
        return constants$4297.const$4;
    }
    public static VarHandle cbSize$VH() {
        return constants$4297.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$4297.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$4297.const$5.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$4297.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$4297.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle szDistUnit$VH() {
        return constants$4298.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR szDistUnit;
     * }
     */
    public static MemorySegment szDistUnit$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4298.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR szDistUnit;
     * }
     */
    public static void szDistUnit$set(MemorySegment seg, MemorySegment x) {
        constants$4298.const$0.set(seg, x);
    }
    public static MemorySegment szDistUnit$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4298.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void szDistUnit$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4298.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle szCodeBase$VH() {
        return constants$4298.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR szCodeBase;
     * }
     */
    public static MemorySegment szCodeBase$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$4298.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR szCodeBase;
     * }
     */
    public static void szCodeBase$set(MemorySegment seg, MemorySegment x) {
        constants$4298.const$1.set(seg, x);
    }
    public static MemorySegment szCodeBase$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$4298.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void szCodeBase$set(MemorySegment seg, long index, MemorySegment x) {
        constants$4298.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwVersionMS$VH() {
        return constants$4298.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVersionMS;
     * }
     */
    public static int dwVersionMS$get(MemorySegment seg) {
        return (int)constants$4298.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVersionMS;
     * }
     */
    public static void dwVersionMS$set(MemorySegment seg, int x) {
        constants$4298.const$2.set(seg, x);
    }
    public static int dwVersionMS$get(MemorySegment seg, long index) {
        return (int)constants$4298.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVersionMS$set(MemorySegment seg, long index, int x) {
        constants$4298.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwVersionLS$VH() {
        return constants$4298.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVersionLS;
     * }
     */
    public static int dwVersionLS$get(MemorySegment seg) {
        return (int)constants$4298.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVersionLS;
     * }
     */
    public static void dwVersionLS$set(MemorySegment seg, int x) {
        constants$4298.const$3.set(seg, x);
    }
    public static int dwVersionLS$get(MemorySegment seg, long index) {
        return (int)constants$4298.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVersionLS$set(MemorySegment seg, long index, int x) {
        constants$4298.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStyle$VH() {
        return constants$4298.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static int dwStyle$get(MemorySegment seg) {
        return (int)constants$4298.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static void dwStyle$set(MemorySegment seg, int x) {
        constants$4298.const$4.set(seg, x);
    }
    public static int dwStyle$get(MemorySegment seg, long index) {
        return (int)constants$4298.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStyle$set(MemorySegment seg, long index, int x) {
        constants$4298.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


