// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _SD_CHANGE_MACHINE_SID_OUTPUT {
 *     DWORDLONG NumSDChangedSuccess;
 *     DWORDLONG NumSDChangedFail;
 *     DWORDLONG NumSDUnused;
 *     DWORDLONG NumSDTotal;
 *     DWORDLONG NumMftSDChangedSuccess;
 *     DWORDLONG NumMftSDChangedFail;
 *     DWORDLONG NumMftSDTotal;
 * };
 * }
 */
public class _SD_CHANGE_MACHINE_SID_OUTPUT {

    public static MemoryLayout $LAYOUT() {
        return constants$2671.const$2;
    }
    public static VarHandle NumSDChangedSuccess$VH() {
        return constants$2671.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumSDChangedSuccess;
     * }
     */
    public static long NumSDChangedSuccess$get(MemorySegment seg) {
        return (long)constants$2671.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumSDChangedSuccess;
     * }
     */
    public static void NumSDChangedSuccess$set(MemorySegment seg, long x) {
        constants$2671.const$3.set(seg, x);
    }
    public static long NumSDChangedSuccess$get(MemorySegment seg, long index) {
        return (long)constants$2671.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void NumSDChangedSuccess$set(MemorySegment seg, long index, long x) {
        constants$2671.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumSDChangedFail$VH() {
        return constants$2671.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumSDChangedFail;
     * }
     */
    public static long NumSDChangedFail$get(MemorySegment seg) {
        return (long)constants$2671.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumSDChangedFail;
     * }
     */
    public static void NumSDChangedFail$set(MemorySegment seg, long x) {
        constants$2671.const$4.set(seg, x);
    }
    public static long NumSDChangedFail$get(MemorySegment seg, long index) {
        return (long)constants$2671.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void NumSDChangedFail$set(MemorySegment seg, long index, long x) {
        constants$2671.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumSDUnused$VH() {
        return constants$2671.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumSDUnused;
     * }
     */
    public static long NumSDUnused$get(MemorySegment seg) {
        return (long)constants$2671.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumSDUnused;
     * }
     */
    public static void NumSDUnused$set(MemorySegment seg, long x) {
        constants$2671.const$5.set(seg, x);
    }
    public static long NumSDUnused$get(MemorySegment seg, long index) {
        return (long)constants$2671.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void NumSDUnused$set(MemorySegment seg, long index, long x) {
        constants$2671.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumSDTotal$VH() {
        return constants$2672.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumSDTotal;
     * }
     */
    public static long NumSDTotal$get(MemorySegment seg) {
        return (long)constants$2672.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumSDTotal;
     * }
     */
    public static void NumSDTotal$set(MemorySegment seg, long x) {
        constants$2672.const$0.set(seg, x);
    }
    public static long NumSDTotal$get(MemorySegment seg, long index) {
        return (long)constants$2672.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void NumSDTotal$set(MemorySegment seg, long index, long x) {
        constants$2672.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumMftSDChangedSuccess$VH() {
        return constants$2672.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumMftSDChangedSuccess;
     * }
     */
    public static long NumMftSDChangedSuccess$get(MemorySegment seg) {
        return (long)constants$2672.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumMftSDChangedSuccess;
     * }
     */
    public static void NumMftSDChangedSuccess$set(MemorySegment seg, long x) {
        constants$2672.const$1.set(seg, x);
    }
    public static long NumMftSDChangedSuccess$get(MemorySegment seg, long index) {
        return (long)constants$2672.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void NumMftSDChangedSuccess$set(MemorySegment seg, long index, long x) {
        constants$2672.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumMftSDChangedFail$VH() {
        return constants$2672.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumMftSDChangedFail;
     * }
     */
    public static long NumMftSDChangedFail$get(MemorySegment seg) {
        return (long)constants$2672.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumMftSDChangedFail;
     * }
     */
    public static void NumMftSDChangedFail$set(MemorySegment seg, long x) {
        constants$2672.const$2.set(seg, x);
    }
    public static long NumMftSDChangedFail$get(MemorySegment seg, long index) {
        return (long)constants$2672.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void NumMftSDChangedFail$set(MemorySegment seg, long index, long x) {
        constants$2672.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NumMftSDTotal$VH() {
        return constants$2672.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NumMftSDTotal;
     * }
     */
    public static long NumMftSDTotal$get(MemorySegment seg) {
        return (long)constants$2672.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NumMftSDTotal;
     * }
     */
    public static void NumMftSDTotal$set(MemorySegment seg, long x) {
        constants$2672.const$3.set(seg, x);
    }
    public static long NumMftSDTotal$get(MemorySegment seg, long index) {
        return (long)constants$2672.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void NumMftSDTotal$set(MemorySegment seg, long index, long x) {
        constants$2672.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


