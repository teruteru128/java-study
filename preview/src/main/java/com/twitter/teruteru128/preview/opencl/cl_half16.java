// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * union {
 *     cl_half s[16];
 *     struct {
 *         cl_half x;
 *         cl_half y;
 *         cl_half z;
 *         cl_half w;
 *         cl_half __spacer4;
 *         cl_half __spacer5;
 *         cl_half __spacer6;
 *         cl_half __spacer7;
 *         cl_half __spacer8;
 *         cl_half __spacer9;
 *         cl_half sa;
 *         cl_half sb;
 *         cl_half sc;
 *         cl_half sd;
 *         cl_half se;
 *         cl_half sf;
 *     };
 *     struct {
 *         cl_half s0;
 *         cl_half s1;
 *         cl_half s2;
 *         cl_half s3;
 *         cl_half s4;
 *         cl_half s5;
 *         cl_half s6;
 *         cl_half s7;
 *         cl_half s8;
 *         cl_half s9;
 *         cl_half sA;
 *         cl_half sB;
 *         cl_half sC;
 *         cl_half sD;
 *         cl_half sE;
 *         cl_half sF;
 *     };
 *     struct {
 *         cl_half8 lo;
 *         cl_half8 hi;
 *     };
 * };
 * }
 */
public class cl_half16 {

    public static MemoryLayout $LAYOUT() {
        return constants$106.const$5;
    }
    public static MemorySegment s$slice(MemorySegment seg) {
        return seg.asSlice(0, 32);
    }
    public static VarHandle x$VH() {
        return constants$107.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half x;
     * }
     */
    public static short x$get(MemorySegment seg) {
        return (short)constants$107.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half x;
     * }
     */
    public static void x$set(MemorySegment seg, short x) {
        constants$107.const$0.set(seg, x);
    }
    public static short x$get(MemorySegment seg, long index) {
        return (short)constants$107.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, short x) {
        constants$107.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$107.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half y;
     * }
     */
    public static short y$get(MemorySegment seg) {
        return (short)constants$107.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half y;
     * }
     */
    public static void y$set(MemorySegment seg, short x) {
        constants$107.const$1.set(seg, x);
    }
    public static short y$get(MemorySegment seg, long index) {
        return (short)constants$107.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, short x) {
        constants$107.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle z$VH() {
        return constants$107.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half z;
     * }
     */
    public static short z$get(MemorySegment seg) {
        return (short)constants$107.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half z;
     * }
     */
    public static void z$set(MemorySegment seg, short x) {
        constants$107.const$2.set(seg, x);
    }
    public static short z$get(MemorySegment seg, long index) {
        return (short)constants$107.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void z$set(MemorySegment seg, long index, short x) {
        constants$107.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle w$VH() {
        return constants$107.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half w;
     * }
     */
    public static short w$get(MemorySegment seg) {
        return (short)constants$107.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half w;
     * }
     */
    public static void w$set(MemorySegment seg, short x) {
        constants$107.const$3.set(seg, x);
    }
    public static short w$get(MemorySegment seg, long index) {
        return (short)constants$107.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void w$set(MemorySegment seg, long index, short x) {
        constants$107.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer4$VH() {
        return constants$107.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer4;
     * }
     */
    public static short __spacer4$get(MemorySegment seg) {
        return (short)constants$107.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer4;
     * }
     */
    public static void __spacer4$set(MemorySegment seg, short x) {
        constants$107.const$4.set(seg, x);
    }
    public static short __spacer4$get(MemorySegment seg, long index) {
        return (short)constants$107.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer4$set(MemorySegment seg, long index, short x) {
        constants$107.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer5$VH() {
        return constants$107.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer5;
     * }
     */
    public static short __spacer5$get(MemorySegment seg) {
        return (short)constants$107.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer5;
     * }
     */
    public static void __spacer5$set(MemorySegment seg, short x) {
        constants$107.const$5.set(seg, x);
    }
    public static short __spacer5$get(MemorySegment seg, long index) {
        return (short)constants$107.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer5$set(MemorySegment seg, long index, short x) {
        constants$107.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer6$VH() {
        return constants$108.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer6;
     * }
     */
    public static short __spacer6$get(MemorySegment seg) {
        return (short)constants$108.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer6;
     * }
     */
    public static void __spacer6$set(MemorySegment seg, short x) {
        constants$108.const$0.set(seg, x);
    }
    public static short __spacer6$get(MemorySegment seg, long index) {
        return (short)constants$108.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer6$set(MemorySegment seg, long index, short x) {
        constants$108.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer7$VH() {
        return constants$108.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer7;
     * }
     */
    public static short __spacer7$get(MemorySegment seg) {
        return (short)constants$108.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer7;
     * }
     */
    public static void __spacer7$set(MemorySegment seg, short x) {
        constants$108.const$1.set(seg, x);
    }
    public static short __spacer7$get(MemorySegment seg, long index) {
        return (short)constants$108.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer7$set(MemorySegment seg, long index, short x) {
        constants$108.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer8$VH() {
        return constants$108.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer8;
     * }
     */
    public static short __spacer8$get(MemorySegment seg) {
        return (short)constants$108.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer8;
     * }
     */
    public static void __spacer8$set(MemorySegment seg, short x) {
        constants$108.const$2.set(seg, x);
    }
    public static short __spacer8$get(MemorySegment seg, long index) {
        return (short)constants$108.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer8$set(MemorySegment seg, long index, short x) {
        constants$108.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle __spacer9$VH() {
        return constants$108.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half __spacer9;
     * }
     */
    public static short __spacer9$get(MemorySegment seg) {
        return (short)constants$108.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half __spacer9;
     * }
     */
    public static void __spacer9$set(MemorySegment seg, short x) {
        constants$108.const$3.set(seg, x);
    }
    public static short __spacer9$get(MemorySegment seg, long index) {
        return (short)constants$108.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void __spacer9$set(MemorySegment seg, long index, short x) {
        constants$108.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sa$VH() {
        return constants$108.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sa;
     * }
     */
    public static short sa$get(MemorySegment seg) {
        return (short)constants$108.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sa;
     * }
     */
    public static void sa$set(MemorySegment seg, short x) {
        constants$108.const$4.set(seg, x);
    }
    public static short sa$get(MemorySegment seg, long index) {
        return (short)constants$108.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void sa$set(MemorySegment seg, long index, short x) {
        constants$108.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sb$VH() {
        return constants$108.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sb;
     * }
     */
    public static short sb$get(MemorySegment seg) {
        return (short)constants$108.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sb;
     * }
     */
    public static void sb$set(MemorySegment seg, short x) {
        constants$108.const$5.set(seg, x);
    }
    public static short sb$get(MemorySegment seg, long index) {
        return (short)constants$108.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void sb$set(MemorySegment seg, long index, short x) {
        constants$108.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sc$VH() {
        return constants$109.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sc;
     * }
     */
    public static short sc$get(MemorySegment seg) {
        return (short)constants$109.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sc;
     * }
     */
    public static void sc$set(MemorySegment seg, short x) {
        constants$109.const$0.set(seg, x);
    }
    public static short sc$get(MemorySegment seg, long index) {
        return (short)constants$109.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sc$set(MemorySegment seg, long index, short x) {
        constants$109.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sd$VH() {
        return constants$109.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sd;
     * }
     */
    public static short sd$get(MemorySegment seg) {
        return (short)constants$109.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sd;
     * }
     */
    public static void sd$set(MemorySegment seg, short x) {
        constants$109.const$1.set(seg, x);
    }
    public static short sd$get(MemorySegment seg, long index) {
        return (short)constants$109.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void sd$set(MemorySegment seg, long index, short x) {
        constants$109.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle se$VH() {
        return constants$109.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half se;
     * }
     */
    public static short se$get(MemorySegment seg) {
        return (short)constants$109.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half se;
     * }
     */
    public static void se$set(MemorySegment seg, short x) {
        constants$109.const$2.set(seg, x);
    }
    public static short se$get(MemorySegment seg, long index) {
        return (short)constants$109.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void se$set(MemorySegment seg, long index, short x) {
        constants$109.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sf$VH() {
        return constants$109.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sf;
     * }
     */
    public static short sf$get(MemorySegment seg) {
        return (short)constants$109.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sf;
     * }
     */
    public static void sf$set(MemorySegment seg, short x) {
        constants$109.const$3.set(seg, x);
    }
    public static short sf$get(MemorySegment seg, long index) {
        return (short)constants$109.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sf$set(MemorySegment seg, long index, short x) {
        constants$109.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s0$VH() {
        return constants$109.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s0;
     * }
     */
    public static short s0$get(MemorySegment seg) {
        return (short)constants$109.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s0;
     * }
     */
    public static void s0$set(MemorySegment seg, short x) {
        constants$109.const$4.set(seg, x);
    }
    public static short s0$get(MemorySegment seg, long index) {
        return (short)constants$109.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s0$set(MemorySegment seg, long index, short x) {
        constants$109.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s1$VH() {
        return constants$109.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s1;
     * }
     */
    public static short s1$get(MemorySegment seg) {
        return (short)constants$109.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s1;
     * }
     */
    public static void s1$set(MemorySegment seg, short x) {
        constants$109.const$5.set(seg, x);
    }
    public static short s1$get(MemorySegment seg, long index) {
        return (short)constants$109.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s1$set(MemorySegment seg, long index, short x) {
        constants$109.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s2$VH() {
        return constants$110.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s2;
     * }
     */
    public static short s2$get(MemorySegment seg) {
        return (short)constants$110.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s2;
     * }
     */
    public static void s2$set(MemorySegment seg, short x) {
        constants$110.const$0.set(seg, x);
    }
    public static short s2$get(MemorySegment seg, long index) {
        return (short)constants$110.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s2$set(MemorySegment seg, long index, short x) {
        constants$110.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s3$VH() {
        return constants$110.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s3;
     * }
     */
    public static short s3$get(MemorySegment seg) {
        return (short)constants$110.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s3;
     * }
     */
    public static void s3$set(MemorySegment seg, short x) {
        constants$110.const$1.set(seg, x);
    }
    public static short s3$get(MemorySegment seg, long index) {
        return (short)constants$110.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void s3$set(MemorySegment seg, long index, short x) {
        constants$110.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s4$VH() {
        return constants$110.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s4;
     * }
     */
    public static short s4$get(MemorySegment seg) {
        return (short)constants$110.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s4;
     * }
     */
    public static void s4$set(MemorySegment seg, short x) {
        constants$110.const$2.set(seg, x);
    }
    public static short s4$get(MemorySegment seg, long index) {
        return (short)constants$110.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void s4$set(MemorySegment seg, long index, short x) {
        constants$110.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s5$VH() {
        return constants$110.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s5;
     * }
     */
    public static short s5$get(MemorySegment seg) {
        return (short)constants$110.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s5;
     * }
     */
    public static void s5$set(MemorySegment seg, short x) {
        constants$110.const$3.set(seg, x);
    }
    public static short s5$get(MemorySegment seg, long index) {
        return (short)constants$110.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void s5$set(MemorySegment seg, long index, short x) {
        constants$110.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s6$VH() {
        return constants$110.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s6;
     * }
     */
    public static short s6$get(MemorySegment seg) {
        return (short)constants$110.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s6;
     * }
     */
    public static void s6$set(MemorySegment seg, short x) {
        constants$110.const$4.set(seg, x);
    }
    public static short s6$get(MemorySegment seg, long index) {
        return (short)constants$110.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void s6$set(MemorySegment seg, long index, short x) {
        constants$110.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s7$VH() {
        return constants$110.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s7;
     * }
     */
    public static short s7$get(MemorySegment seg) {
        return (short)constants$110.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s7;
     * }
     */
    public static void s7$set(MemorySegment seg, short x) {
        constants$110.const$5.set(seg, x);
    }
    public static short s7$get(MemorySegment seg, long index) {
        return (short)constants$110.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void s7$set(MemorySegment seg, long index, short x) {
        constants$110.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s8$VH() {
        return constants$111.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s8;
     * }
     */
    public static short s8$get(MemorySegment seg) {
        return (short)constants$111.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s8;
     * }
     */
    public static void s8$set(MemorySegment seg, short x) {
        constants$111.const$0.set(seg, x);
    }
    public static short s8$get(MemorySegment seg, long index) {
        return (short)constants$111.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void s8$set(MemorySegment seg, long index, short x) {
        constants$111.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle s9$VH() {
        return constants$111.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half s9;
     * }
     */
    public static short s9$get(MemorySegment seg) {
        return (short)constants$111.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half s9;
     * }
     */
    public static void s9$set(MemorySegment seg, short x) {
        constants$111.const$1.set(seg, x);
    }
    public static short s9$get(MemorySegment seg, long index) {
        return (short)constants$111.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void s9$set(MemorySegment seg, long index, short x) {
        constants$111.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sA$VH() {
        return constants$111.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sA;
     * }
     */
    public static short sA$get(MemorySegment seg) {
        return (short)constants$111.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sA;
     * }
     */
    public static void sA$set(MemorySegment seg, short x) {
        constants$111.const$2.set(seg, x);
    }
    public static short sA$get(MemorySegment seg, long index) {
        return (short)constants$111.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void sA$set(MemorySegment seg, long index, short x) {
        constants$111.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sB$VH() {
        return constants$111.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sB;
     * }
     */
    public static short sB$get(MemorySegment seg) {
        return (short)constants$111.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sB;
     * }
     */
    public static void sB$set(MemorySegment seg, short x) {
        constants$111.const$3.set(seg, x);
    }
    public static short sB$get(MemorySegment seg, long index) {
        return (short)constants$111.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void sB$set(MemorySegment seg, long index, short x) {
        constants$111.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sC$VH() {
        return constants$111.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sC;
     * }
     */
    public static short sC$get(MemorySegment seg) {
        return (short)constants$111.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sC;
     * }
     */
    public static void sC$set(MemorySegment seg, short x) {
        constants$111.const$4.set(seg, x);
    }
    public static short sC$get(MemorySegment seg, long index) {
        return (short)constants$111.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void sC$set(MemorySegment seg, long index, short x) {
        constants$111.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sD$VH() {
        return constants$111.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sD;
     * }
     */
    public static short sD$get(MemorySegment seg) {
        return (short)constants$111.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sD;
     * }
     */
    public static void sD$set(MemorySegment seg, short x) {
        constants$111.const$5.set(seg, x);
    }
    public static short sD$get(MemorySegment seg, long index) {
        return (short)constants$111.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void sD$set(MemorySegment seg, long index, short x) {
        constants$111.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sE$VH() {
        return constants$112.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sE;
     * }
     */
    public static short sE$get(MemorySegment seg) {
        return (short)constants$112.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sE;
     * }
     */
    public static void sE$set(MemorySegment seg, short x) {
        constants$112.const$0.set(seg, x);
    }
    public static short sE$get(MemorySegment seg, long index) {
        return (short)constants$112.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void sE$set(MemorySegment seg, long index, short x) {
        constants$112.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle sF$VH() {
        return constants$112.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_half sF;
     * }
     */
    public static short sF$get(MemorySegment seg) {
        return (short)constants$112.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_half sF;
     * }
     */
    public static void sF$set(MemorySegment seg, short x) {
        constants$112.const$1.set(seg, x);
    }
    public static short sF$get(MemorySegment seg, long index) {
        return (short)constants$112.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void sF$set(MemorySegment seg, long index, short x) {
        constants$112.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment lo$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static MemorySegment hi$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


