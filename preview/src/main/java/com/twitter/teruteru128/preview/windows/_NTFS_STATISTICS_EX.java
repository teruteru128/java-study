// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _NTFS_STATISTICS_EX {
 *     DWORD LogFileFullExceptions;
 *     DWORD OtherExceptions;
 *     DWORDLONG MftReads;
 *     DWORDLONG MftReadBytes;
 *     DWORDLONG MftWrites;
 *     DWORDLONG MftWriteBytes;
 *     struct  MftWritesUserLevel;
 *     DWORD MftWritesFlushForLogFileFull;
 *     DWORD MftWritesLazyWriter;
 *     DWORD MftWritesUserRequest;
 *     DWORDLONG Mft2Writes;
 *     DWORDLONG Mft2WriteBytes;
 *     struct  Mft2WritesUserLevel;
 *     DWORD Mft2WritesFlushForLogFileFull;
 *     DWORD Mft2WritesLazyWriter;
 *     DWORD Mft2WritesUserRequest;
 *     DWORDLONG RootIndexReads;
 *     DWORDLONG RootIndexReadBytes;
 *     DWORDLONG RootIndexWrites;
 *     DWORDLONG RootIndexWriteBytes;
 *     DWORDLONG BitmapReads;
 *     DWORDLONG BitmapReadBytes;
 *     DWORDLONG BitmapWrites;
 *     DWORDLONG BitmapWriteBytes;
 *     DWORD BitmapWritesFlushForLogFileFull;
 *     DWORD BitmapWritesLazyWriter;
 *     DWORD BitmapWritesUserRequest;
 *     struct  BitmapWritesUserLevel;
 *     DWORDLONG MftBitmapReads;
 *     DWORDLONG MftBitmapReadBytes;
 *     DWORDLONG MftBitmapWrites;
 *     DWORDLONG MftBitmapWriteBytes;
 *     DWORD MftBitmapWritesFlushForLogFileFull;
 *     DWORD MftBitmapWritesLazyWriter;
 *     DWORD MftBitmapWritesUserRequest;
 *     struct  MftBitmapWritesUserLevel;
 *     DWORDLONG UserIndexReads;
 *     DWORDLONG UserIndexReadBytes;
 *     DWORDLONG UserIndexWrites;
 *     DWORDLONG UserIndexWriteBytes;
 *     DWORDLONG LogFileReads;
 *     DWORDLONG LogFileReadBytes;
 *     DWORDLONG LogFileWrites;
 *     DWORDLONG LogFileWriteBytes;
 *     struct  Allocate;
 *     DWORD DiskResourcesExhausted;
 *     DWORDLONG VolumeTrimCount;
 *     DWORDLONG VolumeTrimTime;
 *     DWORDLONG VolumeTrimByteCount;
 *     DWORDLONG FileLevelTrimCount;
 *     DWORDLONG FileLevelTrimTime;
 *     DWORDLONG FileLevelTrimByteCount;
 *     DWORDLONG VolumeTrimSkippedCount;
 *     DWORDLONG VolumeTrimSkippedByteCount;
 *     DWORDLONG NtfsFillStatInfoFromMftRecordCalledCount;
 *     DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
 *     DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
 * };
 * }
 */
public class _NTFS_STATISTICS_EX {

    public static MemoryLayout $LAYOUT() {
        return constants$2623.const$4;
    }
    public static VarHandle LogFileFullExceptions$VH() {
        return constants$2623.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD LogFileFullExceptions;
     * }
     */
    public static int LogFileFullExceptions$get(MemorySegment seg) {
        return (int)constants$2623.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD LogFileFullExceptions;
     * }
     */
    public static void LogFileFullExceptions$set(MemorySegment seg, int x) {
        constants$2623.const$5.set(seg, x);
    }
    public static int LogFileFullExceptions$get(MemorySegment seg, long index) {
        return (int)constants$2623.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFileFullExceptions$set(MemorySegment seg, long index, int x) {
        constants$2623.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle OtherExceptions$VH() {
        return constants$2624.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD OtherExceptions;
     * }
     */
    public static int OtherExceptions$get(MemorySegment seg) {
        return (int)constants$2624.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD OtherExceptions;
     * }
     */
    public static void OtherExceptions$set(MemorySegment seg, int x) {
        constants$2624.const$0.set(seg, x);
    }
    public static int OtherExceptions$get(MemorySegment seg, long index) {
        return (int)constants$2624.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void OtherExceptions$set(MemorySegment seg, long index, int x) {
        constants$2624.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftReads$VH() {
        return constants$2624.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftReads;
     * }
     */
    public static long MftReads$get(MemorySegment seg) {
        return (long)constants$2624.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftReads;
     * }
     */
    public static void MftReads$set(MemorySegment seg, long x) {
        constants$2624.const$1.set(seg, x);
    }
    public static long MftReads$get(MemorySegment seg, long index) {
        return (long)constants$2624.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void MftReads$set(MemorySegment seg, long index, long x) {
        constants$2624.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftReadBytes$VH() {
        return constants$2624.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftReadBytes;
     * }
     */
    public static long MftReadBytes$get(MemorySegment seg) {
        return (long)constants$2624.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftReadBytes;
     * }
     */
    public static void MftReadBytes$set(MemorySegment seg, long x) {
        constants$2624.const$2.set(seg, x);
    }
    public static long MftReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2624.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void MftReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2624.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftWrites$VH() {
        return constants$2624.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftWrites;
     * }
     */
    public static long MftWrites$get(MemorySegment seg) {
        return (long)constants$2624.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftWrites;
     * }
     */
    public static void MftWrites$set(MemorySegment seg, long x) {
        constants$2624.const$3.set(seg, x);
    }
    public static long MftWrites$get(MemorySegment seg, long index) {
        return (long)constants$2624.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void MftWrites$set(MemorySegment seg, long index, long x) {
        constants$2624.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftWriteBytes$VH() {
        return constants$2624.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftWriteBytes;
     * }
     */
    public static long MftWriteBytes$get(MemorySegment seg) {
        return (long)constants$2624.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftWriteBytes;
     * }
     */
    public static void MftWriteBytes$set(MemorySegment seg, long x) {
        constants$2624.const$4.set(seg, x);
    }
    public static long MftWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2624.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MftWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2624.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD Write;
     *     DWORD Create;
     *     DWORD SetInfo;
     *     DWORD Flush;
     * };
     * }
     */
    public static final class MftWritesUserLevel {

        // Suppresses default constructor, ensuring non-instantiability.
        private MftWritesUserLevel() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2624.const$5;
        }
        public static VarHandle Write$VH() {
            return constants$2625.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static int Write$get(MemorySegment seg) {
            return (int)constants$2625.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static void Write$set(MemorySegment seg, int x) {
            constants$2625.const$0.set(seg, x);
        }
        public static int Write$get(MemorySegment seg, long index) {
            return (int)constants$2625.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void Write$set(MemorySegment seg, long index, int x) {
            constants$2625.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Create$VH() {
            return constants$2625.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static int Create$get(MemorySegment seg) {
            return (int)constants$2625.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static void Create$set(MemorySegment seg, int x) {
            constants$2625.const$1.set(seg, x);
        }
        public static int Create$get(MemorySegment seg, long index) {
            return (int)constants$2625.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void Create$set(MemorySegment seg, long index, int x) {
            constants$2625.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetInfo$VH() {
            return constants$2625.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static int SetInfo$get(MemorySegment seg) {
            return (int)constants$2625.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static void SetInfo$set(MemorySegment seg, int x) {
            constants$2625.const$2.set(seg, x);
        }
        public static int SetInfo$get(MemorySegment seg, long index) {
            return (int)constants$2625.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void SetInfo$set(MemorySegment seg, long index, int x) {
            constants$2625.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flush$VH() {
            return constants$2625.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static int Flush$get(MemorySegment seg) {
            return (int)constants$2625.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static void Flush$set(MemorySegment seg, int x) {
            constants$2625.const$3.set(seg, x);
        }
        public static int Flush$get(MemorySegment seg, long index) {
            return (int)constants$2625.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Flush$set(MemorySegment seg, long index, int x) {
            constants$2625.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment MftWritesUserLevel$slice(MemorySegment seg) {
        return seg.asSlice(40, 16);
    }
    public static VarHandle MftWritesFlushForLogFileFull$VH() {
        return constants$2625.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftWritesFlushForLogFileFull;
     * }
     */
    public static int MftWritesFlushForLogFileFull$get(MemorySegment seg) {
        return (int)constants$2625.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftWritesFlushForLogFileFull;
     * }
     */
    public static void MftWritesFlushForLogFileFull$set(MemorySegment seg, int x) {
        constants$2625.const$4.set(seg, x);
    }
    public static int MftWritesFlushForLogFileFull$get(MemorySegment seg, long index) {
        return (int)constants$2625.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MftWritesFlushForLogFileFull$set(MemorySegment seg, long index, int x) {
        constants$2625.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftWritesLazyWriter$VH() {
        return constants$2625.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftWritesLazyWriter;
     * }
     */
    public static int MftWritesLazyWriter$get(MemorySegment seg) {
        return (int)constants$2625.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftWritesLazyWriter;
     * }
     */
    public static void MftWritesLazyWriter$set(MemorySegment seg, int x) {
        constants$2625.const$5.set(seg, x);
    }
    public static int MftWritesLazyWriter$get(MemorySegment seg, long index) {
        return (int)constants$2625.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MftWritesLazyWriter$set(MemorySegment seg, long index, int x) {
        constants$2625.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftWritesUserRequest$VH() {
        return constants$2626.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftWritesUserRequest;
     * }
     */
    public static int MftWritesUserRequest$get(MemorySegment seg) {
        return (int)constants$2626.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftWritesUserRequest;
     * }
     */
    public static void MftWritesUserRequest$set(MemorySegment seg, int x) {
        constants$2626.const$0.set(seg, x);
    }
    public static int MftWritesUserRequest$get(MemorySegment seg, long index) {
        return (int)constants$2626.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void MftWritesUserRequest$set(MemorySegment seg, long index, int x) {
        constants$2626.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Mft2Writes$VH() {
        return constants$2626.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG Mft2Writes;
     * }
     */
    public static long Mft2Writes$get(MemorySegment seg) {
        return (long)constants$2626.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG Mft2Writes;
     * }
     */
    public static void Mft2Writes$set(MemorySegment seg, long x) {
        constants$2626.const$1.set(seg, x);
    }
    public static long Mft2Writes$get(MemorySegment seg, long index) {
        return (long)constants$2626.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Mft2Writes$set(MemorySegment seg, long index, long x) {
        constants$2626.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Mft2WriteBytes$VH() {
        return constants$2626.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG Mft2WriteBytes;
     * }
     */
    public static long Mft2WriteBytes$get(MemorySegment seg) {
        return (long)constants$2626.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG Mft2WriteBytes;
     * }
     */
    public static void Mft2WriteBytes$set(MemorySegment seg, long x) {
        constants$2626.const$2.set(seg, x);
    }
    public static long Mft2WriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2626.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Mft2WriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2626.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD Write;
     *     DWORD Create;
     *     DWORD SetInfo;
     *     DWORD Flush;
     * };
     * }
     */
    public static final class Mft2WritesUserLevel {

        // Suppresses default constructor, ensuring non-instantiability.
        private Mft2WritesUserLevel() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2624.const$5;
        }
        public static VarHandle Write$VH() {
            return constants$2626.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static int Write$get(MemorySegment seg) {
            return (int)constants$2626.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static void Write$set(MemorySegment seg, int x) {
            constants$2626.const$3.set(seg, x);
        }
        public static int Write$get(MemorySegment seg, long index) {
            return (int)constants$2626.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Write$set(MemorySegment seg, long index, int x) {
            constants$2626.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Create$VH() {
            return constants$2626.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static int Create$get(MemorySegment seg) {
            return (int)constants$2626.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static void Create$set(MemorySegment seg, int x) {
            constants$2626.const$4.set(seg, x);
        }
        public static int Create$get(MemorySegment seg, long index) {
            return (int)constants$2626.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void Create$set(MemorySegment seg, long index, int x) {
            constants$2626.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetInfo$VH() {
            return constants$2626.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static int SetInfo$get(MemorySegment seg) {
            return (int)constants$2626.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static void SetInfo$set(MemorySegment seg, int x) {
            constants$2626.const$5.set(seg, x);
        }
        public static int SetInfo$get(MemorySegment seg, long index) {
            return (int)constants$2626.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void SetInfo$set(MemorySegment seg, long index, int x) {
            constants$2626.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flush$VH() {
            return constants$2627.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static int Flush$get(MemorySegment seg) {
            return (int)constants$2627.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static void Flush$set(MemorySegment seg, int x) {
            constants$2627.const$0.set(seg, x);
        }
        public static int Flush$get(MemorySegment seg, long index) {
            return (int)constants$2627.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void Flush$set(MemorySegment seg, long index, int x) {
            constants$2627.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment Mft2WritesUserLevel$slice(MemorySegment seg) {
        return seg.asSlice(88, 16);
    }
    public static VarHandle Mft2WritesFlushForLogFileFull$VH() {
        return constants$2627.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Mft2WritesFlushForLogFileFull;
     * }
     */
    public static int Mft2WritesFlushForLogFileFull$get(MemorySegment seg) {
        return (int)constants$2627.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Mft2WritesFlushForLogFileFull;
     * }
     */
    public static void Mft2WritesFlushForLogFileFull$set(MemorySegment seg, int x) {
        constants$2627.const$1.set(seg, x);
    }
    public static int Mft2WritesFlushForLogFileFull$get(MemorySegment seg, long index) {
        return (int)constants$2627.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Mft2WritesFlushForLogFileFull$set(MemorySegment seg, long index, int x) {
        constants$2627.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Mft2WritesLazyWriter$VH() {
        return constants$2627.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Mft2WritesLazyWriter;
     * }
     */
    public static int Mft2WritesLazyWriter$get(MemorySegment seg) {
        return (int)constants$2627.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Mft2WritesLazyWriter;
     * }
     */
    public static void Mft2WritesLazyWriter$set(MemorySegment seg, int x) {
        constants$2627.const$2.set(seg, x);
    }
    public static int Mft2WritesLazyWriter$get(MemorySegment seg, long index) {
        return (int)constants$2627.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Mft2WritesLazyWriter$set(MemorySegment seg, long index, int x) {
        constants$2627.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Mft2WritesUserRequest$VH() {
        return constants$2627.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Mft2WritesUserRequest;
     * }
     */
    public static int Mft2WritesUserRequest$get(MemorySegment seg) {
        return (int)constants$2627.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Mft2WritesUserRequest;
     * }
     */
    public static void Mft2WritesUserRequest$set(MemorySegment seg, int x) {
        constants$2627.const$3.set(seg, x);
    }
    public static int Mft2WritesUserRequest$get(MemorySegment seg, long index) {
        return (int)constants$2627.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Mft2WritesUserRequest$set(MemorySegment seg, long index, int x) {
        constants$2627.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RootIndexReads$VH() {
        return constants$2627.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG RootIndexReads;
     * }
     */
    public static long RootIndexReads$get(MemorySegment seg) {
        return (long)constants$2627.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG RootIndexReads;
     * }
     */
    public static void RootIndexReads$set(MemorySegment seg, long x) {
        constants$2627.const$4.set(seg, x);
    }
    public static long RootIndexReads$get(MemorySegment seg, long index) {
        return (long)constants$2627.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void RootIndexReads$set(MemorySegment seg, long index, long x) {
        constants$2627.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RootIndexReadBytes$VH() {
        return constants$2627.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG RootIndexReadBytes;
     * }
     */
    public static long RootIndexReadBytes$get(MemorySegment seg) {
        return (long)constants$2627.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG RootIndexReadBytes;
     * }
     */
    public static void RootIndexReadBytes$set(MemorySegment seg, long x) {
        constants$2627.const$5.set(seg, x);
    }
    public static long RootIndexReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2627.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void RootIndexReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2627.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RootIndexWrites$VH() {
        return constants$2628.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG RootIndexWrites;
     * }
     */
    public static long RootIndexWrites$get(MemorySegment seg) {
        return (long)constants$2628.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG RootIndexWrites;
     * }
     */
    public static void RootIndexWrites$set(MemorySegment seg, long x) {
        constants$2628.const$0.set(seg, x);
    }
    public static long RootIndexWrites$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void RootIndexWrites$set(MemorySegment seg, long index, long x) {
        constants$2628.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle RootIndexWriteBytes$VH() {
        return constants$2628.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG RootIndexWriteBytes;
     * }
     */
    public static long RootIndexWriteBytes$get(MemorySegment seg) {
        return (long)constants$2628.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG RootIndexWriteBytes;
     * }
     */
    public static void RootIndexWriteBytes$set(MemorySegment seg, long x) {
        constants$2628.const$1.set(seg, x);
    }
    public static long RootIndexWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void RootIndexWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2628.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapReads$VH() {
        return constants$2628.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG BitmapReads;
     * }
     */
    public static long BitmapReads$get(MemorySegment seg) {
        return (long)constants$2628.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG BitmapReads;
     * }
     */
    public static void BitmapReads$set(MemorySegment seg, long x) {
        constants$2628.const$2.set(seg, x);
    }
    public static long BitmapReads$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapReads$set(MemorySegment seg, long index, long x) {
        constants$2628.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapReadBytes$VH() {
        return constants$2628.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG BitmapReadBytes;
     * }
     */
    public static long BitmapReadBytes$get(MemorySegment seg) {
        return (long)constants$2628.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG BitmapReadBytes;
     * }
     */
    public static void BitmapReadBytes$set(MemorySegment seg, long x) {
        constants$2628.const$3.set(seg, x);
    }
    public static long BitmapReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2628.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapWrites$VH() {
        return constants$2628.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG BitmapWrites;
     * }
     */
    public static long BitmapWrites$get(MemorySegment seg) {
        return (long)constants$2628.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG BitmapWrites;
     * }
     */
    public static void BitmapWrites$set(MemorySegment seg, long x) {
        constants$2628.const$4.set(seg, x);
    }
    public static long BitmapWrites$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapWrites$set(MemorySegment seg, long index, long x) {
        constants$2628.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapWriteBytes$VH() {
        return constants$2628.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG BitmapWriteBytes;
     * }
     */
    public static long BitmapWriteBytes$get(MemorySegment seg) {
        return (long)constants$2628.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG BitmapWriteBytes;
     * }
     */
    public static void BitmapWriteBytes$set(MemorySegment seg, long x) {
        constants$2628.const$5.set(seg, x);
    }
    public static long BitmapWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2628.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2628.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapWritesFlushForLogFileFull$VH() {
        return constants$2629.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD BitmapWritesFlushForLogFileFull;
     * }
     */
    public static int BitmapWritesFlushForLogFileFull$get(MemorySegment seg) {
        return (int)constants$2629.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD BitmapWritesFlushForLogFileFull;
     * }
     */
    public static void BitmapWritesFlushForLogFileFull$set(MemorySegment seg, int x) {
        constants$2629.const$0.set(seg, x);
    }
    public static int BitmapWritesFlushForLogFileFull$get(MemorySegment seg, long index) {
        return (int)constants$2629.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapWritesFlushForLogFileFull$set(MemorySegment seg, long index, int x) {
        constants$2629.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapWritesLazyWriter$VH() {
        return constants$2629.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD BitmapWritesLazyWriter;
     * }
     */
    public static int BitmapWritesLazyWriter$get(MemorySegment seg) {
        return (int)constants$2629.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD BitmapWritesLazyWriter;
     * }
     */
    public static void BitmapWritesLazyWriter$set(MemorySegment seg, int x) {
        constants$2629.const$1.set(seg, x);
    }
    public static int BitmapWritesLazyWriter$get(MemorySegment seg, long index) {
        return (int)constants$2629.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapWritesLazyWriter$set(MemorySegment seg, long index, int x) {
        constants$2629.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BitmapWritesUserRequest$VH() {
        return constants$2629.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD BitmapWritesUserRequest;
     * }
     */
    public static int BitmapWritesUserRequest$get(MemorySegment seg) {
        return (int)constants$2629.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD BitmapWritesUserRequest;
     * }
     */
    public static void BitmapWritesUserRequest$set(MemorySegment seg, int x) {
        constants$2629.const$2.set(seg, x);
    }
    public static int BitmapWritesUserRequest$get(MemorySegment seg, long index) {
        return (int)constants$2629.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void BitmapWritesUserRequest$set(MemorySegment seg, long index, int x) {
        constants$2629.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD Write;
     *     DWORD Create;
     *     DWORD SetInfo;
     *     DWORD Flush;
     * };
     * }
     */
    public static final class BitmapWritesUserLevel {

        // Suppresses default constructor, ensuring non-instantiability.
        private BitmapWritesUserLevel() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2624.const$5;
        }
        public static VarHandle Write$VH() {
            return constants$2629.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static int Write$get(MemorySegment seg) {
            return (int)constants$2629.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static void Write$set(MemorySegment seg, int x) {
            constants$2629.const$3.set(seg, x);
        }
        public static int Write$get(MemorySegment seg, long index) {
            return (int)constants$2629.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Write$set(MemorySegment seg, long index, int x) {
            constants$2629.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Create$VH() {
            return constants$2629.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static int Create$get(MemorySegment seg) {
            return (int)constants$2629.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static void Create$set(MemorySegment seg, int x) {
            constants$2629.const$4.set(seg, x);
        }
        public static int Create$get(MemorySegment seg, long index) {
            return (int)constants$2629.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void Create$set(MemorySegment seg, long index, int x) {
            constants$2629.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetInfo$VH() {
            return constants$2629.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static int SetInfo$get(MemorySegment seg) {
            return (int)constants$2629.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static void SetInfo$set(MemorySegment seg, int x) {
            constants$2629.const$5.set(seg, x);
        }
        public static int SetInfo$get(MemorySegment seg, long index) {
            return (int)constants$2629.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void SetInfo$set(MemorySegment seg, long index, int x) {
            constants$2629.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flush$VH() {
            return constants$2630.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static int Flush$get(MemorySegment seg) {
            return (int)constants$2630.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static void Flush$set(MemorySegment seg, int x) {
            constants$2630.const$0.set(seg, x);
        }
        public static int Flush$get(MemorySegment seg, long index) {
            return (int)constants$2630.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void Flush$set(MemorySegment seg, long index, int x) {
            constants$2630.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment BitmapWritesUserLevel$slice(MemorySegment seg) {
        return seg.asSlice(196, 16);
    }
    public static VarHandle MftBitmapReads$VH() {
        return constants$2630.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftBitmapReads;
     * }
     */
    public static long MftBitmapReads$get(MemorySegment seg) {
        return (long)constants$2630.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftBitmapReads;
     * }
     */
    public static void MftBitmapReads$set(MemorySegment seg, long x) {
        constants$2630.const$1.set(seg, x);
    }
    public static long MftBitmapReads$get(MemorySegment seg, long index) {
        return (long)constants$2630.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapReads$set(MemorySegment seg, long index, long x) {
        constants$2630.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapReadBytes$VH() {
        return constants$2630.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftBitmapReadBytes;
     * }
     */
    public static long MftBitmapReadBytes$get(MemorySegment seg) {
        return (long)constants$2630.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftBitmapReadBytes;
     * }
     */
    public static void MftBitmapReadBytes$set(MemorySegment seg, long x) {
        constants$2630.const$2.set(seg, x);
    }
    public static long MftBitmapReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2630.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2630.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapWrites$VH() {
        return constants$2630.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftBitmapWrites;
     * }
     */
    public static long MftBitmapWrites$get(MemorySegment seg) {
        return (long)constants$2630.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftBitmapWrites;
     * }
     */
    public static void MftBitmapWrites$set(MemorySegment seg, long x) {
        constants$2630.const$3.set(seg, x);
    }
    public static long MftBitmapWrites$get(MemorySegment seg, long index) {
        return (long)constants$2630.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapWrites$set(MemorySegment seg, long index, long x) {
        constants$2630.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapWriteBytes$VH() {
        return constants$2630.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG MftBitmapWriteBytes;
     * }
     */
    public static long MftBitmapWriteBytes$get(MemorySegment seg) {
        return (long)constants$2630.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG MftBitmapWriteBytes;
     * }
     */
    public static void MftBitmapWriteBytes$set(MemorySegment seg, long x) {
        constants$2630.const$4.set(seg, x);
    }
    public static long MftBitmapWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2630.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2630.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapWritesFlushForLogFileFull$VH() {
        return constants$2630.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftBitmapWritesFlushForLogFileFull;
     * }
     */
    public static int MftBitmapWritesFlushForLogFileFull$get(MemorySegment seg) {
        return (int)constants$2630.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftBitmapWritesFlushForLogFileFull;
     * }
     */
    public static void MftBitmapWritesFlushForLogFileFull$set(MemorySegment seg, int x) {
        constants$2630.const$5.set(seg, x);
    }
    public static int MftBitmapWritesFlushForLogFileFull$get(MemorySegment seg, long index) {
        return (int)constants$2630.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapWritesFlushForLogFileFull$set(MemorySegment seg, long index, int x) {
        constants$2630.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapWritesLazyWriter$VH() {
        return constants$2631.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftBitmapWritesLazyWriter;
     * }
     */
    public static int MftBitmapWritesLazyWriter$get(MemorySegment seg) {
        return (int)constants$2631.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftBitmapWritesLazyWriter;
     * }
     */
    public static void MftBitmapWritesLazyWriter$set(MemorySegment seg, int x) {
        constants$2631.const$0.set(seg, x);
    }
    public static int MftBitmapWritesLazyWriter$get(MemorySegment seg, long index) {
        return (int)constants$2631.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapWritesLazyWriter$set(MemorySegment seg, long index, int x) {
        constants$2631.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MftBitmapWritesUserRequest$VH() {
        return constants$2631.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MftBitmapWritesUserRequest;
     * }
     */
    public static int MftBitmapWritesUserRequest$get(MemorySegment seg) {
        return (int)constants$2631.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MftBitmapWritesUserRequest;
     * }
     */
    public static void MftBitmapWritesUserRequest$set(MemorySegment seg, int x) {
        constants$2631.const$1.set(seg, x);
    }
    public static int MftBitmapWritesUserRequest$get(MemorySegment seg, long index) {
        return (int)constants$2631.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void MftBitmapWritesUserRequest$set(MemorySegment seg, long index, int x) {
        constants$2631.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD Write;
     *     DWORD Create;
     *     DWORD SetInfo;
     *     DWORD Flush;
     * };
     * }
     */
    public static final class MftBitmapWritesUserLevel {

        // Suppresses default constructor, ensuring non-instantiability.
        private MftBitmapWritesUserLevel() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2624.const$5;
        }
        public static VarHandle Write$VH() {
            return constants$2631.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static int Write$get(MemorySegment seg) {
            return (int)constants$2631.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Write;
         * }
         */
        public static void Write$set(MemorySegment seg, int x) {
            constants$2631.const$2.set(seg, x);
        }
        public static int Write$get(MemorySegment seg, long index) {
            return (int)constants$2631.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void Write$set(MemorySegment seg, long index, int x) {
            constants$2631.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Create$VH() {
            return constants$2631.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static int Create$get(MemorySegment seg) {
            return (int)constants$2631.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Create;
         * }
         */
        public static void Create$set(MemorySegment seg, int x) {
            constants$2631.const$3.set(seg, x);
        }
        public static int Create$get(MemorySegment seg, long index) {
            return (int)constants$2631.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Create$set(MemorySegment seg, long index, int x) {
            constants$2631.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle SetInfo$VH() {
            return constants$2631.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static int SetInfo$get(MemorySegment seg) {
            return (int)constants$2631.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD SetInfo;
         * }
         */
        public static void SetInfo$set(MemorySegment seg, int x) {
            constants$2631.const$4.set(seg, x);
        }
        public static int SetInfo$get(MemorySegment seg, long index) {
            return (int)constants$2631.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void SetInfo$set(MemorySegment seg, long index, int x) {
            constants$2631.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Flush$VH() {
            return constants$2631.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static int Flush$get(MemorySegment seg) {
            return (int)constants$2631.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Flush;
         * }
         */
        public static void Flush$set(MemorySegment seg, int x) {
            constants$2631.const$5.set(seg, x);
        }
        public static int Flush$get(MemorySegment seg, long index) {
            return (int)constants$2631.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void Flush$set(MemorySegment seg, long index, int x) {
            constants$2631.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment MftBitmapWritesUserLevel$slice(MemorySegment seg) {
        return seg.asSlice(260, 16);
    }
    public static VarHandle UserIndexReads$VH() {
        return constants$2632.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG UserIndexReads;
     * }
     */
    public static long UserIndexReads$get(MemorySegment seg) {
        return (long)constants$2632.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG UserIndexReads;
     * }
     */
    public static void UserIndexReads$set(MemorySegment seg, long x) {
        constants$2632.const$0.set(seg, x);
    }
    public static long UserIndexReads$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void UserIndexReads$set(MemorySegment seg, long index, long x) {
        constants$2632.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserIndexReadBytes$VH() {
        return constants$2632.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG UserIndexReadBytes;
     * }
     */
    public static long UserIndexReadBytes$get(MemorySegment seg) {
        return (long)constants$2632.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG UserIndexReadBytes;
     * }
     */
    public static void UserIndexReadBytes$set(MemorySegment seg, long x) {
        constants$2632.const$1.set(seg, x);
    }
    public static long UserIndexReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void UserIndexReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2632.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserIndexWrites$VH() {
        return constants$2632.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG UserIndexWrites;
     * }
     */
    public static long UserIndexWrites$get(MemorySegment seg) {
        return (long)constants$2632.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG UserIndexWrites;
     * }
     */
    public static void UserIndexWrites$set(MemorySegment seg, long x) {
        constants$2632.const$2.set(seg, x);
    }
    public static long UserIndexWrites$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void UserIndexWrites$set(MemorySegment seg, long index, long x) {
        constants$2632.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle UserIndexWriteBytes$VH() {
        return constants$2632.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG UserIndexWriteBytes;
     * }
     */
    public static long UserIndexWriteBytes$get(MemorySegment seg) {
        return (long)constants$2632.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG UserIndexWriteBytes;
     * }
     */
    public static void UserIndexWriteBytes$set(MemorySegment seg, long x) {
        constants$2632.const$3.set(seg, x);
    }
    public static long UserIndexWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void UserIndexWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2632.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogFileReads$VH() {
        return constants$2632.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogFileReads;
     * }
     */
    public static long LogFileReads$get(MemorySegment seg) {
        return (long)constants$2632.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogFileReads;
     * }
     */
    public static void LogFileReads$set(MemorySegment seg, long x) {
        constants$2632.const$4.set(seg, x);
    }
    public static long LogFileReads$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFileReads$set(MemorySegment seg, long index, long x) {
        constants$2632.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogFileReadBytes$VH() {
        return constants$2632.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogFileReadBytes;
     * }
     */
    public static long LogFileReadBytes$get(MemorySegment seg) {
        return (long)constants$2632.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogFileReadBytes;
     * }
     */
    public static void LogFileReadBytes$set(MemorySegment seg, long x) {
        constants$2632.const$5.set(seg, x);
    }
    public static long LogFileReadBytes$get(MemorySegment seg, long index) {
        return (long)constants$2632.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFileReadBytes$set(MemorySegment seg, long index, long x) {
        constants$2632.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogFileWrites$VH() {
        return constants$2633.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogFileWrites;
     * }
     */
    public static long LogFileWrites$get(MemorySegment seg) {
        return (long)constants$2633.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogFileWrites;
     * }
     */
    public static void LogFileWrites$set(MemorySegment seg, long x) {
        constants$2633.const$0.set(seg, x);
    }
    public static long LogFileWrites$get(MemorySegment seg, long index) {
        return (long)constants$2633.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFileWrites$set(MemorySegment seg, long index, long x) {
        constants$2633.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle LogFileWriteBytes$VH() {
        return constants$2633.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG LogFileWriteBytes;
     * }
     */
    public static long LogFileWriteBytes$get(MemorySegment seg) {
        return (long)constants$2633.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG LogFileWriteBytes;
     * }
     */
    public static void LogFileWriteBytes$set(MemorySegment seg, long x) {
        constants$2633.const$1.set(seg, x);
    }
    public static long LogFileWriteBytes$get(MemorySegment seg, long index) {
        return (long)constants$2633.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void LogFileWriteBytes$set(MemorySegment seg, long index, long x) {
        constants$2633.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD Calls;
     *     DWORD RunsReturned;
     *     DWORD Hints;
     *     DWORD HintsHonored;
     *     DWORD Cache;
     *     DWORD CacheMiss;
     *     DWORDLONG Clusters;
     *     DWORDLONG HintsClusters;
     *     DWORDLONG CacheClusters;
     *     DWORDLONG CacheMissClusters;
     * };
     * }
     */
    public static final class Allocate {

        // Suppresses default constructor, ensuring non-instantiability.
        private Allocate() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2633.const$2;
        }
        public static VarHandle Calls$VH() {
            return constants$2633.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Calls;
         * }
         */
        public static int Calls$get(MemorySegment seg) {
            return (int)constants$2633.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Calls;
         * }
         */
        public static void Calls$set(MemorySegment seg, int x) {
            constants$2633.const$3.set(seg, x);
        }
        public static int Calls$get(MemorySegment seg, long index) {
            return (int)constants$2633.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Calls$set(MemorySegment seg, long index, int x) {
            constants$2633.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle RunsReturned$VH() {
            return constants$2633.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD RunsReturned;
         * }
         */
        public static int RunsReturned$get(MemorySegment seg) {
            return (int)constants$2633.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD RunsReturned;
         * }
         */
        public static void RunsReturned$set(MemorySegment seg, int x) {
            constants$2633.const$4.set(seg, x);
        }
        public static int RunsReturned$get(MemorySegment seg, long index) {
            return (int)constants$2633.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void RunsReturned$set(MemorySegment seg, long index, int x) {
            constants$2633.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Hints$VH() {
            return constants$2633.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Hints;
         * }
         */
        public static int Hints$get(MemorySegment seg) {
            return (int)constants$2633.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Hints;
         * }
         */
        public static void Hints$set(MemorySegment seg, int x) {
            constants$2633.const$5.set(seg, x);
        }
        public static int Hints$get(MemorySegment seg, long index) {
            return (int)constants$2633.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void Hints$set(MemorySegment seg, long index, int x) {
            constants$2633.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HintsHonored$VH() {
            return constants$2634.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD HintsHonored;
         * }
         */
        public static int HintsHonored$get(MemorySegment seg) {
            return (int)constants$2634.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD HintsHonored;
         * }
         */
        public static void HintsHonored$set(MemorySegment seg, int x) {
            constants$2634.const$0.set(seg, x);
        }
        public static int HintsHonored$get(MemorySegment seg, long index) {
            return (int)constants$2634.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void HintsHonored$set(MemorySegment seg, long index, int x) {
            constants$2634.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Cache$VH() {
            return constants$2634.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD Cache;
         * }
         */
        public static int Cache$get(MemorySegment seg) {
            return (int)constants$2634.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD Cache;
         * }
         */
        public static void Cache$set(MemorySegment seg, int x) {
            constants$2634.const$1.set(seg, x);
        }
        public static int Cache$get(MemorySegment seg, long index) {
            return (int)constants$2634.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void Cache$set(MemorySegment seg, long index, int x) {
            constants$2634.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CacheMiss$VH() {
            return constants$2634.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD CacheMiss;
         * }
         */
        public static int CacheMiss$get(MemorySegment seg) {
            return (int)constants$2634.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD CacheMiss;
         * }
         */
        public static void CacheMiss$set(MemorySegment seg, int x) {
            constants$2634.const$2.set(seg, x);
        }
        public static int CacheMiss$get(MemorySegment seg, long index) {
            return (int)constants$2634.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void CacheMiss$set(MemorySegment seg, long index, int x) {
            constants$2634.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle Clusters$VH() {
            return constants$2634.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORDLONG Clusters;
         * }
         */
        public static long Clusters$get(MemorySegment seg) {
            return (long)constants$2634.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORDLONG Clusters;
         * }
         */
        public static void Clusters$set(MemorySegment seg, long x) {
            constants$2634.const$3.set(seg, x);
        }
        public static long Clusters$get(MemorySegment seg, long index) {
            return (long)constants$2634.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void Clusters$set(MemorySegment seg, long index, long x) {
            constants$2634.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle HintsClusters$VH() {
            return constants$2634.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORDLONG HintsClusters;
         * }
         */
        public static long HintsClusters$get(MemorySegment seg) {
            return (long)constants$2634.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORDLONG HintsClusters;
         * }
         */
        public static void HintsClusters$set(MemorySegment seg, long x) {
            constants$2634.const$4.set(seg, x);
        }
        public static long HintsClusters$get(MemorySegment seg, long index) {
            return (long)constants$2634.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void HintsClusters$set(MemorySegment seg, long index, long x) {
            constants$2634.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CacheClusters$VH() {
            return constants$2634.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORDLONG CacheClusters;
         * }
         */
        public static long CacheClusters$get(MemorySegment seg) {
            return (long)constants$2634.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORDLONG CacheClusters;
         * }
         */
        public static void CacheClusters$set(MemorySegment seg, long x) {
            constants$2634.const$5.set(seg, x);
        }
        public static long CacheClusters$get(MemorySegment seg, long index) {
            return (long)constants$2634.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void CacheClusters$set(MemorySegment seg, long index, long x) {
            constants$2634.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle CacheMissClusters$VH() {
            return constants$2635.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORDLONG CacheMissClusters;
         * }
         */
        public static long CacheMissClusters$get(MemorySegment seg) {
            return (long)constants$2635.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORDLONG CacheMissClusters;
         * }
         */
        public static void CacheMissClusters$set(MemorySegment seg, long x) {
            constants$2635.const$0.set(seg, x);
        }
        public static long CacheMissClusters$get(MemorySegment seg, long index) {
            return (long)constants$2635.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void CacheMissClusters$set(MemorySegment seg, long index, long x) {
            constants$2635.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment Allocate$slice(MemorySegment seg) {
        return seg.asSlice(344, 56);
    }
    public static VarHandle DiskResourcesExhausted$VH() {
        return constants$2635.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD DiskResourcesExhausted;
     * }
     */
    public static int DiskResourcesExhausted$get(MemorySegment seg) {
        return (int)constants$2635.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD DiskResourcesExhausted;
     * }
     */
    public static void DiskResourcesExhausted$set(MemorySegment seg, int x) {
        constants$2635.const$1.set(seg, x);
    }
    public static int DiskResourcesExhausted$get(MemorySegment seg, long index) {
        return (int)constants$2635.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void DiskResourcesExhausted$set(MemorySegment seg, long index, int x) {
        constants$2635.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VolumeTrimCount$VH() {
        return constants$2635.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimCount;
     * }
     */
    public static long VolumeTrimCount$get(MemorySegment seg) {
        return (long)constants$2635.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimCount;
     * }
     */
    public static void VolumeTrimCount$set(MemorySegment seg, long x) {
        constants$2635.const$2.set(seg, x);
    }
    public static long VolumeTrimCount$get(MemorySegment seg, long index) {
        return (long)constants$2635.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeTrimCount$set(MemorySegment seg, long index, long x) {
        constants$2635.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VolumeTrimTime$VH() {
        return constants$2635.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimTime;
     * }
     */
    public static long VolumeTrimTime$get(MemorySegment seg) {
        return (long)constants$2635.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimTime;
     * }
     */
    public static void VolumeTrimTime$set(MemorySegment seg, long x) {
        constants$2635.const$3.set(seg, x);
    }
    public static long VolumeTrimTime$get(MemorySegment seg, long index) {
        return (long)constants$2635.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeTrimTime$set(MemorySegment seg, long index, long x) {
        constants$2635.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VolumeTrimByteCount$VH() {
        return constants$2635.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimByteCount;
     * }
     */
    public static long VolumeTrimByteCount$get(MemorySegment seg) {
        return (long)constants$2635.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimByteCount;
     * }
     */
    public static void VolumeTrimByteCount$set(MemorySegment seg, long x) {
        constants$2635.const$4.set(seg, x);
    }
    public static long VolumeTrimByteCount$get(MemorySegment seg, long index) {
        return (long)constants$2635.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeTrimByteCount$set(MemorySegment seg, long index, long x) {
        constants$2635.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FileLevelTrimCount$VH() {
        return constants$2635.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimCount;
     * }
     */
    public static long FileLevelTrimCount$get(MemorySegment seg) {
        return (long)constants$2635.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimCount;
     * }
     */
    public static void FileLevelTrimCount$set(MemorySegment seg, long x) {
        constants$2635.const$5.set(seg, x);
    }
    public static long FileLevelTrimCount$get(MemorySegment seg, long index) {
        return (long)constants$2635.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void FileLevelTrimCount$set(MemorySegment seg, long index, long x) {
        constants$2635.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FileLevelTrimTime$VH() {
        return constants$2636.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimTime;
     * }
     */
    public static long FileLevelTrimTime$get(MemorySegment seg) {
        return (long)constants$2636.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimTime;
     * }
     */
    public static void FileLevelTrimTime$set(MemorySegment seg, long x) {
        constants$2636.const$0.set(seg, x);
    }
    public static long FileLevelTrimTime$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void FileLevelTrimTime$set(MemorySegment seg, long index, long x) {
        constants$2636.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle FileLevelTrimByteCount$VH() {
        return constants$2636.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimByteCount;
     * }
     */
    public static long FileLevelTrimByteCount$get(MemorySegment seg) {
        return (long)constants$2636.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG FileLevelTrimByteCount;
     * }
     */
    public static void FileLevelTrimByteCount$set(MemorySegment seg, long x) {
        constants$2636.const$1.set(seg, x);
    }
    public static long FileLevelTrimByteCount$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void FileLevelTrimByteCount$set(MemorySegment seg, long index, long x) {
        constants$2636.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VolumeTrimSkippedCount$VH() {
        return constants$2636.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimSkippedCount;
     * }
     */
    public static long VolumeTrimSkippedCount$get(MemorySegment seg) {
        return (long)constants$2636.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimSkippedCount;
     * }
     */
    public static void VolumeTrimSkippedCount$set(MemorySegment seg, long x) {
        constants$2636.const$2.set(seg, x);
    }
    public static long VolumeTrimSkippedCount$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeTrimSkippedCount$set(MemorySegment seg, long index, long x) {
        constants$2636.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle VolumeTrimSkippedByteCount$VH() {
        return constants$2636.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimSkippedByteCount;
     * }
     */
    public static long VolumeTrimSkippedByteCount$get(MemorySegment seg) {
        return (long)constants$2636.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG VolumeTrimSkippedByteCount;
     * }
     */
    public static void VolumeTrimSkippedByteCount$set(MemorySegment seg, long x) {
        constants$2636.const$3.set(seg, x);
    }
    public static long VolumeTrimSkippedByteCount$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeTrimSkippedByteCount$set(MemorySegment seg, long index, long x) {
        constants$2636.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NtfsFillStatInfoFromMftRecordCalledCount$VH() {
        return constants$2636.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordCalledCount;
     * }
     */
    public static long NtfsFillStatInfoFromMftRecordCalledCount$get(MemorySegment seg) {
        return (long)constants$2636.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordCalledCount;
     * }
     */
    public static void NtfsFillStatInfoFromMftRecordCalledCount$set(MemorySegment seg, long x) {
        constants$2636.const$4.set(seg, x);
    }
    public static long NtfsFillStatInfoFromMftRecordCalledCount$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void NtfsFillStatInfoFromMftRecordCalledCount$set(MemorySegment seg, long index, long x) {
        constants$2636.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount$VH() {
        return constants$2636.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
     * }
     */
    public static long NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount$get(MemorySegment seg) {
        return (long)constants$2636.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
     * }
     */
    public static void NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount$set(MemorySegment seg, long x) {
        constants$2636.const$5.set(seg, x);
    }
    public static long NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount$get(MemorySegment seg, long index) {
        return (long)constants$2636.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount$set(MemorySegment seg, long index, long x) {
        constants$2636.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount$VH() {
        return constants$2637.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
     * }
     */
    public static long NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount$get(MemorySegment seg) {
        return (long)constants$2637.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORDLONG NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
     * }
     */
    public static void NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount$set(MemorySegment seg, long x) {
        constants$2637.const$0.set(seg, x);
    }
    public static long NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount$get(MemorySegment seg, long index) {
        return (long)constants$2637.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount$set(MemorySegment seg, long index, long x) {
        constants$2637.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


