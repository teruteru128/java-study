// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagWINDOWINFO {
 *     DWORD cbSize;
 *     RECT rcWindow;
 *     RECT rcClient;
 *     DWORD dwStyle;
 *     DWORD dwExStyle;
 *     DWORD dwWindowStatus;
 *     UINT cxWindowBorders;
 *     UINT cyWindowBorders;
 *     ATOM atomWindowType;
 *     WORD wCreatorVersion;
 * };
 * }
 */
public class tagWINDOWINFO {

    public static MemoryLayout $LAYOUT() {
        return constants$1376.const$1;
    }
    public static VarHandle cbSize$VH() {
        return constants$1376.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$1376.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$1376.const$2.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$1376.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$1376.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment rcWindow$slice(MemorySegment seg) {
        return seg.asSlice(4, 16);
    }
    public static MemorySegment rcClient$slice(MemorySegment seg) {
        return seg.asSlice(20, 16);
    }
    public static VarHandle dwStyle$VH() {
        return constants$1376.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static int dwStyle$get(MemorySegment seg) {
        return (int)constants$1376.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStyle;
     * }
     */
    public static void dwStyle$set(MemorySegment seg, int x) {
        constants$1376.const$3.set(seg, x);
    }
    public static int dwStyle$get(MemorySegment seg, long index) {
        return (int)constants$1376.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStyle$set(MemorySegment seg, long index, int x) {
        constants$1376.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwExStyle$VH() {
        return constants$1376.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwExStyle;
     * }
     */
    public static int dwExStyle$get(MemorySegment seg) {
        return (int)constants$1376.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwExStyle;
     * }
     */
    public static void dwExStyle$set(MemorySegment seg, int x) {
        constants$1376.const$4.set(seg, x);
    }
    public static int dwExStyle$get(MemorySegment seg, long index) {
        return (int)constants$1376.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwExStyle$set(MemorySegment seg, long index, int x) {
        constants$1376.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwWindowStatus$VH() {
        return constants$1376.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwWindowStatus;
     * }
     */
    public static int dwWindowStatus$get(MemorySegment seg) {
        return (int)constants$1376.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwWindowStatus;
     * }
     */
    public static void dwWindowStatus$set(MemorySegment seg, int x) {
        constants$1376.const$5.set(seg, x);
    }
    public static int dwWindowStatus$get(MemorySegment seg, long index) {
        return (int)constants$1376.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwWindowStatus$set(MemorySegment seg, long index, int x) {
        constants$1376.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cxWindowBorders$VH() {
        return constants$1377.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cxWindowBorders;
     * }
     */
    public static int cxWindowBorders$get(MemorySegment seg) {
        return (int)constants$1377.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cxWindowBorders;
     * }
     */
    public static void cxWindowBorders$set(MemorySegment seg, int x) {
        constants$1377.const$0.set(seg, x);
    }
    public static int cxWindowBorders$get(MemorySegment seg, long index) {
        return (int)constants$1377.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cxWindowBorders$set(MemorySegment seg, long index, int x) {
        constants$1377.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cyWindowBorders$VH() {
        return constants$1377.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cyWindowBorders;
     * }
     */
    public static int cyWindowBorders$get(MemorySegment seg) {
        return (int)constants$1377.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cyWindowBorders;
     * }
     */
    public static void cyWindowBorders$set(MemorySegment seg, int x) {
        constants$1377.const$1.set(seg, x);
    }
    public static int cyWindowBorders$get(MemorySegment seg, long index) {
        return (int)constants$1377.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cyWindowBorders$set(MemorySegment seg, long index, int x) {
        constants$1377.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle atomWindowType$VH() {
        return constants$1377.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ATOM atomWindowType;
     * }
     */
    public static short atomWindowType$get(MemorySegment seg) {
        return (short)constants$1377.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ATOM atomWindowType;
     * }
     */
    public static void atomWindowType$set(MemorySegment seg, short x) {
        constants$1377.const$2.set(seg, x);
    }
    public static short atomWindowType$get(MemorySegment seg, long index) {
        return (short)constants$1377.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void atomWindowType$set(MemorySegment seg, long index, short x) {
        constants$1377.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wCreatorVersion$VH() {
        return constants$1377.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wCreatorVersion;
     * }
     */
    public static short wCreatorVersion$get(MemorySegment seg) {
        return (short)constants$1377.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wCreatorVersion;
     * }
     */
    public static void wCreatorVersion$set(MemorySegment seg, short x) {
        constants$1377.const$3.set(seg, x);
    }
    public static short wCreatorVersion$get(MemorySegment seg, long index) {
        return (short)constants$1377.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wCreatorVersion$set(MemorySegment seg, long index, short x) {
        constants$1377.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


