// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _PROV_ENUMALGS_EX {
 *     ALG_ID aiAlgid;
 *     DWORD dwDefaultLen;
 *     DWORD dwMinLen;
 *     DWORD dwMaxLen;
 *     DWORD dwProtocols;
 *     DWORD dwNameLen;
 *     CHAR szName[20];
 *     DWORD dwLongNameLen;
 *     CHAR szLongName[40];
 * };
 * }
 */
public class _PROV_ENUMALGS_EX {

    public static MemoryLayout $LAYOUT() {
        return constants$1921.const$5;
    }
    public static VarHandle aiAlgid$VH() {
        return constants$1922.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ALG_ID aiAlgid;
     * }
     */
    public static int aiAlgid$get(MemorySegment seg) {
        return (int)constants$1922.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ALG_ID aiAlgid;
     * }
     */
    public static void aiAlgid$set(MemorySegment seg, int x) {
        constants$1922.const$0.set(seg, x);
    }
    public static int aiAlgid$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void aiAlgid$set(MemorySegment seg, long index, int x) {
        constants$1922.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDefaultLen$VH() {
        return constants$1922.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDefaultLen;
     * }
     */
    public static int dwDefaultLen$get(MemorySegment seg) {
        return (int)constants$1922.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDefaultLen;
     * }
     */
    public static void dwDefaultLen$set(MemorySegment seg, int x) {
        constants$1922.const$1.set(seg, x);
    }
    public static int dwDefaultLen$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDefaultLen$set(MemorySegment seg, long index, int x) {
        constants$1922.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMinLen$VH() {
        return constants$1922.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMinLen;
     * }
     */
    public static int dwMinLen$get(MemorySegment seg) {
        return (int)constants$1922.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMinLen;
     * }
     */
    public static void dwMinLen$set(MemorySegment seg, int x) {
        constants$1922.const$2.set(seg, x);
    }
    public static int dwMinLen$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMinLen$set(MemorySegment seg, long index, int x) {
        constants$1922.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMaxLen$VH() {
        return constants$1922.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMaxLen;
     * }
     */
    public static int dwMaxLen$get(MemorySegment seg) {
        return (int)constants$1922.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMaxLen;
     * }
     */
    public static void dwMaxLen$set(MemorySegment seg, int x) {
        constants$1922.const$3.set(seg, x);
    }
    public static int dwMaxLen$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMaxLen$set(MemorySegment seg, long index, int x) {
        constants$1922.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProtocols$VH() {
        return constants$1922.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProtocols;
     * }
     */
    public static int dwProtocols$get(MemorySegment seg) {
        return (int)constants$1922.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProtocols;
     * }
     */
    public static void dwProtocols$set(MemorySegment seg, int x) {
        constants$1922.const$4.set(seg, x);
    }
    public static int dwProtocols$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProtocols$set(MemorySegment seg, long index, int x) {
        constants$1922.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNameLen$VH() {
        return constants$1922.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNameLen;
     * }
     */
    public static int dwNameLen$get(MemorySegment seg) {
        return (int)constants$1922.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNameLen;
     * }
     */
    public static void dwNameLen$set(MemorySegment seg, int x) {
        constants$1922.const$5.set(seg, x);
    }
    public static int dwNameLen$get(MemorySegment seg, long index) {
        return (int)constants$1922.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNameLen$set(MemorySegment seg, long index, int x) {
        constants$1922.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szName$slice(MemorySegment seg) {
        return seg.asSlice(24, 20);
    }
    public static VarHandle dwLongNameLen$VH() {
        return constants$1923.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLongNameLen;
     * }
     */
    public static int dwLongNameLen$get(MemorySegment seg) {
        return (int)constants$1923.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLongNameLen;
     * }
     */
    public static void dwLongNameLen$set(MemorySegment seg, int x) {
        constants$1923.const$0.set(seg, x);
    }
    public static int dwLongNameLen$get(MemorySegment seg, long index) {
        return (int)constants$1923.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLongNameLen$set(MemorySegment seg, long index, int x) {
        constants$1923.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szLongName$slice(MemorySegment seg) {
        return seg.asSlice(48, 40);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


