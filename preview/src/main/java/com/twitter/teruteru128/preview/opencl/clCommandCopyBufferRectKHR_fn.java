// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*clCommandCopyBufferRectKHR_fn)(struct _cl_command_buffer_khr* command_buffer,struct _cl_command_queue* command_queue,struct _cl_mem* src_buffer,struct _cl_mem* dst_buffer,unsigned long long* src_origin,unsigned long long* dst_origin,unsigned long long* region,unsigned long long src_row_pitch,unsigned long long src_slice_pitch,unsigned long long dst_row_pitch,unsigned long long dst_slice_pitch,unsigned int num_sync_points_in_wait_list,unsigned int* sync_point_wait_list,unsigned int* sync_point,struct _cl_mutable_command_khr** mutable_handle);
 * }
 */
public interface clCommandCopyBufferRectKHR_fn {

    int apply(java.lang.foreign.MemorySegment command_buffer, java.lang.foreign.MemorySegment command_queue, java.lang.foreign.MemorySegment src_buffer, java.lang.foreign.MemorySegment dst_buffer, java.lang.foreign.MemorySegment src_origin, java.lang.foreign.MemorySegment dst_origin, java.lang.foreign.MemorySegment region, long src_row_pitch, long src_slice_pitch, long dst_row_pitch, long dst_slice_pitch, int num_sync_points_in_wait_list, java.lang.foreign.MemorySegment sync_point_wait_list, java.lang.foreign.MemorySegment sync_point, java.lang.foreign.MemorySegment mutable_handle);
    static MemorySegment allocate(clCommandCopyBufferRectKHR_fn fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$213.const$5, fi, constants$213.const$4, scope);
    }
    static clCommandCopyBufferRectKHR_fn ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _command_buffer, java.lang.foreign.MemorySegment _command_queue, java.lang.foreign.MemorySegment _src_buffer, java.lang.foreign.MemorySegment _dst_buffer, java.lang.foreign.MemorySegment _src_origin, java.lang.foreign.MemorySegment _dst_origin, java.lang.foreign.MemorySegment _region, long _src_row_pitch, long _src_slice_pitch, long _dst_row_pitch, long _dst_slice_pitch, int _num_sync_points_in_wait_list, java.lang.foreign.MemorySegment _sync_point_wait_list, java.lang.foreign.MemorySegment _sync_point, java.lang.foreign.MemorySegment _mutable_handle) -> {
            try {
                return (int)constants$214.const$0.invokeExact(symbol, _command_buffer, _command_queue, _src_buffer, _dst_buffer, _src_origin, _dst_origin, _region, _src_row_pitch, _src_slice_pitch, _dst_row_pitch, _dst_slice_pitch, _num_sync_points_in_wait_list, _sync_point_wait_list, _sync_point, _mutable_handle);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


