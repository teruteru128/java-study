// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$3412 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$3412() {}
    static final VarHandle const$0 = constants$3411.const$4.varHandle(MemoryLayout.PathElement.groupElement("aRecord"));
    static final StructLayout const$1 = MemoryLayout.structLayout(
        JAVA_INT.withName("Size"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("apUnknown"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("Data1"),
            JAVA_SHORT.withName("Data2"),
            JAVA_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Data4")
        ).withName("iid")
    ).withName("_wireSAFEARR_HAVEIID");
    static final VarHandle const$2 = constants$3412.const$1.varHandle(MemoryLayout.PathElement.groupElement("Size"));
    static final VarHandle const$3 = constants$3412.const$1.varHandle(MemoryLayout.PathElement.groupElement("apUnknown"));
    static final StructLayout const$4 = MemoryLayout.structLayout(
        JAVA_INT.withName("sfType"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("aBstr")
            ).withName("BstrStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("apUnknown")
            ).withName("UnknownStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("apDispatch")
            ).withName("DispatchStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("aVariant")
            ).withName("VariantStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("aRecord")
            ).withName("RecordStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("Size"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("apUnknown"),
                MemoryLayout.structLayout(
                    JAVA_INT.withName("Data1"),
                    JAVA_SHORT.withName("Data2"),
                    JAVA_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, JAVA_BYTE).withName("Data4")
                ).withName("iid")
            ).withName("HaveIidStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("clSize"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("pData")
            ).withName("ByteStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("clSize"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("pData")
            ).withName("WordStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("clSize"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("pData")
            ).withName("LongStr"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("clSize"),
                MemoryLayout.paddingLayout(4),
                RuntimeHelper.POINTER.withName("pData")
            ).withName("HyperStr")
        ).withName("u")
    ).withName("_wireSAFEARRAY_UNION");
    static final VarHandle const$5 = constants$3412.const$4.varHandle(MemoryLayout.PathElement.groupElement("sfType"));
}


