// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$2720 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$2720() {}
    static final VarHandle const$0 = constants$2719.const$3.varHandle(MemoryLayout.PathElement.groupElement("SourceFileOffset"));
    static final VarHandle const$1 = constants$2719.const$3.varHandle(MemoryLayout.PathElement.groupElement("TargetFileOffset"));
    static final VarHandle const$2 = constants$2719.const$3.varHandle(MemoryLayout.PathElement.groupElement("ByteCount"));
    static final VarHandle const$3 = constants$2719.const$3.varHandle(MemoryLayout.PathElement.groupElement("BytesDuplicated"));
    static final StructLayout const$4 = MemoryLayout.structLayout(
        JAVA_INT.withName("Version"),
        JAVA_INT.withName("Flags"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("SizeOfRandomlyWritableTier"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("FreeSpaceInRandomlyWritableTier"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("SizeofSMRTier"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("FreeSpaceInSMRTier"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("LowPart"),
                JAVA_INT.withName("HighPart")
            ).withName("u"),
            JAVA_LONG.withName("QuadPart")
        ).withName("UsableFreeSpaceInSMRTier"),
        JAVA_INT.withName("VolumeGcState"),
        JAVA_INT.withName("VolumeGcLastStatus"),
        JAVA_INT.withName("CurrentGcBandFillPercentage"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.sequenceLayout(6, JAVA_LONG).withName("Unused")
    ).withName("_REFS_SMR_VOLUME_INFO_OUTPUT");
    static final VarHandle const$5 = constants$2720.const$4.varHandle(MemoryLayout.PathElement.groupElement("Version"));
}


