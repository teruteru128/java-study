// Generated by jextract

package com.twitter.teruteru128.preview.opencl;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _cl_mutable_dispatch_config_khr {
 *     cl_command_buffer_structure_type_khr type;
 *     void* next;
 *     cl_mutable_command_khr command;
 *     cl_uint num_args;
 *     cl_uint num_svm_args;
 *     cl_uint num_exec_infos;
 *     cl_uint work_dim;
 *     const cl_mutable_dispatch_arg_khr* arg_list;
 *     const cl_mutable_dispatch_arg_khr* arg_svm_list;
 *     const cl_mutable_dispatch_exec_info_khr* exec_info_list;
 *     const size_t* global_work_offset;
 *     const size_t* global_work_size;
 *     const size_t* local_work_size;
 * };
 * }
 */
public class _cl_mutable_dispatch_config_khr {

    public static MemoryLayout $LAYOUT() {
        return constants$221.const$3;
    }
    public static VarHandle type$VH() {
        return constants$221.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_command_buffer_structure_type_khr type;
     * }
     */
    public static int type$get(MemorySegment seg) {
        return (int)constants$221.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_command_buffer_structure_type_khr type;
     * }
     */
    public static void type$set(MemorySegment seg, int x) {
        constants$221.const$4.set(seg, x);
    }
    public static int type$get(MemorySegment seg, long index) {
        return (int)constants$221.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void type$set(MemorySegment seg, long index, int x) {
        constants$221.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle next$VH() {
        return constants$221.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* next;
     * }
     */
    public static MemorySegment next$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$221.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* next;
     * }
     */
    public static void next$set(MemorySegment seg, MemorySegment x) {
        constants$221.const$5.set(seg, x);
    }
    public static MemorySegment next$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$221.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void next$set(MemorySegment seg, long index, MemorySegment x) {
        constants$221.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle command$VH() {
        return constants$222.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_mutable_command_khr command;
     * }
     */
    public static MemorySegment command$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$222.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_mutable_command_khr command;
     * }
     */
    public static void command$set(MemorySegment seg, MemorySegment x) {
        constants$222.const$0.set(seg, x);
    }
    public static MemorySegment command$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$222.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void command$set(MemorySegment seg, long index, MemorySegment x) {
        constants$222.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle num_args$VH() {
        return constants$222.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uint num_args;
     * }
     */
    public static int num_args$get(MemorySegment seg) {
        return (int)constants$222.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uint num_args;
     * }
     */
    public static void num_args$set(MemorySegment seg, int x) {
        constants$222.const$1.set(seg, x);
    }
    public static int num_args$get(MemorySegment seg, long index) {
        return (int)constants$222.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void num_args$set(MemorySegment seg, long index, int x) {
        constants$222.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle num_svm_args$VH() {
        return constants$222.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uint num_svm_args;
     * }
     */
    public static int num_svm_args$get(MemorySegment seg) {
        return (int)constants$222.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uint num_svm_args;
     * }
     */
    public static void num_svm_args$set(MemorySegment seg, int x) {
        constants$222.const$2.set(seg, x);
    }
    public static int num_svm_args$get(MemorySegment seg, long index) {
        return (int)constants$222.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void num_svm_args$set(MemorySegment seg, long index, int x) {
        constants$222.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle num_exec_infos$VH() {
        return constants$222.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uint num_exec_infos;
     * }
     */
    public static int num_exec_infos$get(MemorySegment seg) {
        return (int)constants$222.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uint num_exec_infos;
     * }
     */
    public static void num_exec_infos$set(MemorySegment seg, int x) {
        constants$222.const$3.set(seg, x);
    }
    public static int num_exec_infos$get(MemorySegment seg, long index) {
        return (int)constants$222.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void num_exec_infos$set(MemorySegment seg, long index, int x) {
        constants$222.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle work_dim$VH() {
        return constants$222.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * cl_uint work_dim;
     * }
     */
    public static int work_dim$get(MemorySegment seg) {
        return (int)constants$222.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * cl_uint work_dim;
     * }
     */
    public static void work_dim$set(MemorySegment seg, int x) {
        constants$222.const$4.set(seg, x);
    }
    public static int work_dim$get(MemorySegment seg, long index) {
        return (int)constants$222.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void work_dim$set(MemorySegment seg, long index, int x) {
        constants$222.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle arg_list$VH() {
        return constants$222.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const cl_mutable_dispatch_arg_khr* arg_list;
     * }
     */
    public static MemorySegment arg_list$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$222.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const cl_mutable_dispatch_arg_khr* arg_list;
     * }
     */
    public static void arg_list$set(MemorySegment seg, MemorySegment x) {
        constants$222.const$5.set(seg, x);
    }
    public static MemorySegment arg_list$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$222.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void arg_list$set(MemorySegment seg, long index, MemorySegment x) {
        constants$222.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle arg_svm_list$VH() {
        return constants$223.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const cl_mutable_dispatch_arg_khr* arg_svm_list;
     * }
     */
    public static MemorySegment arg_svm_list$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$223.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const cl_mutable_dispatch_arg_khr* arg_svm_list;
     * }
     */
    public static void arg_svm_list$set(MemorySegment seg, MemorySegment x) {
        constants$223.const$0.set(seg, x);
    }
    public static MemorySegment arg_svm_list$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$223.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void arg_svm_list$set(MemorySegment seg, long index, MemorySegment x) {
        constants$223.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle exec_info_list$VH() {
        return constants$223.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const cl_mutable_dispatch_exec_info_khr* exec_info_list;
     * }
     */
    public static MemorySegment exec_info_list$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$223.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const cl_mutable_dispatch_exec_info_khr* exec_info_list;
     * }
     */
    public static void exec_info_list$set(MemorySegment seg, MemorySegment x) {
        constants$223.const$1.set(seg, x);
    }
    public static MemorySegment exec_info_list$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$223.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void exec_info_list$set(MemorySegment seg, long index, MemorySegment x) {
        constants$223.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle global_work_offset$VH() {
        return constants$223.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const size_t* global_work_offset;
     * }
     */
    public static MemorySegment global_work_offset$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$223.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const size_t* global_work_offset;
     * }
     */
    public static void global_work_offset$set(MemorySegment seg, MemorySegment x) {
        constants$223.const$2.set(seg, x);
    }
    public static MemorySegment global_work_offset$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$223.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void global_work_offset$set(MemorySegment seg, long index, MemorySegment x) {
        constants$223.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle global_work_size$VH() {
        return constants$223.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const size_t* global_work_size;
     * }
     */
    public static MemorySegment global_work_size$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$223.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const size_t* global_work_size;
     * }
     */
    public static void global_work_size$set(MemorySegment seg, MemorySegment x) {
        constants$223.const$3.set(seg, x);
    }
    public static MemorySegment global_work_size$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$223.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void global_work_size$set(MemorySegment seg, long index, MemorySegment x) {
        constants$223.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle local_work_size$VH() {
        return constants$223.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const size_t* local_work_size;
     * }
     */
    public static MemorySegment local_work_size$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$223.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const size_t* local_work_size;
     * }
     */
    public static void local_work_size$set(MemorySegment seg, MemorySegment x) {
        constants$223.const$4.set(seg, x);
    }
    public static MemorySegment local_work_size$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$223.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void local_work_size$set(MemorySegment seg, long index, MemorySegment x) {
        constants$223.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


