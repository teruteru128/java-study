// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_LOGOTYPE_IMAGE_INFO {
 *     DWORD dwLogotypeImageInfoChoice;
 *     DWORD dwFileSize;
 *     DWORD dwXSize;
 *     DWORD dwYSize;
 *     DWORD dwLogotypeImageResolutionChoice;
 *     union {
 *         DWORD dwNumBits;
 *         DWORD dwTableSize;
 *     };
 *     LPWSTR pwszLanguage;
 * };
 * }
 */
public class _CERT_LOGOTYPE_IMAGE_INFO {

    public static MemoryLayout $LAYOUT() {
        return constants$2058.const$0;
    }
    public static VarHandle dwLogotypeImageInfoChoice$VH() {
        return constants$2058.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLogotypeImageInfoChoice;
     * }
     */
    public static int dwLogotypeImageInfoChoice$get(MemorySegment seg) {
        return (int)constants$2058.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLogotypeImageInfoChoice;
     * }
     */
    public static void dwLogotypeImageInfoChoice$set(MemorySegment seg, int x) {
        constants$2058.const$1.set(seg, x);
    }
    public static int dwLogotypeImageInfoChoice$get(MemorySegment seg, long index) {
        return (int)constants$2058.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLogotypeImageInfoChoice$set(MemorySegment seg, long index, int x) {
        constants$2058.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFileSize$VH() {
        return constants$2058.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFileSize;
     * }
     */
    public static int dwFileSize$get(MemorySegment seg) {
        return (int)constants$2058.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFileSize;
     * }
     */
    public static void dwFileSize$set(MemorySegment seg, int x) {
        constants$2058.const$2.set(seg, x);
    }
    public static int dwFileSize$get(MemorySegment seg, long index) {
        return (int)constants$2058.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFileSize$set(MemorySegment seg, long index, int x) {
        constants$2058.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwXSize$VH() {
        return constants$2058.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwXSize;
     * }
     */
    public static int dwXSize$get(MemorySegment seg) {
        return (int)constants$2058.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwXSize;
     * }
     */
    public static void dwXSize$set(MemorySegment seg, int x) {
        constants$2058.const$3.set(seg, x);
    }
    public static int dwXSize$get(MemorySegment seg, long index) {
        return (int)constants$2058.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwXSize$set(MemorySegment seg, long index, int x) {
        constants$2058.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwYSize$VH() {
        return constants$2058.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwYSize;
     * }
     */
    public static int dwYSize$get(MemorySegment seg) {
        return (int)constants$2058.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwYSize;
     * }
     */
    public static void dwYSize$set(MemorySegment seg, int x) {
        constants$2058.const$4.set(seg, x);
    }
    public static int dwYSize$get(MemorySegment seg, long index) {
        return (int)constants$2058.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwYSize$set(MemorySegment seg, long index, int x) {
        constants$2058.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwLogotypeImageResolutionChoice$VH() {
        return constants$2058.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwLogotypeImageResolutionChoice;
     * }
     */
    public static int dwLogotypeImageResolutionChoice$get(MemorySegment seg) {
        return (int)constants$2058.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwLogotypeImageResolutionChoice;
     * }
     */
    public static void dwLogotypeImageResolutionChoice$set(MemorySegment seg, int x) {
        constants$2058.const$5.set(seg, x);
    }
    public static int dwLogotypeImageResolutionChoice$get(MemorySegment seg, long index) {
        return (int)constants$2058.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwLogotypeImageResolutionChoice$set(MemorySegment seg, long index, int x) {
        constants$2058.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwNumBits$VH() {
        return constants$2059.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwNumBits;
     * }
     */
    public static int dwNumBits$get(MemorySegment seg) {
        return (int)constants$2059.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwNumBits;
     * }
     */
    public static void dwNumBits$set(MemorySegment seg, int x) {
        constants$2059.const$0.set(seg, x);
    }
    public static int dwNumBits$get(MemorySegment seg, long index) {
        return (int)constants$2059.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwNumBits$set(MemorySegment seg, long index, int x) {
        constants$2059.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwTableSize$VH() {
        return constants$2059.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwTableSize;
     * }
     */
    public static int dwTableSize$get(MemorySegment seg) {
        return (int)constants$2059.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwTableSize;
     * }
     */
    public static void dwTableSize$set(MemorySegment seg, int x) {
        constants$2059.const$1.set(seg, x);
    }
    public static int dwTableSize$get(MemorySegment seg, long index) {
        return (int)constants$2059.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwTableSize$set(MemorySegment seg, long index, int x) {
        constants$2059.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pwszLanguage$VH() {
        return constants$2059.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszLanguage;
     * }
     */
    public static MemorySegment pwszLanguage$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$2059.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszLanguage;
     * }
     */
    public static void pwszLanguage$set(MemorySegment seg, MemorySegment x) {
        constants$2059.const$2.set(seg, x);
    }
    public static MemorySegment pwszLanguage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$2059.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszLanguage$set(MemorySegment seg, long index, MemorySegment x) {
        constants$2059.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


