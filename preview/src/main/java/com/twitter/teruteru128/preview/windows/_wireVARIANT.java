// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _wireVARIANT {
 *     DWORD clSize;
 *     DWORD rpcReserved;
 *     USHORT vt;
 *     USHORT wReserved1;
 *     USHORT wReserved2;
 *     USHORT wReserved3;
 *     union {
 *         LONGLONG llVal;
 *         LONG lVal;
 *         BYTE bVal;
 *         SHORT iVal;
 *         FLOAT fltVal;
 *         DOUBLE dblVal;
 *         VARIANT_BOOL boolVal;
 *         SCODE scode;
 *         CY cyVal;
 *         DATE date;
 *         wireBSTR bstrVal;
 *         IUnknown* punkVal;
 *         IDispatch* pdispVal;
 *         wirePSAFEARRAY parray;
 *         wireBRECORD brecVal;
 *         BYTE* pbVal;
 *         SHORT* piVal;
 *         LONG* plVal;
 *         LONGLONG* pllVal;
 *         FLOAT* pfltVal;
 *         DOUBLE* pdblVal;
 *         VARIANT_BOOL* pboolVal;
 *         SCODE* pscode;
 *         CY* pcyVal;
 *         DATE* pdate;
 *         wireBSTR* pbstrVal;
 *         IUnknown** ppunkVal;
 *         IDispatch** ppdispVal;
 *         wirePSAFEARRAY* pparray;
 *         wireVARIANT* pvarVal;
 *         CHAR cVal;
 *         USHORT uiVal;
 *         ULONG ulVal;
 *         ULONGLONG ullVal;
 *         INT intVal;
 *         UINT uintVal;
 *         DECIMAL decVal;
 *         DECIMAL* pdecVal;
 *         CHAR* pcVal;
 *         USHORT* puiVal;
 *         ULONG* pulVal;
 *         ULONGLONG* pullVal;
 *         INT* pintVal;
 *         UINT* puintVal;
 *     };
 * };
 * }
 */
public class _wireVARIANT {

    public static MemoryLayout $LAYOUT() {
        return constants$3424.const$2;
    }
    public static VarHandle clSize$VH() {
        return constants$3424.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD clSize;
     * }
     */
    public static int clSize$get(MemorySegment seg) {
        return (int)constants$3424.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD clSize;
     * }
     */
    public static void clSize$set(MemorySegment seg, int x) {
        constants$3424.const$3.set(seg, x);
    }
    public static int clSize$get(MemorySegment seg, long index) {
        return (int)constants$3424.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void clSize$set(MemorySegment seg, long index, int x) {
        constants$3424.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rpcReserved$VH() {
        return constants$3424.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD rpcReserved;
     * }
     */
    public static int rpcReserved$get(MemorySegment seg) {
        return (int)constants$3424.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD rpcReserved;
     * }
     */
    public static void rpcReserved$set(MemorySegment seg, int x) {
        constants$3424.const$4.set(seg, x);
    }
    public static int rpcReserved$get(MemorySegment seg, long index) {
        return (int)constants$3424.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void rpcReserved$set(MemorySegment seg, long index, int x) {
        constants$3424.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle vt$VH() {
        return constants$3424.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT vt;
     * }
     */
    public static short vt$get(MemorySegment seg) {
        return (short)constants$3424.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT vt;
     * }
     */
    public static void vt$set(MemorySegment seg, short x) {
        constants$3424.const$5.set(seg, x);
    }
    public static short vt$get(MemorySegment seg, long index) {
        return (short)constants$3424.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void vt$set(MemorySegment seg, long index, short x) {
        constants$3424.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wReserved1$VH() {
        return constants$3425.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT wReserved1;
     * }
     */
    public static short wReserved1$get(MemorySegment seg) {
        return (short)constants$3425.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT wReserved1;
     * }
     */
    public static void wReserved1$set(MemorySegment seg, short x) {
        constants$3425.const$0.set(seg, x);
    }
    public static short wReserved1$get(MemorySegment seg, long index) {
        return (short)constants$3425.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved1$set(MemorySegment seg, long index, short x) {
        constants$3425.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wReserved2$VH() {
        return constants$3425.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT wReserved2;
     * }
     */
    public static short wReserved2$get(MemorySegment seg) {
        return (short)constants$3425.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT wReserved2;
     * }
     */
    public static void wReserved2$set(MemorySegment seg, short x) {
        constants$3425.const$1.set(seg, x);
    }
    public static short wReserved2$get(MemorySegment seg, long index) {
        return (short)constants$3425.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved2$set(MemorySegment seg, long index, short x) {
        constants$3425.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wReserved3$VH() {
        return constants$3425.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT wReserved3;
     * }
     */
    public static short wReserved3$get(MemorySegment seg) {
        return (short)constants$3425.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT wReserved3;
     * }
     */
    public static void wReserved3$set(MemorySegment seg, short x) {
        constants$3425.const$2.set(seg, x);
    }
    public static short wReserved3$get(MemorySegment seg, long index) {
        return (short)constants$3425.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved3$set(MemorySegment seg, long index, short x) {
        constants$3425.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle llVal$VH() {
        return constants$3425.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG llVal;
     * }
     */
    public static long llVal$get(MemorySegment seg) {
        return (long)constants$3425.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG llVal;
     * }
     */
    public static void llVal$set(MemorySegment seg, long x) {
        constants$3425.const$3.set(seg, x);
    }
    public static long llVal$get(MemorySegment seg, long index) {
        return (long)constants$3425.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void llVal$set(MemorySegment seg, long index, long x) {
        constants$3425.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lVal$VH() {
        return constants$3425.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG lVal;
     * }
     */
    public static int lVal$get(MemorySegment seg) {
        return (int)constants$3425.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG lVal;
     * }
     */
    public static void lVal$set(MemorySegment seg, int x) {
        constants$3425.const$4.set(seg, x);
    }
    public static int lVal$get(MemorySegment seg, long index) {
        return (int)constants$3425.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lVal$set(MemorySegment seg, long index, int x) {
        constants$3425.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bVal$VH() {
        return constants$3425.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE bVal;
     * }
     */
    public static byte bVal$get(MemorySegment seg) {
        return (byte)constants$3425.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE bVal;
     * }
     */
    public static void bVal$set(MemorySegment seg, byte x) {
        constants$3425.const$5.set(seg, x);
    }
    public static byte bVal$get(MemorySegment seg, long index) {
        return (byte)constants$3425.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void bVal$set(MemorySegment seg, long index, byte x) {
        constants$3425.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iVal$VH() {
        return constants$3426.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SHORT iVal;
     * }
     */
    public static short iVal$get(MemorySegment seg) {
        return (short)constants$3426.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SHORT iVal;
     * }
     */
    public static void iVal$set(MemorySegment seg, short x) {
        constants$3426.const$0.set(seg, x);
    }
    public static short iVal$get(MemorySegment seg, long index) {
        return (short)constants$3426.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void iVal$set(MemorySegment seg, long index, short x) {
        constants$3426.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fltVal$VH() {
        return constants$3426.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT fltVal;
     * }
     */
    public static float fltVal$get(MemorySegment seg) {
        return (float)constants$3426.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT fltVal;
     * }
     */
    public static void fltVal$set(MemorySegment seg, float x) {
        constants$3426.const$1.set(seg, x);
    }
    public static float fltVal$get(MemorySegment seg, long index) {
        return (float)constants$3426.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void fltVal$set(MemorySegment seg, long index, float x) {
        constants$3426.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dblVal$VH() {
        return constants$3426.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DOUBLE dblVal;
     * }
     */
    public static double dblVal$get(MemorySegment seg) {
        return (double)constants$3426.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DOUBLE dblVal;
     * }
     */
    public static void dblVal$set(MemorySegment seg, double x) {
        constants$3426.const$2.set(seg, x);
    }
    public static double dblVal$get(MemorySegment seg, long index) {
        return (double)constants$3426.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dblVal$set(MemorySegment seg, long index, double x) {
        constants$3426.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle boolVal$VH() {
        return constants$3426.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL boolVal;
     * }
     */
    public static short boolVal$get(MemorySegment seg) {
        return (short)constants$3426.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL boolVal;
     * }
     */
    public static void boolVal$set(MemorySegment seg, short x) {
        constants$3426.const$3.set(seg, x);
    }
    public static short boolVal$get(MemorySegment seg, long index) {
        return (short)constants$3426.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void boolVal$set(MemorySegment seg, long index, short x) {
        constants$3426.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle scode$VH() {
        return constants$3426.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCODE scode;
     * }
     */
    public static int scode$get(MemorySegment seg) {
        return (int)constants$3426.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCODE scode;
     * }
     */
    public static void scode$set(MemorySegment seg, int x) {
        constants$3426.const$4.set(seg, x);
    }
    public static int scode$get(MemorySegment seg, long index) {
        return (int)constants$3426.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void scode$set(MemorySegment seg, long index, int x) {
        constants$3426.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment cyVal$slice(MemorySegment seg) {
        return seg.asSlice(16, 8);
    }
    public static VarHandle date$VH() {
        return constants$3426.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DATE date;
     * }
     */
    public static double date$get(MemorySegment seg) {
        return (double)constants$3426.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DATE date;
     * }
     */
    public static void date$set(MemorySegment seg, double x) {
        constants$3426.const$5.set(seg, x);
    }
    public static double date$get(MemorySegment seg, long index) {
        return (double)constants$3426.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void date$set(MemorySegment seg, long index, double x) {
        constants$3426.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bstrVal$VH() {
        return constants$3427.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wireBSTR bstrVal;
     * }
     */
    public static MemorySegment bstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wireBSTR bstrVal;
     * }
     */
    public static void bstrVal$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$0.set(seg, x);
    }
    public static MemorySegment bstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void bstrVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle punkVal$VH() {
        return constants$3427.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown* punkVal;
     * }
     */
    public static MemorySegment punkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown* punkVal;
     * }
     */
    public static void punkVal$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$1.set(seg, x);
    }
    public static MemorySegment punkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void punkVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pdispVal$VH() {
        return constants$3427.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IDispatch* pdispVal;
     * }
     */
    public static MemorySegment pdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IDispatch* pdispVal;
     * }
     */
    public static void pdispVal$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$2.set(seg, x);
    }
    public static MemorySegment pdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pdispVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle parray$VH() {
        return constants$3427.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wirePSAFEARRAY parray;
     * }
     */
    public static MemorySegment parray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wirePSAFEARRAY parray;
     * }
     */
    public static void parray$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$3.set(seg, x);
    }
    public static MemorySegment parray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void parray$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle brecVal$VH() {
        return constants$3427.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wireBRECORD brecVal;
     * }
     */
    public static MemorySegment brecVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wireBRECORD brecVal;
     * }
     */
    public static void brecVal$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$4.set(seg, x);
    }
    public static MemorySegment brecVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void brecVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pbVal$VH() {
        return constants$3427.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE* pbVal;
     * }
     */
    public static MemorySegment pbVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE* pbVal;
     * }
     */
    public static void pbVal$set(MemorySegment seg, MemorySegment x) {
        constants$3427.const$5.set(seg, x);
    }
    public static MemorySegment pbVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3427.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pbVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3427.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle piVal$VH() {
        return constants$3428.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SHORT* piVal;
     * }
     */
    public static MemorySegment piVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SHORT* piVal;
     * }
     */
    public static void piVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$0.set(seg, x);
    }
    public static MemorySegment piVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void piVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle plVal$VH() {
        return constants$3428.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG* plVal;
     * }
     */
    public static MemorySegment plVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG* plVal;
     * }
     */
    public static void plVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$1.set(seg, x);
    }
    public static MemorySegment plVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void plVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pllVal$VH() {
        return constants$3428.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG* pllVal;
     * }
     */
    public static MemorySegment pllVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG* pllVal;
     * }
     */
    public static void pllVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$2.set(seg, x);
    }
    public static MemorySegment pllVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pllVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pfltVal$VH() {
        return constants$3428.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT* pfltVal;
     * }
     */
    public static MemorySegment pfltVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT* pfltVal;
     * }
     */
    public static void pfltVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$3.set(seg, x);
    }
    public static MemorySegment pfltVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pfltVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pdblVal$VH() {
        return constants$3428.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DOUBLE* pdblVal;
     * }
     */
    public static MemorySegment pdblVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DOUBLE* pdblVal;
     * }
     */
    public static void pdblVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$4.set(seg, x);
    }
    public static MemorySegment pdblVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void pdblVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pboolVal$VH() {
        return constants$3428.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL* pboolVal;
     * }
     */
    public static MemorySegment pboolVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL* pboolVal;
     * }
     */
    public static void pboolVal$set(MemorySegment seg, MemorySegment x) {
        constants$3428.const$5.set(seg, x);
    }
    public static MemorySegment pboolVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3428.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pboolVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3428.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pscode$VH() {
        return constants$3429.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCODE* pscode;
     * }
     */
    public static MemorySegment pscode$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCODE* pscode;
     * }
     */
    public static void pscode$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$0.set(seg, x);
    }
    public static MemorySegment pscode$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pscode$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pcyVal$VH() {
        return constants$3429.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CY* pcyVal;
     * }
     */
    public static MemorySegment pcyVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CY* pcyVal;
     * }
     */
    public static void pcyVal$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$1.set(seg, x);
    }
    public static MemorySegment pcyVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pcyVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pdate$VH() {
        return constants$3429.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DATE* pdate;
     * }
     */
    public static MemorySegment pdate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DATE* pdate;
     * }
     */
    public static void pdate$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$2.set(seg, x);
    }
    public static MemorySegment pdate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pdate$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pbstrVal$VH() {
        return constants$3429.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wireBSTR* pbstrVal;
     * }
     */
    public static MemorySegment pbstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wireBSTR* pbstrVal;
     * }
     */
    public static void pbstrVal$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$3.set(seg, x);
    }
    public static MemorySegment pbstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pbstrVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ppunkVal$VH() {
        return constants$3429.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown** ppunkVal;
     * }
     */
    public static MemorySegment ppunkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown** ppunkVal;
     * }
     */
    public static void ppunkVal$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$4.set(seg, x);
    }
    public static MemorySegment ppunkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ppunkVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ppdispVal$VH() {
        return constants$3429.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IDispatch** ppdispVal;
     * }
     */
    public static MemorySegment ppdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IDispatch** ppdispVal;
     * }
     */
    public static void ppdispVal$set(MemorySegment seg, MemorySegment x) {
        constants$3429.const$5.set(seg, x);
    }
    public static MemorySegment ppdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3429.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ppdispVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3429.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pparray$VH() {
        return constants$3430.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wirePSAFEARRAY* pparray;
     * }
     */
    public static MemorySegment pparray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3430.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wirePSAFEARRAY* pparray;
     * }
     */
    public static void pparray$set(MemorySegment seg, MemorySegment x) {
        constants$3430.const$0.set(seg, x);
    }
    public static MemorySegment pparray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3430.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pparray$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3430.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pvarVal$VH() {
        return constants$3430.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * wireVARIANT* pvarVal;
     * }
     */
    public static MemorySegment pvarVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3430.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * wireVARIANT* pvarVal;
     * }
     */
    public static void pvarVal$set(MemorySegment seg, MemorySegment x) {
        constants$3430.const$1.set(seg, x);
    }
    public static MemorySegment pvarVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3430.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pvarVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3430.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cVal$VH() {
        return constants$3430.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CHAR cVal;
     * }
     */
    public static byte cVal$get(MemorySegment seg) {
        return (byte)constants$3430.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CHAR cVal;
     * }
     */
    public static void cVal$set(MemorySegment seg, byte x) {
        constants$3430.const$2.set(seg, x);
    }
    public static byte cVal$get(MemorySegment seg, long index) {
        return (byte)constants$3430.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cVal$set(MemorySegment seg, long index, byte x) {
        constants$3430.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uiVal$VH() {
        return constants$3430.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT uiVal;
     * }
     */
    public static short uiVal$get(MemorySegment seg) {
        return (short)constants$3430.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT uiVal;
     * }
     */
    public static void uiVal$set(MemorySegment seg, short x) {
        constants$3430.const$3.set(seg, x);
    }
    public static short uiVal$get(MemorySegment seg, long index) {
        return (short)constants$3430.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void uiVal$set(MemorySegment seg, long index, short x) {
        constants$3430.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ulVal$VH() {
        return constants$3430.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulVal;
     * }
     */
    public static int ulVal$get(MemorySegment seg) {
        return (int)constants$3430.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulVal;
     * }
     */
    public static void ulVal$set(MemorySegment seg, int x) {
        constants$3430.const$4.set(seg, x);
    }
    public static int ulVal$get(MemorySegment seg, long index) {
        return (int)constants$3430.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ulVal$set(MemorySegment seg, long index, int x) {
        constants$3430.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ullVal$VH() {
        return constants$3430.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONGLONG ullVal;
     * }
     */
    public static long ullVal$get(MemorySegment seg) {
        return (long)constants$3430.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONGLONG ullVal;
     * }
     */
    public static void ullVal$set(MemorySegment seg, long x) {
        constants$3430.const$5.set(seg, x);
    }
    public static long ullVal$get(MemorySegment seg, long index) {
        return (long)constants$3430.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void ullVal$set(MemorySegment seg, long index, long x) {
        constants$3430.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle intVal$VH() {
        return constants$3431.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT intVal;
     * }
     */
    public static int intVal$get(MemorySegment seg) {
        return (int)constants$3431.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT intVal;
     * }
     */
    public static void intVal$set(MemorySegment seg, int x) {
        constants$3431.const$0.set(seg, x);
    }
    public static int intVal$get(MemorySegment seg, long index) {
        return (int)constants$3431.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void intVal$set(MemorySegment seg, long index, int x) {
        constants$3431.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle uintVal$VH() {
        return constants$3431.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT uintVal;
     * }
     */
    public static int uintVal$get(MemorySegment seg) {
        return (int)constants$3431.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT uintVal;
     * }
     */
    public static void uintVal$set(MemorySegment seg, int x) {
        constants$3431.const$1.set(seg, x);
    }
    public static int uintVal$get(MemorySegment seg, long index) {
        return (int)constants$3431.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void uintVal$set(MemorySegment seg, long index, int x) {
        constants$3431.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment decVal$slice(MemorySegment seg) {
        return seg.asSlice(16, 16);
    }
    public static VarHandle pdecVal$VH() {
        return constants$3431.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DECIMAL* pdecVal;
     * }
     */
    public static MemorySegment pdecVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DECIMAL* pdecVal;
     * }
     */
    public static void pdecVal$set(MemorySegment seg, MemorySegment x) {
        constants$3431.const$2.set(seg, x);
    }
    public static MemorySegment pdecVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void pdecVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3431.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pcVal$VH() {
        return constants$3431.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CHAR* pcVal;
     * }
     */
    public static MemorySegment pcVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CHAR* pcVal;
     * }
     */
    public static void pcVal$set(MemorySegment seg, MemorySegment x) {
        constants$3431.const$3.set(seg, x);
    }
    public static MemorySegment pcVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pcVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3431.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle puiVal$VH() {
        return constants$3431.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT* puiVal;
     * }
     */
    public static MemorySegment puiVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT* puiVal;
     * }
     */
    public static void puiVal$set(MemorySegment seg, MemorySegment x) {
        constants$3431.const$4.set(seg, x);
    }
    public static MemorySegment puiVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void puiVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3431.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pulVal$VH() {
        return constants$3431.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG* pulVal;
     * }
     */
    public static MemorySegment pulVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG* pulVal;
     * }
     */
    public static void pulVal$set(MemorySegment seg, MemorySegment x) {
        constants$3431.const$5.set(seg, x);
    }
    public static MemorySegment pulVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3431.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void pulVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3431.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pullVal$VH() {
        return constants$3432.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONGLONG* pullVal;
     * }
     */
    public static MemorySegment pullVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONGLONG* pullVal;
     * }
     */
    public static void pullVal$set(MemorySegment seg, MemorySegment x) {
        constants$3432.const$0.set(seg, x);
    }
    public static MemorySegment pullVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void pullVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3432.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pintVal$VH() {
        return constants$3432.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT* pintVal;
     * }
     */
    public static MemorySegment pintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT* pintVal;
     * }
     */
    public static void pintVal$set(MemorySegment seg, MemorySegment x) {
        constants$3432.const$1.set(seg, x);
    }
    public static MemorySegment pintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void pintVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3432.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle puintVal$VH() {
        return constants$3432.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT* puintVal;
     * }
     */
    public static MemorySegment puintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT* puintVal;
     * }
     */
    public static void puintVal$set(MemorySegment seg, MemorySegment x) {
        constants$3432.const$2.set(seg, x);
    }
    public static MemorySegment puintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$3432.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void puintVal$set(MemorySegment seg, long index, MemorySegment x) {
        constants$3432.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


