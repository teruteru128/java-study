// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CHANGER_ELEMENT_STATUS_EX {
 *     CHANGER_ELEMENT Element;
 *     CHANGER_ELEMENT SrcElementAddress;
 *     DWORD Flags;
 *     DWORD ExceptionCode;
 *     BYTE TargetId;
 *     BYTE Lun;
 *     WORD Reserved;
 *     BYTE PrimaryVolumeID[36];
 *     BYTE AlternateVolumeID[36];
 *     BYTE VendorIdentification[8];
 *     BYTE ProductIdentification[16];
 *     BYTE SerialNumber[32];
 * };
 * }
 */
public class _CHANGER_ELEMENT_STATUS_EX {

    public static MemoryLayout $LAYOUT() {
        return constants$2568.const$5;
    }
    public static MemorySegment Element$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static MemorySegment SrcElementAddress$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static VarHandle Flags$VH() {
        return constants$2569.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)constants$2569.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        constants$2569.const$0.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)constants$2569.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        constants$2569.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ExceptionCode$VH() {
        return constants$2569.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ExceptionCode;
     * }
     */
    public static int ExceptionCode$get(MemorySegment seg) {
        return (int)constants$2569.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ExceptionCode;
     * }
     */
    public static void ExceptionCode$set(MemorySegment seg, int x) {
        constants$2569.const$1.set(seg, x);
    }
    public static int ExceptionCode$get(MemorySegment seg, long index) {
        return (int)constants$2569.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ExceptionCode$set(MemorySegment seg, long index, int x) {
        constants$2569.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle TargetId$VH() {
        return constants$2569.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE TargetId;
     * }
     */
    public static byte TargetId$get(MemorySegment seg) {
        return (byte)constants$2569.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE TargetId;
     * }
     */
    public static void TargetId$set(MemorySegment seg, byte x) {
        constants$2569.const$2.set(seg, x);
    }
    public static byte TargetId$get(MemorySegment seg, long index) {
        return (byte)constants$2569.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void TargetId$set(MemorySegment seg, long index, byte x) {
        constants$2569.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Lun$VH() {
        return constants$2569.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE Lun;
     * }
     */
    public static byte Lun$get(MemorySegment seg) {
        return (byte)constants$2569.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE Lun;
     * }
     */
    public static void Lun$set(MemorySegment seg, byte x) {
        constants$2569.const$3.set(seg, x);
    }
    public static byte Lun$get(MemorySegment seg, long index) {
        return (byte)constants$2569.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Lun$set(MemorySegment seg, long index, byte x) {
        constants$2569.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Reserved$VH() {
        return constants$2569.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static short Reserved$get(MemorySegment seg) {
        return (short)constants$2569.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, short x) {
        constants$2569.const$4.set(seg, x);
    }
    public static short Reserved$get(MemorySegment seg, long index) {
        return (short)constants$2569.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, short x) {
        constants$2569.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment PrimaryVolumeID$slice(MemorySegment seg) {
        return seg.asSlice(28, 36);
    }
    public static MemorySegment AlternateVolumeID$slice(MemorySegment seg) {
        return seg.asSlice(64, 36);
    }
    public static MemorySegment VendorIdentification$slice(MemorySegment seg) {
        return seg.asSlice(100, 8);
    }
    public static MemorySegment ProductIdentification$slice(MemorySegment seg) {
        return seg.asSlice(108, 16);
    }
    public static MemorySegment SerialNumber$slice(MemorySegment seg) {
        return seg.asSlice(124, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


