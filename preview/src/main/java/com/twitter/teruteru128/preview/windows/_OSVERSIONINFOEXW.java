// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _OSVERSIONINFOEXW {
 *     DWORD dwOSVersionInfoSize;
 *     DWORD dwMajorVersion;
 *     DWORD dwMinorVersion;
 *     DWORD dwBuildNumber;
 *     DWORD dwPlatformId;
 *     WCHAR szCSDVersion[128];
 *     WORD wServicePackMajor;
 *     WORD wServicePackMinor;
 *     WORD wSuiteMask;
 *     BYTE wProductType;
 *     BYTE wReserved;
 * };
 * }
 */
public class _OSVERSIONINFOEXW {

    public static MemoryLayout $LAYOUT() {
        return constants$480.const$0;
    }
    public static VarHandle dwOSVersionInfoSize$VH() {
        return constants$480.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwOSVersionInfoSize;
     * }
     */
    public static int dwOSVersionInfoSize$get(MemorySegment seg) {
        return (int)constants$480.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwOSVersionInfoSize;
     * }
     */
    public static void dwOSVersionInfoSize$set(MemorySegment seg, int x) {
        constants$480.const$1.set(seg, x);
    }
    public static int dwOSVersionInfoSize$get(MemorySegment seg, long index) {
        return (int)constants$480.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dwOSVersionInfoSize$set(MemorySegment seg, long index, int x) {
        constants$480.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMajorVersion$VH() {
        return constants$480.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMajorVersion;
     * }
     */
    public static int dwMajorVersion$get(MemorySegment seg) {
        return (int)constants$480.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMajorVersion;
     * }
     */
    public static void dwMajorVersion$set(MemorySegment seg, int x) {
        constants$480.const$2.set(seg, x);
    }
    public static int dwMajorVersion$get(MemorySegment seg, long index) {
        return (int)constants$480.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMajorVersion$set(MemorySegment seg, long index, int x) {
        constants$480.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwMinorVersion$VH() {
        return constants$480.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwMinorVersion;
     * }
     */
    public static int dwMinorVersion$get(MemorySegment seg) {
        return (int)constants$480.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwMinorVersion;
     * }
     */
    public static void dwMinorVersion$set(MemorySegment seg, int x) {
        constants$480.const$3.set(seg, x);
    }
    public static int dwMinorVersion$get(MemorySegment seg, long index) {
        return (int)constants$480.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMinorVersion$set(MemorySegment seg, long index, int x) {
        constants$480.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwBuildNumber$VH() {
        return constants$480.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwBuildNumber;
     * }
     */
    public static int dwBuildNumber$get(MemorySegment seg) {
        return (int)constants$480.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwBuildNumber;
     * }
     */
    public static void dwBuildNumber$set(MemorySegment seg, int x) {
        constants$480.const$4.set(seg, x);
    }
    public static int dwBuildNumber$get(MemorySegment seg, long index) {
        return (int)constants$480.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwBuildNumber$set(MemorySegment seg, long index, int x) {
        constants$480.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPlatformId$VH() {
        return constants$480.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPlatformId;
     * }
     */
    public static int dwPlatformId$get(MemorySegment seg) {
        return (int)constants$480.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPlatformId;
     * }
     */
    public static void dwPlatformId$set(MemorySegment seg, int x) {
        constants$480.const$5.set(seg, x);
    }
    public static int dwPlatformId$get(MemorySegment seg, long index) {
        return (int)constants$480.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPlatformId$set(MemorySegment seg, long index, int x) {
        constants$480.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szCSDVersion$slice(MemorySegment seg) {
        return seg.asSlice(20, 256);
    }
    public static VarHandle wServicePackMajor$VH() {
        return constants$481.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wServicePackMajor;
     * }
     */
    public static short wServicePackMajor$get(MemorySegment seg) {
        return (short)constants$481.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wServicePackMajor;
     * }
     */
    public static void wServicePackMajor$set(MemorySegment seg, short x) {
        constants$481.const$0.set(seg, x);
    }
    public static short wServicePackMajor$get(MemorySegment seg, long index) {
        return (short)constants$481.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void wServicePackMajor$set(MemorySegment seg, long index, short x) {
        constants$481.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wServicePackMinor$VH() {
        return constants$481.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wServicePackMinor;
     * }
     */
    public static short wServicePackMinor$get(MemorySegment seg) {
        return (short)constants$481.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wServicePackMinor;
     * }
     */
    public static void wServicePackMinor$set(MemorySegment seg, short x) {
        constants$481.const$1.set(seg, x);
    }
    public static short wServicePackMinor$get(MemorySegment seg, long index) {
        return (short)constants$481.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wServicePackMinor$set(MemorySegment seg, long index, short x) {
        constants$481.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wSuiteMask$VH() {
        return constants$481.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wSuiteMask;
     * }
     */
    public static short wSuiteMask$get(MemorySegment seg) {
        return (short)constants$481.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wSuiteMask;
     * }
     */
    public static void wSuiteMask$set(MemorySegment seg, short x) {
        constants$481.const$2.set(seg, x);
    }
    public static short wSuiteMask$get(MemorySegment seg, long index) {
        return (short)constants$481.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void wSuiteMask$set(MemorySegment seg, long index, short x) {
        constants$481.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wProductType$VH() {
        return constants$481.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE wProductType;
     * }
     */
    public static byte wProductType$get(MemorySegment seg) {
        return (byte)constants$481.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE wProductType;
     * }
     */
    public static void wProductType$set(MemorySegment seg, byte x) {
        constants$481.const$3.set(seg, x);
    }
    public static byte wProductType$get(MemorySegment seg, long index) {
        return (byte)constants$481.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wProductType$set(MemorySegment seg, long index, byte x) {
        constants$481.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wReserved$VH() {
        return constants$481.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE wReserved;
     * }
     */
    public static byte wReserved$get(MemorySegment seg) {
        return (byte)constants$481.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE wReserved;
     * }
     */
    public static void wReserved$set(MemorySegment seg, byte x) {
        constants$481.const$4.set(seg, x);
    }
    public static byte wReserved$get(MemorySegment seg, long index) {
        return (byte)constants$481.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved$set(MemorySegment seg, long index, byte x) {
        constants$481.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


