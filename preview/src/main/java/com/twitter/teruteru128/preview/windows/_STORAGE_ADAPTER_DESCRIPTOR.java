// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _STORAGE_ADAPTER_DESCRIPTOR {
 *     DWORD Version;
 *     DWORD Size;
 *     DWORD MaximumTransferLength;
 *     DWORD MaximumPhysicalPages;
 *     DWORD AlignmentMask;
 *     BOOLEAN AdapterUsesPio;
 *     BOOLEAN AdapterScansDown;
 *     BOOLEAN CommandQueueing;
 *     BOOLEAN AcceleratedTransfer;
 *     BYTE BusType;
 *     WORD BusMajorVersion;
 *     WORD BusMinorVersion;
 *     BYTE SrbType;
 *     BYTE AddressType;
 * };
 * }
 */
public class _STORAGE_ADAPTER_DESCRIPTOR {

    public static MemoryLayout $LAYOUT() {
        return constants$2388.const$1;
    }
    public static VarHandle Version$VH() {
        return constants$2388.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$2388.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$2388.const$2.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$2388.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$2388.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Size$VH() {
        return constants$2388.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static int Size$get(MemorySegment seg) {
        return (int)constants$2388.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Size;
     * }
     */
    public static void Size$set(MemorySegment seg, int x) {
        constants$2388.const$3.set(seg, x);
    }
    public static int Size$get(MemorySegment seg, long index) {
        return (int)constants$2388.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void Size$set(MemorySegment seg, long index, int x) {
        constants$2388.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MaximumTransferLength$VH() {
        return constants$2388.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MaximumTransferLength;
     * }
     */
    public static int MaximumTransferLength$get(MemorySegment seg) {
        return (int)constants$2388.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MaximumTransferLength;
     * }
     */
    public static void MaximumTransferLength$set(MemorySegment seg, int x) {
        constants$2388.const$4.set(seg, x);
    }
    public static int MaximumTransferLength$get(MemorySegment seg, long index) {
        return (int)constants$2388.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void MaximumTransferLength$set(MemorySegment seg, long index, int x) {
        constants$2388.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MaximumPhysicalPages$VH() {
        return constants$2388.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD MaximumPhysicalPages;
     * }
     */
    public static int MaximumPhysicalPages$get(MemorySegment seg) {
        return (int)constants$2388.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD MaximumPhysicalPages;
     * }
     */
    public static void MaximumPhysicalPages$set(MemorySegment seg, int x) {
        constants$2388.const$5.set(seg, x);
    }
    public static int MaximumPhysicalPages$get(MemorySegment seg, long index) {
        return (int)constants$2388.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void MaximumPhysicalPages$set(MemorySegment seg, long index, int x) {
        constants$2388.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AlignmentMask$VH() {
        return constants$2389.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD AlignmentMask;
     * }
     */
    public static int AlignmentMask$get(MemorySegment seg) {
        return (int)constants$2389.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD AlignmentMask;
     * }
     */
    public static void AlignmentMask$set(MemorySegment seg, int x) {
        constants$2389.const$0.set(seg, x);
    }
    public static int AlignmentMask$get(MemorySegment seg, long index) {
        return (int)constants$2389.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void AlignmentMask$set(MemorySegment seg, long index, int x) {
        constants$2389.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AdapterUsesPio$VH() {
        return constants$2389.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN AdapterUsesPio;
     * }
     */
    public static byte AdapterUsesPio$get(MemorySegment seg) {
        return (byte)constants$2389.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN AdapterUsesPio;
     * }
     */
    public static void AdapterUsesPio$set(MemorySegment seg, byte x) {
        constants$2389.const$1.set(seg, x);
    }
    public static byte AdapterUsesPio$get(MemorySegment seg, long index) {
        return (byte)constants$2389.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterUsesPio$set(MemorySegment seg, long index, byte x) {
        constants$2389.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AdapterScansDown$VH() {
        return constants$2389.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN AdapterScansDown;
     * }
     */
    public static byte AdapterScansDown$get(MemorySegment seg) {
        return (byte)constants$2389.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN AdapterScansDown;
     * }
     */
    public static void AdapterScansDown$set(MemorySegment seg, byte x) {
        constants$2389.const$2.set(seg, x);
    }
    public static byte AdapterScansDown$get(MemorySegment seg, long index) {
        return (byte)constants$2389.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void AdapterScansDown$set(MemorySegment seg, long index, byte x) {
        constants$2389.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle CommandQueueing$VH() {
        return constants$2389.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN CommandQueueing;
     * }
     */
    public static byte CommandQueueing$get(MemorySegment seg) {
        return (byte)constants$2389.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN CommandQueueing;
     * }
     */
    public static void CommandQueueing$set(MemorySegment seg, byte x) {
        constants$2389.const$3.set(seg, x);
    }
    public static byte CommandQueueing$get(MemorySegment seg, long index) {
        return (byte)constants$2389.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void CommandQueueing$set(MemorySegment seg, long index, byte x) {
        constants$2389.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AcceleratedTransfer$VH() {
        return constants$2389.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BOOLEAN AcceleratedTransfer;
     * }
     */
    public static byte AcceleratedTransfer$get(MemorySegment seg) {
        return (byte)constants$2389.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BOOLEAN AcceleratedTransfer;
     * }
     */
    public static void AcceleratedTransfer$set(MemorySegment seg, byte x) {
        constants$2389.const$4.set(seg, x);
    }
    public static byte AcceleratedTransfer$get(MemorySegment seg, long index) {
        return (byte)constants$2389.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AcceleratedTransfer$set(MemorySegment seg, long index, byte x) {
        constants$2389.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BusType$VH() {
        return constants$2389.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE BusType;
     * }
     */
    public static byte BusType$get(MemorySegment seg) {
        return (byte)constants$2389.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE BusType;
     * }
     */
    public static void BusType$set(MemorySegment seg, byte x) {
        constants$2389.const$5.set(seg, x);
    }
    public static byte BusType$get(MemorySegment seg, long index) {
        return (byte)constants$2389.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void BusType$set(MemorySegment seg, long index, byte x) {
        constants$2389.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BusMajorVersion$VH() {
        return constants$2390.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD BusMajorVersion;
     * }
     */
    public static short BusMajorVersion$get(MemorySegment seg) {
        return (short)constants$2390.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD BusMajorVersion;
     * }
     */
    public static void BusMajorVersion$set(MemorySegment seg, short x) {
        constants$2390.const$0.set(seg, x);
    }
    public static short BusMajorVersion$get(MemorySegment seg, long index) {
        return (short)constants$2390.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void BusMajorVersion$set(MemorySegment seg, long index, short x) {
        constants$2390.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle BusMinorVersion$VH() {
        return constants$2390.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD BusMinorVersion;
     * }
     */
    public static short BusMinorVersion$get(MemorySegment seg) {
        return (short)constants$2390.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD BusMinorVersion;
     * }
     */
    public static void BusMinorVersion$set(MemorySegment seg, short x) {
        constants$2390.const$1.set(seg, x);
    }
    public static short BusMinorVersion$get(MemorySegment seg, long index) {
        return (short)constants$2390.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void BusMinorVersion$set(MemorySegment seg, long index, short x) {
        constants$2390.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SrbType$VH() {
        return constants$2390.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE SrbType;
     * }
     */
    public static byte SrbType$get(MemorySegment seg) {
        return (byte)constants$2390.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE SrbType;
     * }
     */
    public static void SrbType$set(MemorySegment seg, byte x) {
        constants$2390.const$2.set(seg, x);
    }
    public static byte SrbType$get(MemorySegment seg, long index) {
        return (byte)constants$2390.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void SrbType$set(MemorySegment seg, long index, byte x) {
        constants$2390.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AddressType$VH() {
        return constants$2390.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE AddressType;
     * }
     */
    public static byte AddressType$get(MemorySegment seg) {
        return (byte)constants$2390.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE AddressType;
     * }
     */
    public static void AddressType$set(MemorySegment seg, byte x) {
        constants$2390.const$3.set(seg, x);
    }
    public static byte AddressType$get(MemorySegment seg, long index) {
        return (byte)constants$2390.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AddressType$set(MemorySegment seg, long index, byte x) {
        constants$2390.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


