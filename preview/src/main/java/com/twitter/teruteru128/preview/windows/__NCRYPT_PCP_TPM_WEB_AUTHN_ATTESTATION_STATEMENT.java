// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT {
 *     UINT32 Magic;
 *     UINT32 Version;
 *     UINT32 HeaderSize;
 *     UINT32 cbCertifyInfo;
 *     UINT32 cbSignature;
 *     UINT32 cbTpmPublic;
 * };
 * }
 */
public class __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT {

    public static MemoryLayout $LAYOUT() {
        return constants$1985.const$3;
    }
    public static VarHandle Magic$VH() {
        return constants$1985.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 Magic;
     * }
     */
    public static int Magic$get(MemorySegment seg) {
        return (int)constants$1985.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 Magic;
     * }
     */
    public static void Magic$set(MemorySegment seg, int x) {
        constants$1985.const$4.set(seg, x);
    }
    public static int Magic$get(MemorySegment seg, long index) {
        return (int)constants$1985.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void Magic$set(MemorySegment seg, long index, int x) {
        constants$1985.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle Version$VH() {
        return constants$1985.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$1985.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$1985.const$5.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$1985.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$1985.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle HeaderSize$VH() {
        return constants$1986.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 HeaderSize;
     * }
     */
    public static int HeaderSize$get(MemorySegment seg) {
        return (int)constants$1986.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 HeaderSize;
     * }
     */
    public static void HeaderSize$set(MemorySegment seg, int x) {
        constants$1986.const$0.set(seg, x);
    }
    public static int HeaderSize$get(MemorySegment seg, long index) {
        return (int)constants$1986.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void HeaderSize$set(MemorySegment seg, long index, int x) {
        constants$1986.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbCertifyInfo$VH() {
        return constants$1986.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 cbCertifyInfo;
     * }
     */
    public static int cbCertifyInfo$get(MemorySegment seg) {
        return (int)constants$1986.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 cbCertifyInfo;
     * }
     */
    public static void cbCertifyInfo$set(MemorySegment seg, int x) {
        constants$1986.const$1.set(seg, x);
    }
    public static int cbCertifyInfo$get(MemorySegment seg, long index) {
        return (int)constants$1986.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbCertifyInfo$set(MemorySegment seg, long index, int x) {
        constants$1986.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbSignature$VH() {
        return constants$1986.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 cbSignature;
     * }
     */
    public static int cbSignature$get(MemorySegment seg) {
        return (int)constants$1986.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 cbSignature;
     * }
     */
    public static void cbSignature$set(MemorySegment seg, int x) {
        constants$1986.const$2.set(seg, x);
    }
    public static int cbSignature$get(MemorySegment seg, long index) {
        return (int)constants$1986.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSignature$set(MemorySegment seg, long index, int x) {
        constants$1986.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbTpmPublic$VH() {
        return constants$1986.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT32 cbTpmPublic;
     * }
     */
    public static int cbTpmPublic$get(MemorySegment seg) {
        return (int)constants$1986.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT32 cbTpmPublic;
     * }
     */
    public static void cbTpmPublic$set(MemorySegment seg, int x) {
        constants$1986.const$3.set(seg, x);
    }
    public static int cbTpmPublic$get(MemorySegment seg, long index) {
        return (int)constants$1986.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cbTpmPublic$set(MemorySegment seg, long index, int x) {
        constants$1986.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


