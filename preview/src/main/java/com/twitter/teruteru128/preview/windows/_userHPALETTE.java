// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _userHPALETTE {
 *     LONG fContext;
 *     union __MIDL_IWinTypes_0008 u;
 * };
 * }
 */
public class _userHPALETTE {

    public static MemoryLayout $LAYOUT() {
        return constants$2358.const$5;
    }
    public static VarHandle fContext$VH() {
        return constants$2359.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG fContext;
     * }
     */
    public static int fContext$get(MemorySegment seg) {
        return (int)constants$2359.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG fContext;
     * }
     */
    public static void fContext$set(MemorySegment seg, int x) {
        constants$2359.const$0.set(seg, x);
    }
    public static int fContext$get(MemorySegment seg, long index) {
        return (int)constants$2359.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void fContext$set(MemorySegment seg, long index, int x) {
        constants$2359.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * union __MIDL_IWinTypes_0008 {
     *     LONG hInproc;
     *     LOGPALETTE* hRemote;
     *     long long hInproc64;
     * };
     * }
     */
    public static final class __MIDL_IWinTypes_0008 {

        // Suppresses default constructor, ensuring non-instantiability.
        private __MIDL_IWinTypes_0008() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2359.const$1;
        }
        public static VarHandle hInproc$VH() {
            return constants$2359.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * LONG hInproc;
         * }
         */
        public static int hInproc$get(MemorySegment seg) {
            return (int)constants$2359.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * LONG hInproc;
         * }
         */
        public static void hInproc$set(MemorySegment seg, int x) {
            constants$2359.const$2.set(seg, x);
        }
        public static int hInproc$get(MemorySegment seg, long index) {
            return (int)constants$2359.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void hInproc$set(MemorySegment seg, long index, int x) {
            constants$2359.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hRemote$VH() {
            return constants$2359.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * LOGPALETTE* hRemote;
         * }
         */
        public static MemorySegment hRemote$get(MemorySegment seg) {
            return (java.lang.foreign.MemorySegment)constants$2359.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * LOGPALETTE* hRemote;
         * }
         */
        public static void hRemote$set(MemorySegment seg, MemorySegment x) {
            constants$2359.const$3.set(seg, x);
        }
        public static MemorySegment hRemote$get(MemorySegment seg, long index) {
            return (java.lang.foreign.MemorySegment)constants$2359.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void hRemote$set(MemorySegment seg, long index, MemorySegment x) {
            constants$2359.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hInproc64$VH() {
            return constants$2359.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * long long hInproc64;
         * }
         */
        public static long hInproc64$get(MemorySegment seg) {
            return (long)constants$2359.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * long long hInproc64;
         * }
         */
        public static void hInproc64$set(MemorySegment seg, long x) {
            constants$2359.const$4.set(seg, x);
        }
        public static long hInproc64$get(MemorySegment seg, long index) {
            return (long)constants$2359.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void hInproc64$set(MemorySegment seg, long index, long x) {
            constants$2359.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment u$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


