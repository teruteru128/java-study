// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagHELPWININFOA {
 *     int wStructSize;
 *     int x;
 *     int y;
 *     int dx;
 *     int dy;
 *     int wMax;
 *     CHAR rgchMember[2];
 * };
 * }
 */
public class tagHELPWININFOA {

    public static MemoryLayout $LAYOUT() {
        return constants$1334.const$3;
    }
    public static VarHandle wStructSize$VH() {
        return constants$1334.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int wStructSize;
     * }
     */
    public static int wStructSize$get(MemorySegment seg) {
        return (int)constants$1334.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int wStructSize;
     * }
     */
    public static void wStructSize$set(MemorySegment seg, int x) {
        constants$1334.const$4.set(seg, x);
    }
    public static int wStructSize$get(MemorySegment seg, long index) {
        return (int)constants$1334.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void wStructSize$set(MemorySegment seg, long index, int x) {
        constants$1334.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle x$VH() {
        return constants$1334.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int x;
     * }
     */
    public static int x$get(MemorySegment seg) {
        return (int)constants$1334.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int x;
     * }
     */
    public static void x$set(MemorySegment seg, int x) {
        constants$1334.const$5.set(seg, x);
    }
    public static int x$get(MemorySegment seg, long index) {
        return (int)constants$1334.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void x$set(MemorySegment seg, long index, int x) {
        constants$1334.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle y$VH() {
        return constants$1335.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int y;
     * }
     */
    public static int y$get(MemorySegment seg) {
        return (int)constants$1335.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int y;
     * }
     */
    public static void y$set(MemorySegment seg, int x) {
        constants$1335.const$0.set(seg, x);
    }
    public static int y$get(MemorySegment seg, long index) {
        return (int)constants$1335.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void y$set(MemorySegment seg, long index, int x) {
        constants$1335.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dx$VH() {
        return constants$1335.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int dx;
     * }
     */
    public static int dx$get(MemorySegment seg) {
        return (int)constants$1335.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int dx;
     * }
     */
    public static void dx$set(MemorySegment seg, int x) {
        constants$1335.const$1.set(seg, x);
    }
    public static int dx$get(MemorySegment seg, long index) {
        return (int)constants$1335.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dx$set(MemorySegment seg, long index, int x) {
        constants$1335.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dy$VH() {
        return constants$1335.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int dy;
     * }
     */
    public static int dy$get(MemorySegment seg) {
        return (int)constants$1335.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int dy;
     * }
     */
    public static void dy$set(MemorySegment seg, int x) {
        constants$1335.const$2.set(seg, x);
    }
    public static int dy$get(MemorySegment seg, long index) {
        return (int)constants$1335.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dy$set(MemorySegment seg, long index, int x) {
        constants$1335.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wMax$VH() {
        return constants$1335.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int wMax;
     * }
     */
    public static int wMax$get(MemorySegment seg) {
        return (int)constants$1335.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int wMax;
     * }
     */
    public static void wMax$set(MemorySegment seg, int x) {
        constants$1335.const$3.set(seg, x);
    }
    public static int wMax$get(MemorySegment seg, long index) {
        return (int)constants$1335.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void wMax$set(MemorySegment seg, long index, int x) {
        constants$1335.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment rgchMember$slice(MemorySegment seg) {
        return seg.asSlice(24, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


