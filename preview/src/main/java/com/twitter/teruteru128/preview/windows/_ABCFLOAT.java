// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _ABCFLOAT {
 *     FLOAT abcfA;
 *     FLOAT abcfB;
 *     FLOAT abcfC;
 * };
 * }
 */
public class _ABCFLOAT {

    public static MemoryLayout $LAYOUT() {
        return constants$970.const$3;
    }
    public static VarHandle abcfA$VH() {
        return constants$970.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT abcfA;
     * }
     */
    public static float abcfA$get(MemorySegment seg) {
        return (float)constants$970.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT abcfA;
     * }
     */
    public static void abcfA$set(MemorySegment seg, float x) {
        constants$970.const$4.set(seg, x);
    }
    public static float abcfA$get(MemorySegment seg, long index) {
        return (float)constants$970.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void abcfA$set(MemorySegment seg, long index, float x) {
        constants$970.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle abcfB$VH() {
        return constants$970.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT abcfB;
     * }
     */
    public static float abcfB$get(MemorySegment seg) {
        return (float)constants$970.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT abcfB;
     * }
     */
    public static void abcfB$set(MemorySegment seg, float x) {
        constants$970.const$5.set(seg, x);
    }
    public static float abcfB$get(MemorySegment seg, long index) {
        return (float)constants$970.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void abcfB$set(MemorySegment seg, long index, float x) {
        constants$970.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle abcfC$VH() {
        return constants$971.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT abcfC;
     * }
     */
    public static float abcfC$get(MemorySegment seg) {
        return (float)constants$971.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT abcfC;
     * }
     */
    public static void abcfC$set(MemorySegment seg, float x) {
        constants$971.const$0.set(seg, x);
    }
    public static float abcfC$get(MemorySegment seg, long index) {
        return (float)constants$971.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void abcfC$set(MemorySegment seg, long index, float x) {
        constants$971.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


