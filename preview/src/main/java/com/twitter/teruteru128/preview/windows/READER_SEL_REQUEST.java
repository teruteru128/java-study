// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     DWORD dwShareMode;
 *     DWORD dwPreferredProtocols;
 *     READER_SEL_REQUEST_MATCH_TYPE MatchType;
 *     union {
 *         struct  ReaderAndContainerParameter;
 *         struct  SerialNumberParameter;
 *     };
 * };
 * }
 */
public class READER_SEL_REQUEST {

    public static MemoryLayout $LAYOUT() {
        return constants$2772.const$3;
    }
    public static VarHandle dwShareMode$VH() {
        return constants$2772.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwShareMode;
     * }
     */
    public static int dwShareMode$get(MemorySegment seg) {
        return (int)constants$2772.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwShareMode;
     * }
     */
    public static void dwShareMode$set(MemorySegment seg, int x) {
        constants$2772.const$4.set(seg, x);
    }
    public static int dwShareMode$get(MemorySegment seg, long index) {
        return (int)constants$2772.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwShareMode$set(MemorySegment seg, long index, int x) {
        constants$2772.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPreferredProtocols$VH() {
        return constants$2772.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPreferredProtocols;
     * }
     */
    public static int dwPreferredProtocols$get(MemorySegment seg) {
        return (int)constants$2772.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPreferredProtocols;
     * }
     */
    public static void dwPreferredProtocols$set(MemorySegment seg, int x) {
        constants$2772.const$5.set(seg, x);
    }
    public static int dwPreferredProtocols$get(MemorySegment seg, long index) {
        return (int)constants$2772.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPreferredProtocols$set(MemorySegment seg, long index, int x) {
        constants$2772.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle MatchType$VH() {
        return constants$2773.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * READER_SEL_REQUEST_MATCH_TYPE MatchType;
     * }
     */
    public static int MatchType$get(MemorySegment seg) {
        return (int)constants$2773.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * READER_SEL_REQUEST_MATCH_TYPE MatchType;
     * }
     */
    public static void MatchType$set(MemorySegment seg, int x) {
        constants$2773.const$0.set(seg, x);
    }
    public static int MatchType$get(MemorySegment seg, long index) {
        return (int)constants$2773.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void MatchType$set(MemorySegment seg, long index, int x) {
        constants$2773.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD cbReaderNameOffset;
     *     DWORD cchReaderNameLength;
     *     DWORD cbContainerNameOffset;
     *     DWORD cchContainerNameLength;
     *     DWORD dwDesiredCardModuleVersion;
     *     DWORD dwCspFlags;
     * };
     * }
     */
    public static final class ReaderAndContainerParameter {

        // Suppresses default constructor, ensuring non-instantiability.
        private ReaderAndContainerParameter() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2773.const$1;
        }
        public static VarHandle cbReaderNameOffset$VH() {
            return constants$2773.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cbReaderNameOffset;
         * }
         */
        public static int cbReaderNameOffset$get(MemorySegment seg) {
            return (int)constants$2773.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cbReaderNameOffset;
         * }
         */
        public static void cbReaderNameOffset$set(MemorySegment seg, int x) {
            constants$2773.const$2.set(seg, x);
        }
        public static int cbReaderNameOffset$get(MemorySegment seg, long index) {
            return (int)constants$2773.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void cbReaderNameOffset$set(MemorySegment seg, long index, int x) {
            constants$2773.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cchReaderNameLength$VH() {
            return constants$2773.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cchReaderNameLength;
         * }
         */
        public static int cchReaderNameLength$get(MemorySegment seg) {
            return (int)constants$2773.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cchReaderNameLength;
         * }
         */
        public static void cchReaderNameLength$set(MemorySegment seg, int x) {
            constants$2773.const$3.set(seg, x);
        }
        public static int cchReaderNameLength$get(MemorySegment seg, long index) {
            return (int)constants$2773.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void cchReaderNameLength$set(MemorySegment seg, long index, int x) {
            constants$2773.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbContainerNameOffset$VH() {
            return constants$2773.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cbContainerNameOffset;
         * }
         */
        public static int cbContainerNameOffset$get(MemorySegment seg) {
            return (int)constants$2773.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cbContainerNameOffset;
         * }
         */
        public static void cbContainerNameOffset$set(MemorySegment seg, int x) {
            constants$2773.const$4.set(seg, x);
        }
        public static int cbContainerNameOffset$get(MemorySegment seg, long index) {
            return (int)constants$2773.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void cbContainerNameOffset$set(MemorySegment seg, long index, int x) {
            constants$2773.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cchContainerNameLength$VH() {
            return constants$2773.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cchContainerNameLength;
         * }
         */
        public static int cchContainerNameLength$get(MemorySegment seg) {
            return (int)constants$2773.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cchContainerNameLength;
         * }
         */
        public static void cchContainerNameLength$set(MemorySegment seg, int x) {
            constants$2773.const$5.set(seg, x);
        }
        public static int cchContainerNameLength$get(MemorySegment seg, long index) {
            return (int)constants$2773.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void cchContainerNameLength$set(MemorySegment seg, long index, int x) {
            constants$2773.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDesiredCardModuleVersion$VH() {
            return constants$2774.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD dwDesiredCardModuleVersion;
         * }
         */
        public static int dwDesiredCardModuleVersion$get(MemorySegment seg) {
            return (int)constants$2774.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD dwDesiredCardModuleVersion;
         * }
         */
        public static void dwDesiredCardModuleVersion$set(MemorySegment seg, int x) {
            constants$2774.const$0.set(seg, x);
        }
        public static int dwDesiredCardModuleVersion$get(MemorySegment seg, long index) {
            return (int)constants$2774.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void dwDesiredCardModuleVersion$set(MemorySegment seg, long index, int x) {
            constants$2774.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwCspFlags$VH() {
            return constants$2774.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD dwCspFlags;
         * }
         */
        public static int dwCspFlags$get(MemorySegment seg) {
            return (int)constants$2774.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD dwCspFlags;
         * }
         */
        public static void dwCspFlags$set(MemorySegment seg, int x) {
            constants$2774.const$1.set(seg, x);
        }
        public static int dwCspFlags$get(MemorySegment seg, long index) {
            return (int)constants$2774.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void dwCspFlags$set(MemorySegment seg, long index, int x) {
            constants$2774.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment ReaderAndContainerParameter$slice(MemorySegment seg) {
        return seg.asSlice(12, 24);
    }
    /**
     * {@snippet :
     * struct {
     *     DWORD cbSerialNumberOffset;
     *     DWORD cbSerialNumberLength;
     *     DWORD dwDesiredCardModuleVersion;
     * };
     * }
     */
    public static final class SerialNumberParameter {

        // Suppresses default constructor, ensuring non-instantiability.
        private SerialNumberParameter() {}
        public static MemoryLayout $LAYOUT() {
            return constants$2774.const$2;
        }
        public static VarHandle cbSerialNumberOffset$VH() {
            return constants$2774.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cbSerialNumberOffset;
         * }
         */
        public static int cbSerialNumberOffset$get(MemorySegment seg) {
            return (int)constants$2774.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cbSerialNumberOffset;
         * }
         */
        public static void cbSerialNumberOffset$set(MemorySegment seg, int x) {
            constants$2774.const$3.set(seg, x);
        }
        public static int cbSerialNumberOffset$get(MemorySegment seg, long index) {
            return (int)constants$2774.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void cbSerialNumberOffset$set(MemorySegment seg, long index, int x) {
            constants$2774.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle cbSerialNumberLength$VH() {
            return constants$2774.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD cbSerialNumberLength;
         * }
         */
        public static int cbSerialNumberLength$get(MemorySegment seg) {
            return (int)constants$2774.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD cbSerialNumberLength;
         * }
         */
        public static void cbSerialNumberLength$set(MemorySegment seg, int x) {
            constants$2774.const$4.set(seg, x);
        }
        public static int cbSerialNumberLength$get(MemorySegment seg, long index) {
            return (int)constants$2774.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void cbSerialNumberLength$set(MemorySegment seg, long index, int x) {
            constants$2774.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle dwDesiredCardModuleVersion$VH() {
            return constants$2774.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * DWORD dwDesiredCardModuleVersion;
         * }
         */
        public static int dwDesiredCardModuleVersion$get(MemorySegment seg) {
            return (int)constants$2774.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * DWORD dwDesiredCardModuleVersion;
         * }
         */
        public static void dwDesiredCardModuleVersion$set(MemorySegment seg, int x) {
            constants$2774.const$5.set(seg, x);
        }
        public static int dwDesiredCardModuleVersion$get(MemorySegment seg, long index) {
            return (int)constants$2774.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void dwDesiredCardModuleVersion$set(MemorySegment seg, long index, int x) {
            constants$2774.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment SerialNumberParameter$slice(MemorySegment seg) {
        return seg.asSlice(12, 12);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


