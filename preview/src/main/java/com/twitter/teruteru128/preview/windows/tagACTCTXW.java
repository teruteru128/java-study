// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagACTCTXW {
 *     ULONG cbSize;
 *     DWORD dwFlags;
 *     LPCWSTR lpSource;
 *     USHORT wProcessorArchitecture;
 *     LANGID wLangId;
 *     LPCWSTR lpAssemblyDirectory;
 *     LPCWSTR lpResourceName;
 *     LPCWSTR lpApplicationName;
 *     HMODULE hModule;
 * };
 * }
 */
public class tagACTCTXW {

    public static MemoryLayout $LAYOUT() {
        return constants$851.const$1;
    }
    public static VarHandle cbSize$VH() {
        return constants$851.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)constants$851.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        constants$851.const$2.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)constants$851.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        constants$851.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwFlags$VH() {
        return constants$851.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static int dwFlags$get(MemorySegment seg) {
        return (int)constants$851.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwFlags;
     * }
     */
    public static void dwFlags$set(MemorySegment seg, int x) {
        constants$851.const$3.set(seg, x);
    }
    public static int dwFlags$get(MemorySegment seg, long index) {
        return (int)constants$851.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwFlags$set(MemorySegment seg, long index, int x) {
        constants$851.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpSource$VH() {
        return constants$851.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpSource;
     * }
     */
    public static MemorySegment lpSource$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$851.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpSource;
     * }
     */
    public static void lpSource$set(MemorySegment seg, MemorySegment x) {
        constants$851.const$4.set(seg, x);
    }
    public static MemorySegment lpSource$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$851.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void lpSource$set(MemorySegment seg, long index, MemorySegment x) {
        constants$851.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wProcessorArchitecture$VH() {
        return constants$851.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT wProcessorArchitecture;
     * }
     */
    public static short wProcessorArchitecture$get(MemorySegment seg) {
        return (short)constants$851.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT wProcessorArchitecture;
     * }
     */
    public static void wProcessorArchitecture$set(MemorySegment seg, short x) {
        constants$851.const$5.set(seg, x);
    }
    public static short wProcessorArchitecture$get(MemorySegment seg, long index) {
        return (short)constants$851.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void wProcessorArchitecture$set(MemorySegment seg, long index, short x) {
        constants$851.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wLangId$VH() {
        return constants$852.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LANGID wLangId;
     * }
     */
    public static short wLangId$get(MemorySegment seg) {
        return (short)constants$852.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LANGID wLangId;
     * }
     */
    public static void wLangId$set(MemorySegment seg, short x) {
        constants$852.const$0.set(seg, x);
    }
    public static short wLangId$get(MemorySegment seg, long index) {
        return (short)constants$852.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void wLangId$set(MemorySegment seg, long index, short x) {
        constants$852.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpAssemblyDirectory$VH() {
        return constants$852.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpAssemblyDirectory;
     * }
     */
    public static MemorySegment lpAssemblyDirectory$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$852.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpAssemblyDirectory;
     * }
     */
    public static void lpAssemblyDirectory$set(MemorySegment seg, MemorySegment x) {
        constants$852.const$1.set(seg, x);
    }
    public static MemorySegment lpAssemblyDirectory$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$852.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void lpAssemblyDirectory$set(MemorySegment seg, long index, MemorySegment x) {
        constants$852.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpResourceName$VH() {
        return constants$852.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpResourceName;
     * }
     */
    public static MemorySegment lpResourceName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$852.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpResourceName;
     * }
     */
    public static void lpResourceName$set(MemorySegment seg, MemorySegment x) {
        constants$852.const$2.set(seg, x);
    }
    public static MemorySegment lpResourceName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$852.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void lpResourceName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$852.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lpApplicationName$VH() {
        return constants$852.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR lpApplicationName;
     * }
     */
    public static MemorySegment lpApplicationName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$852.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR lpApplicationName;
     * }
     */
    public static void lpApplicationName$set(MemorySegment seg, MemorySegment x) {
        constants$852.const$3.set(seg, x);
    }
    public static MemorySegment lpApplicationName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$852.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void lpApplicationName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$852.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hModule$VH() {
        return constants$852.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HMODULE hModule;
     * }
     */
    public static MemorySegment hModule$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$852.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HMODULE hModule;
     * }
     */
    public static void hModule$set(MemorySegment seg, MemorySegment x) {
        constants$852.const$4.set(seg, x);
    }
    public static MemorySegment hModule$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$852.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void hModule$set(MemorySegment seg, long index, MemorySegment x) {
        constants$852.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


