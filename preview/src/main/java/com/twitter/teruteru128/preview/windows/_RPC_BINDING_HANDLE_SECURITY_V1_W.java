// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _RPC_BINDING_HANDLE_SECURITY_V1_W {
 *     unsigned long Version;
 *     unsigned short* ServerPrincName;
 *     unsigned long AuthnLevel;
 *     unsigned long AuthnSvc;
 *     SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
 *     RPC_SECURITY_QOS* SecurityQos;
 * };
 * }
 */
public class _RPC_BINDING_HANDLE_SECURITY_V1_W {

    public static MemoryLayout $LAYOUT() {
        return constants$1756.const$0;
    }
    public static VarHandle Version$VH() {
        return constants$1756.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long Version;
     * }
     */
    public static int Version$get(MemorySegment seg) {
        return (int)constants$1756.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long Version;
     * }
     */
    public static void Version$set(MemorySegment seg, int x) {
        constants$1756.const$1.set(seg, x);
    }
    public static int Version$get(MemorySegment seg, long index) {
        return (int)constants$1756.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, int x) {
        constants$1756.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ServerPrincName$VH() {
        return constants$1756.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short* ServerPrincName;
     * }
     */
    public static MemorySegment ServerPrincName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1756.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short* ServerPrincName;
     * }
     */
    public static void ServerPrincName$set(MemorySegment seg, MemorySegment x) {
        constants$1756.const$2.set(seg, x);
    }
    public static MemorySegment ServerPrincName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1756.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ServerPrincName$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1756.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AuthnLevel$VH() {
        return constants$1756.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long AuthnLevel;
     * }
     */
    public static int AuthnLevel$get(MemorySegment seg) {
        return (int)constants$1756.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long AuthnLevel;
     * }
     */
    public static void AuthnLevel$set(MemorySegment seg, int x) {
        constants$1756.const$3.set(seg, x);
    }
    public static int AuthnLevel$get(MemorySegment seg, long index) {
        return (int)constants$1756.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthnLevel$set(MemorySegment seg, long index, int x) {
        constants$1756.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AuthnSvc$VH() {
        return constants$1756.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long AuthnSvc;
     * }
     */
    public static int AuthnSvc$get(MemorySegment seg) {
        return (int)constants$1756.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long AuthnSvc;
     * }
     */
    public static void AuthnSvc$set(MemorySegment seg, int x) {
        constants$1756.const$4.set(seg, x);
    }
    public static int AuthnSvc$get(MemorySegment seg, long index) {
        return (int)constants$1756.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthnSvc$set(MemorySegment seg, long index, int x) {
        constants$1756.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle AuthIdentity$VH() {
        return constants$1756.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
     * }
     */
    public static MemorySegment AuthIdentity$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1756.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
     * }
     */
    public static void AuthIdentity$set(MemorySegment seg, MemorySegment x) {
        constants$1756.const$5.set(seg, x);
    }
    public static MemorySegment AuthIdentity$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1756.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void AuthIdentity$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1756.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle SecurityQos$VH() {
        return constants$1757.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * RPC_SECURITY_QOS* SecurityQos;
     * }
     */
    public static MemorySegment SecurityQos$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$1757.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * RPC_SECURITY_QOS* SecurityQos;
     * }
     */
    public static void SecurityQos$set(MemorySegment seg, MemorySegment x) {
        constants$1757.const$0.set(seg, x);
    }
    public static MemorySegment SecurityQos$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$1757.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void SecurityQos$set(MemorySegment seg, long index, MemorySegment x) {
        constants$1757.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


