// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _HEAP_SUMMARY {
 *     DWORD cb;
 *     SIZE_T cbAllocated;
 *     SIZE_T cbCommitted;
 *     SIZE_T cbReserved;
 *     SIZE_T cbMaxReserve;
 * };
 * }
 */
public class _HEAP_SUMMARY {

    public static MemoryLayout $LAYOUT() {
        return constants$611.const$0;
    }
    public static VarHandle cb$VH() {
        return constants$611.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cb;
     * }
     */
    public static int cb$get(MemorySegment seg) {
        return (int)constants$611.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cb;
     * }
     */
    public static void cb$set(MemorySegment seg, int x) {
        constants$611.const$1.set(seg, x);
    }
    public static int cb$get(MemorySegment seg, long index) {
        return (int)constants$611.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cb$set(MemorySegment seg, long index, int x) {
        constants$611.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbAllocated$VH() {
        return constants$611.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SIZE_T cbAllocated;
     * }
     */
    public static long cbAllocated$get(MemorySegment seg) {
        return (long)constants$611.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SIZE_T cbAllocated;
     * }
     */
    public static void cbAllocated$set(MemorySegment seg, long x) {
        constants$611.const$2.set(seg, x);
    }
    public static long cbAllocated$get(MemorySegment seg, long index) {
        return (long)constants$611.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbAllocated$set(MemorySegment seg, long index, long x) {
        constants$611.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbCommitted$VH() {
        return constants$611.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SIZE_T cbCommitted;
     * }
     */
    public static long cbCommitted$get(MemorySegment seg) {
        return (long)constants$611.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SIZE_T cbCommitted;
     * }
     */
    public static void cbCommitted$set(MemorySegment seg, long x) {
        constants$611.const$3.set(seg, x);
    }
    public static long cbCommitted$get(MemorySegment seg, long index) {
        return (long)constants$611.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cbCommitted$set(MemorySegment seg, long index, long x) {
        constants$611.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbReserved$VH() {
        return constants$611.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SIZE_T cbReserved;
     * }
     */
    public static long cbReserved$get(MemorySegment seg) {
        return (long)constants$611.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SIZE_T cbReserved;
     * }
     */
    public static void cbReserved$set(MemorySegment seg, long x) {
        constants$611.const$4.set(seg, x);
    }
    public static long cbReserved$get(MemorySegment seg, long index) {
        return (long)constants$611.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cbReserved$set(MemorySegment seg, long index, long x) {
        constants$611.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbMaxReserve$VH() {
        return constants$611.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SIZE_T cbMaxReserve;
     * }
     */
    public static long cbMaxReserve$get(MemorySegment seg) {
        return (long)constants$611.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SIZE_T cbMaxReserve;
     * }
     */
    public static void cbMaxReserve$set(MemorySegment seg, long x) {
        constants$611.const$5.set(seg, x);
    }
    public static long cbMaxReserve$get(MemorySegment seg, long index) {
        return (long)constants$611.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void cbMaxReserve$set(MemorySegment seg, long index, long x) {
        constants$611.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


