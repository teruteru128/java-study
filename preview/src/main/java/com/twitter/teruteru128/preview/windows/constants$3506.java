// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$3506 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$3506() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "ITypeInfo_LocalReleaseFuncDesc_Stub",
        constants$467.const$0
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "ITypeInfo_LocalReleaseVarDesc_Proxy",
        constants$18.const$5
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "ITypeInfo_LocalReleaseVarDesc_Stub",
        constants$467.const$0
    );
    static final MemorySegment const$3 = RuntimeHelper.lookupGlobalVariable("IID_ITypeInfo2", constants$27.const$0);
    static final StructLayout const$4 = MemoryLayout.structLayout(
        RuntimeHelper.POINTER.withName("QueryInterface"),
        RuntimeHelper.POINTER.withName("AddRef"),
        RuntimeHelper.POINTER.withName("Release"),
        RuntimeHelper.POINTER.withName("GetTypeAttr"),
        RuntimeHelper.POINTER.withName("GetTypeComp"),
        RuntimeHelper.POINTER.withName("GetFuncDesc"),
        RuntimeHelper.POINTER.withName("GetVarDesc"),
        RuntimeHelper.POINTER.withName("GetNames"),
        RuntimeHelper.POINTER.withName("GetRefTypeOfImplType"),
        RuntimeHelper.POINTER.withName("GetImplTypeFlags"),
        RuntimeHelper.POINTER.withName("GetIDsOfNames"),
        RuntimeHelper.POINTER.withName("Invoke"),
        RuntimeHelper.POINTER.withName("GetDocumentation"),
        RuntimeHelper.POINTER.withName("GetDllEntry"),
        RuntimeHelper.POINTER.withName("GetRefTypeInfo"),
        RuntimeHelper.POINTER.withName("AddressOfMember"),
        RuntimeHelper.POINTER.withName("CreateInstance"),
        RuntimeHelper.POINTER.withName("GetMops"),
        RuntimeHelper.POINTER.withName("GetContainingTypeLib"),
        RuntimeHelper.POINTER.withName("ReleaseTypeAttr"),
        RuntimeHelper.POINTER.withName("ReleaseFuncDesc"),
        RuntimeHelper.POINTER.withName("ReleaseVarDesc"),
        RuntimeHelper.POINTER.withName("GetTypeKind"),
        RuntimeHelper.POINTER.withName("GetTypeFlags"),
        RuntimeHelper.POINTER.withName("GetFuncIndexOfMemId"),
        RuntimeHelper.POINTER.withName("GetVarIndexOfMemId"),
        RuntimeHelper.POINTER.withName("GetCustData"),
        RuntimeHelper.POINTER.withName("GetFuncCustData"),
        RuntimeHelper.POINTER.withName("GetParamCustData"),
        RuntimeHelper.POINTER.withName("GetVarCustData"),
        RuntimeHelper.POINTER.withName("GetImplTypeCustData"),
        RuntimeHelper.POINTER.withName("GetDocumentation2"),
        RuntimeHelper.POINTER.withName("GetAllCustData"),
        RuntimeHelper.POINTER.withName("GetAllFuncCustData"),
        RuntimeHelper.POINTER.withName("GetAllParamCustData"),
        RuntimeHelper.POINTER.withName("GetAllVarCustData"),
        RuntimeHelper.POINTER.withName("GetAllImplTypeCustData")
    ).withName("ITypeInfo2Vtbl");
    static final MethodHandle const$5 = RuntimeHelper.upcallHandle(ITypeInfo2Vtbl.QueryInterface.class, "apply", constants$37.const$3);
}


