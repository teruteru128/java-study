// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _NETINFOSTRUCT {
 *     DWORD cbStructure;
 *     DWORD dwProviderVersion;
 *     DWORD dwStatus;
 *     DWORD dwCharacteristics;
 *     ULONG_PTR dwHandle;
 *     WORD wNetType;
 *     DWORD dwPrinters;
 *     DWORD dwDrives;
 * };
 * }
 */
public class _NETINFOSTRUCT {

    public static MemoryLayout $LAYOUT() {
        return constants$1518.const$1;
    }
    public static VarHandle cbStructure$VH() {
        return constants$1518.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbStructure;
     * }
     */
    public static int cbStructure$get(MemorySegment seg) {
        return (int)constants$1518.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbStructure;
     * }
     */
    public static void cbStructure$set(MemorySegment seg, int x) {
        constants$1518.const$2.set(seg, x);
    }
    public static int cbStructure$get(MemorySegment seg, long index) {
        return (int)constants$1518.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void cbStructure$set(MemorySegment seg, long index, int x) {
        constants$1518.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwProviderVersion$VH() {
        return constants$1518.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwProviderVersion;
     * }
     */
    public static int dwProviderVersion$get(MemorySegment seg) {
        return (int)constants$1518.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwProviderVersion;
     * }
     */
    public static void dwProviderVersion$set(MemorySegment seg, int x) {
        constants$1518.const$3.set(seg, x);
    }
    public static int dwProviderVersion$get(MemorySegment seg, long index) {
        return (int)constants$1518.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProviderVersion$set(MemorySegment seg, long index, int x) {
        constants$1518.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwStatus$VH() {
        return constants$1518.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwStatus;
     * }
     */
    public static int dwStatus$get(MemorySegment seg) {
        return (int)constants$1518.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwStatus;
     * }
     */
    public static void dwStatus$set(MemorySegment seg, int x) {
        constants$1518.const$4.set(seg, x);
    }
    public static int dwStatus$get(MemorySegment seg, long index) {
        return (int)constants$1518.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void dwStatus$set(MemorySegment seg, long index, int x) {
        constants$1518.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwCharacteristics$VH() {
        return constants$1518.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCharacteristics;
     * }
     */
    public static int dwCharacteristics$get(MemorySegment seg) {
        return (int)constants$1518.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCharacteristics;
     * }
     */
    public static void dwCharacteristics$set(MemorySegment seg, int x) {
        constants$1518.const$5.set(seg, x);
    }
    public static int dwCharacteristics$get(MemorySegment seg, long index) {
        return (int)constants$1518.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCharacteristics$set(MemorySegment seg, long index, int x) {
        constants$1518.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwHandle$VH() {
        return constants$1519.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR dwHandle;
     * }
     */
    public static long dwHandle$get(MemorySegment seg) {
        return (long)constants$1519.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR dwHandle;
     * }
     */
    public static void dwHandle$set(MemorySegment seg, long x) {
        constants$1519.const$0.set(seg, x);
    }
    public static long dwHandle$get(MemorySegment seg, long index) {
        return (long)constants$1519.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void dwHandle$set(MemorySegment seg, long index, long x) {
        constants$1519.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wNetType$VH() {
        return constants$1519.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wNetType;
     * }
     */
    public static short wNetType$get(MemorySegment seg) {
        return (short)constants$1519.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wNetType;
     * }
     */
    public static void wNetType$set(MemorySegment seg, short x) {
        constants$1519.const$1.set(seg, x);
    }
    public static short wNetType$get(MemorySegment seg, long index) {
        return (short)constants$1519.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void wNetType$set(MemorySegment seg, long index, short x) {
        constants$1519.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwPrinters$VH() {
        return constants$1519.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwPrinters;
     * }
     */
    public static int dwPrinters$get(MemorySegment seg) {
        return (int)constants$1519.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwPrinters;
     * }
     */
    public static void dwPrinters$set(MemorySegment seg, int x) {
        constants$1519.const$2.set(seg, x);
    }
    public static int dwPrinters$get(MemorySegment seg, long index) {
        return (int)constants$1519.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dwPrinters$set(MemorySegment seg, long index, int x) {
        constants$1519.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dwDrives$VH() {
        return constants$1519.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwDrives;
     * }
     */
    public static int dwDrives$get(MemorySegment seg) {
        return (int)constants$1519.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwDrives;
     * }
     */
    public static void dwDrives$set(MemorySegment seg, int x) {
        constants$1519.const$3.set(seg, x);
    }
    public static int dwDrives$get(MemorySegment seg, long index) {
        return (int)constants$1519.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void dwDrives$set(MemorySegment seg, long index, int x) {
        constants$1519.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


