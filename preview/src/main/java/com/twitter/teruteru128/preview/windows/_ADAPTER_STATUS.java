// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _ADAPTER_STATUS {
 *     UCHAR adapter_address[6];
 *     UCHAR rev_major;
 *     UCHAR reserved0;
 *     UCHAR adapter_type;
 *     UCHAR rev_minor;
 *     WORD duration;
 *     WORD frmr_recv;
 *     WORD frmr_xmit;
 *     WORD iframe_recv_err;
 *     WORD xmit_aborts;
 *     DWORD xmit_success;
 *     DWORD recv_success;
 *     WORD iframe_xmit_err;
 *     WORD recv_buff_unavail;
 *     WORD t1_timeouts;
 *     WORD ti_timeouts;
 *     DWORD reserved1;
 *     WORD free_ncbs;
 *     WORD max_cfg_ncbs;
 *     WORD max_ncbs;
 *     WORD xmit_buf_unavail;
 *     WORD max_dgram_size;
 *     WORD pending_sess;
 *     WORD max_cfg_sess;
 *     WORD max_sess;
 *     WORD max_sess_pkt_size;
 *     WORD name_count;
 * };
 * }
 */
public class _ADAPTER_STATUS {

    public static MemoryLayout $LAYOUT() {
        return constants$1702.const$5;
    }
    public static MemorySegment adapter_address$slice(MemorySegment seg) {
        return seg.asSlice(0, 6);
    }
    public static VarHandle rev_major$VH() {
        return constants$1703.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR rev_major;
     * }
     */
    public static byte rev_major$get(MemorySegment seg) {
        return (byte)constants$1703.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR rev_major;
     * }
     */
    public static void rev_major$set(MemorySegment seg, byte x) {
        constants$1703.const$0.set(seg, x);
    }
    public static byte rev_major$get(MemorySegment seg, long index) {
        return (byte)constants$1703.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void rev_major$set(MemorySegment seg, long index, byte x) {
        constants$1703.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved0$VH() {
        return constants$1703.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR reserved0;
     * }
     */
    public static byte reserved0$get(MemorySegment seg) {
        return (byte)constants$1703.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR reserved0;
     * }
     */
    public static void reserved0$set(MemorySegment seg, byte x) {
        constants$1703.const$1.set(seg, x);
    }
    public static byte reserved0$get(MemorySegment seg, long index) {
        return (byte)constants$1703.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved0$set(MemorySegment seg, long index, byte x) {
        constants$1703.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle adapter_type$VH() {
        return constants$1703.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR adapter_type;
     * }
     */
    public static byte adapter_type$get(MemorySegment seg) {
        return (byte)constants$1703.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR adapter_type;
     * }
     */
    public static void adapter_type$set(MemorySegment seg, byte x) {
        constants$1703.const$2.set(seg, x);
    }
    public static byte adapter_type$get(MemorySegment seg, long index) {
        return (byte)constants$1703.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void adapter_type$set(MemorySegment seg, long index, byte x) {
        constants$1703.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rev_minor$VH() {
        return constants$1703.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR rev_minor;
     * }
     */
    public static byte rev_minor$get(MemorySegment seg) {
        return (byte)constants$1703.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR rev_minor;
     * }
     */
    public static void rev_minor$set(MemorySegment seg, byte x) {
        constants$1703.const$3.set(seg, x);
    }
    public static byte rev_minor$get(MemorySegment seg, long index) {
        return (byte)constants$1703.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void rev_minor$set(MemorySegment seg, long index, byte x) {
        constants$1703.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle duration$VH() {
        return constants$1703.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD duration;
     * }
     */
    public static short duration$get(MemorySegment seg) {
        return (short)constants$1703.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD duration;
     * }
     */
    public static void duration$set(MemorySegment seg, short x) {
        constants$1703.const$4.set(seg, x);
    }
    public static short duration$get(MemorySegment seg, long index) {
        return (short)constants$1703.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void duration$set(MemorySegment seg, long index, short x) {
        constants$1703.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frmr_recv$VH() {
        return constants$1703.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD frmr_recv;
     * }
     */
    public static short frmr_recv$get(MemorySegment seg) {
        return (short)constants$1703.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD frmr_recv;
     * }
     */
    public static void frmr_recv$set(MemorySegment seg, short x) {
        constants$1703.const$5.set(seg, x);
    }
    public static short frmr_recv$get(MemorySegment seg, long index) {
        return (short)constants$1703.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void frmr_recv$set(MemorySegment seg, long index, short x) {
        constants$1703.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle frmr_xmit$VH() {
        return constants$1704.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD frmr_xmit;
     * }
     */
    public static short frmr_xmit$get(MemorySegment seg) {
        return (short)constants$1704.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD frmr_xmit;
     * }
     */
    public static void frmr_xmit$set(MemorySegment seg, short x) {
        constants$1704.const$0.set(seg, x);
    }
    public static short frmr_xmit$get(MemorySegment seg, long index) {
        return (short)constants$1704.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void frmr_xmit$set(MemorySegment seg, long index, short x) {
        constants$1704.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iframe_recv_err$VH() {
        return constants$1704.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD iframe_recv_err;
     * }
     */
    public static short iframe_recv_err$get(MemorySegment seg) {
        return (short)constants$1704.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD iframe_recv_err;
     * }
     */
    public static void iframe_recv_err$set(MemorySegment seg, short x) {
        constants$1704.const$1.set(seg, x);
    }
    public static short iframe_recv_err$get(MemorySegment seg, long index) {
        return (short)constants$1704.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void iframe_recv_err$set(MemorySegment seg, long index, short x) {
        constants$1704.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle xmit_aborts$VH() {
        return constants$1704.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD xmit_aborts;
     * }
     */
    public static short xmit_aborts$get(MemorySegment seg) {
        return (short)constants$1704.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD xmit_aborts;
     * }
     */
    public static void xmit_aborts$set(MemorySegment seg, short x) {
        constants$1704.const$2.set(seg, x);
    }
    public static short xmit_aborts$get(MemorySegment seg, long index) {
        return (short)constants$1704.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void xmit_aborts$set(MemorySegment seg, long index, short x) {
        constants$1704.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle xmit_success$VH() {
        return constants$1704.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD xmit_success;
     * }
     */
    public static int xmit_success$get(MemorySegment seg) {
        return (int)constants$1704.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD xmit_success;
     * }
     */
    public static void xmit_success$set(MemorySegment seg, int x) {
        constants$1704.const$3.set(seg, x);
    }
    public static int xmit_success$get(MemorySegment seg, long index) {
        return (int)constants$1704.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void xmit_success$set(MemorySegment seg, long index, int x) {
        constants$1704.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle recv_success$VH() {
        return constants$1704.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD recv_success;
     * }
     */
    public static int recv_success$get(MemorySegment seg) {
        return (int)constants$1704.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD recv_success;
     * }
     */
    public static void recv_success$set(MemorySegment seg, int x) {
        constants$1704.const$4.set(seg, x);
    }
    public static int recv_success$get(MemorySegment seg, long index) {
        return (int)constants$1704.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void recv_success$set(MemorySegment seg, long index, int x) {
        constants$1704.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iframe_xmit_err$VH() {
        return constants$1704.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD iframe_xmit_err;
     * }
     */
    public static short iframe_xmit_err$get(MemorySegment seg) {
        return (short)constants$1704.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD iframe_xmit_err;
     * }
     */
    public static void iframe_xmit_err$set(MemorySegment seg, short x) {
        constants$1704.const$5.set(seg, x);
    }
    public static short iframe_xmit_err$get(MemorySegment seg, long index) {
        return (short)constants$1704.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void iframe_xmit_err$set(MemorySegment seg, long index, short x) {
        constants$1704.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle recv_buff_unavail$VH() {
        return constants$1705.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD recv_buff_unavail;
     * }
     */
    public static short recv_buff_unavail$get(MemorySegment seg) {
        return (short)constants$1705.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD recv_buff_unavail;
     * }
     */
    public static void recv_buff_unavail$set(MemorySegment seg, short x) {
        constants$1705.const$0.set(seg, x);
    }
    public static short recv_buff_unavail$get(MemorySegment seg, long index) {
        return (short)constants$1705.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void recv_buff_unavail$set(MemorySegment seg, long index, short x) {
        constants$1705.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle t1_timeouts$VH() {
        return constants$1705.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD t1_timeouts;
     * }
     */
    public static short t1_timeouts$get(MemorySegment seg) {
        return (short)constants$1705.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD t1_timeouts;
     * }
     */
    public static void t1_timeouts$set(MemorySegment seg, short x) {
        constants$1705.const$1.set(seg, x);
    }
    public static short t1_timeouts$get(MemorySegment seg, long index) {
        return (short)constants$1705.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void t1_timeouts$set(MemorySegment seg, long index, short x) {
        constants$1705.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle ti_timeouts$VH() {
        return constants$1705.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD ti_timeouts;
     * }
     */
    public static short ti_timeouts$get(MemorySegment seg) {
        return (short)constants$1705.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD ti_timeouts;
     * }
     */
    public static void ti_timeouts$set(MemorySegment seg, short x) {
        constants$1705.const$2.set(seg, x);
    }
    public static short ti_timeouts$get(MemorySegment seg, long index) {
        return (short)constants$1705.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void ti_timeouts$set(MemorySegment seg, long index, short x) {
        constants$1705.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle reserved1$VH() {
        return constants$1705.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD reserved1;
     * }
     */
    public static int reserved1$get(MemorySegment seg) {
        return (int)constants$1705.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD reserved1;
     * }
     */
    public static void reserved1$set(MemorySegment seg, int x) {
        constants$1705.const$3.set(seg, x);
    }
    public static int reserved1$get(MemorySegment seg, long index) {
        return (int)constants$1705.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void reserved1$set(MemorySegment seg, long index, int x) {
        constants$1705.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle free_ncbs$VH() {
        return constants$1705.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD free_ncbs;
     * }
     */
    public static short free_ncbs$get(MemorySegment seg) {
        return (short)constants$1705.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD free_ncbs;
     * }
     */
    public static void free_ncbs$set(MemorySegment seg, short x) {
        constants$1705.const$4.set(seg, x);
    }
    public static short free_ncbs$get(MemorySegment seg, long index) {
        return (short)constants$1705.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void free_ncbs$set(MemorySegment seg, long index, short x) {
        constants$1705.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_cfg_ncbs$VH() {
        return constants$1705.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_cfg_ncbs;
     * }
     */
    public static short max_cfg_ncbs$get(MemorySegment seg) {
        return (short)constants$1705.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_cfg_ncbs;
     * }
     */
    public static void max_cfg_ncbs$set(MemorySegment seg, short x) {
        constants$1705.const$5.set(seg, x);
    }
    public static short max_cfg_ncbs$get(MemorySegment seg, long index) {
        return (short)constants$1705.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void max_cfg_ncbs$set(MemorySegment seg, long index, short x) {
        constants$1705.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_ncbs$VH() {
        return constants$1706.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_ncbs;
     * }
     */
    public static short max_ncbs$get(MemorySegment seg) {
        return (short)constants$1706.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_ncbs;
     * }
     */
    public static void max_ncbs$set(MemorySegment seg, short x) {
        constants$1706.const$0.set(seg, x);
    }
    public static short max_ncbs$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void max_ncbs$set(MemorySegment seg, long index, short x) {
        constants$1706.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle xmit_buf_unavail$VH() {
        return constants$1706.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD xmit_buf_unavail;
     * }
     */
    public static short xmit_buf_unavail$get(MemorySegment seg) {
        return (short)constants$1706.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD xmit_buf_unavail;
     * }
     */
    public static void xmit_buf_unavail$set(MemorySegment seg, short x) {
        constants$1706.const$1.set(seg, x);
    }
    public static short xmit_buf_unavail$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void xmit_buf_unavail$set(MemorySegment seg, long index, short x) {
        constants$1706.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_dgram_size$VH() {
        return constants$1706.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_dgram_size;
     * }
     */
    public static short max_dgram_size$get(MemorySegment seg) {
        return (short)constants$1706.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_dgram_size;
     * }
     */
    public static void max_dgram_size$set(MemorySegment seg, short x) {
        constants$1706.const$2.set(seg, x);
    }
    public static short max_dgram_size$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void max_dgram_size$set(MemorySegment seg, long index, short x) {
        constants$1706.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle pending_sess$VH() {
        return constants$1706.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD pending_sess;
     * }
     */
    public static short pending_sess$get(MemorySegment seg) {
        return (short)constants$1706.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD pending_sess;
     * }
     */
    public static void pending_sess$set(MemorySegment seg, short x) {
        constants$1706.const$3.set(seg, x);
    }
    public static short pending_sess$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void pending_sess$set(MemorySegment seg, long index, short x) {
        constants$1706.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_cfg_sess$VH() {
        return constants$1706.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_cfg_sess;
     * }
     */
    public static short max_cfg_sess$get(MemorySegment seg) {
        return (short)constants$1706.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_cfg_sess;
     * }
     */
    public static void max_cfg_sess$set(MemorySegment seg, short x) {
        constants$1706.const$4.set(seg, x);
    }
    public static short max_cfg_sess$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void max_cfg_sess$set(MemorySegment seg, long index, short x) {
        constants$1706.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_sess$VH() {
        return constants$1706.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_sess;
     * }
     */
    public static short max_sess$get(MemorySegment seg) {
        return (short)constants$1706.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_sess;
     * }
     */
    public static void max_sess$set(MemorySegment seg, short x) {
        constants$1706.const$5.set(seg, x);
    }
    public static short max_sess$get(MemorySegment seg, long index) {
        return (short)constants$1706.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void max_sess$set(MemorySegment seg, long index, short x) {
        constants$1706.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle max_sess_pkt_size$VH() {
        return constants$1707.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD max_sess_pkt_size;
     * }
     */
    public static short max_sess_pkt_size$get(MemorySegment seg) {
        return (short)constants$1707.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD max_sess_pkt_size;
     * }
     */
    public static void max_sess_pkt_size$set(MemorySegment seg, short x) {
        constants$1707.const$0.set(seg, x);
    }
    public static short max_sess_pkt_size$get(MemorySegment seg, long index) {
        return (short)constants$1707.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void max_sess_pkt_size$set(MemorySegment seg, long index, short x) {
        constants$1707.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle name_count$VH() {
        return constants$1707.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD name_count;
     * }
     */
    public static short name_count$get(MemorySegment seg) {
        return (short)constants$1707.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD name_count;
     * }
     */
    public static void name_count$set(MemorySegment seg, short x) {
        constants$1707.const$1.set(seg, x);
    }
    public static short name_count$get(MemorySegment seg, long index) {
        return (short)constants$1707.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void name_count$set(MemorySegment seg, long index, short x) {
        constants$1707.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


