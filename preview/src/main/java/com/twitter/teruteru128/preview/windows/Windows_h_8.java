// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class Windows_h_8 extends Windows_h_7 {

    /**
     * {@snippet :
     * #define WAVE_FORMAT_96M08 65536
     * }
     */
    public static int WAVE_FORMAT_96M08() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define WAVE_FORMAT_96S08 131072
     * }
     */
    public static int WAVE_FORMAT_96S08() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define WAVE_FORMAT_96M16 262144
     * }
     */
    public static int WAVE_FORMAT_96M16() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define WAVE_FORMAT_96S16 524288
     * }
     */
    public static int WAVE_FORMAT_96S16() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * #define WAVE_FORMAT_PCM 1
     * }
     */
    public static int WAVE_FORMAT_PCM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MIDIPATCHSIZE 128
     * }
     */
    public static int MIDIPATCHSIZE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define MIDI_CACHE_ALL 1
     * }
     */
    public static int MIDI_CACHE_ALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MIDI_CACHE_BESTFIT 2
     * }
     */
    public static int MIDI_CACHE_BESTFIT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MIDI_CACHE_QUERY 3
     * }
     */
    public static int MIDI_CACHE_QUERY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define MIDI_UNCACHE 4
     * }
     */
    public static int MIDI_UNCACHE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MOD_MIDIPORT 1
     * }
     */
    public static int MOD_MIDIPORT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MOD_SYNTH 2
     * }
     */
    public static int MOD_SYNTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MOD_SQSYNTH 3
     * }
     */
    public static int MOD_SQSYNTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define MOD_FMSYNTH 4
     * }
     */
    public static int MOD_FMSYNTH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MOD_MAPPER 5
     * }
     */
    public static int MOD_MAPPER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define MOD_WAVETABLE 6
     * }
     */
    public static int MOD_WAVETABLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define MOD_SWSYNTH 7
     * }
     */
    public static int MOD_SWSYNTH() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define MIDICAPS_VOLUME 1
     * }
     */
    public static int MIDICAPS_VOLUME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MIDICAPS_LRVOLUME 2
     * }
     */
    public static int MIDICAPS_LRVOLUME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MIDICAPS_CACHE 4
     * }
     */
    public static int MIDICAPS_CACHE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MIDICAPS_STREAM 8
     * }
     */
    public static int MIDICAPS_STREAM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define MHDR_DONE 1
     * }
     */
    public static int MHDR_DONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MHDR_PREPARED 2
     * }
     */
    public static int MHDR_PREPARED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MHDR_INQUEUE 4
     * }
     */
    public static int MHDR_INQUEUE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MHDR_ISSTRM 8
     * }
     */
    public static int MHDR_ISSTRM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AUXCAPS_CDAUDIO 1
     * }
     */
    public static int AUXCAPS_CDAUDIO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AUXCAPS_AUXIN 2
     * }
     */
    public static int AUXCAPS_AUXIN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AUXCAPS_VOLUME 1
     * }
     */
    public static int AUXCAPS_VOLUME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AUXCAPS_LRVOLUME 2
     * }
     */
    public static int AUXCAPS_LRVOLUME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MIXER_SHORT_NAME_CHARS 16
     * }
     */
    public static int MIXER_SHORT_NAME_CHARS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define MIXER_LONG_NAME_CHARS 64
     * }
     */
    public static int MIXER_LONG_NAME_CHARS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_UNDEFINED 0
     * }
     */
    public static int MIXERLINE_TARGETTYPE_UNDEFINED() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_WAVEOUT 1
     * }
     */
    public static int MIXERLINE_TARGETTYPE_WAVEOUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_WAVEIN 2
     * }
     */
    public static int MIXERLINE_TARGETTYPE_WAVEIN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_MIDIOUT 3
     * }
     */
    public static int MIXERLINE_TARGETTYPE_MIDIOUT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_MIDIIN 4
     * }
     */
    public static int MIXERLINE_TARGETTYPE_MIDIIN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MIXERLINE_TARGETTYPE_AUX 5
     * }
     */
    public static int MIXERLINE_TARGETTYPE_AUX() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON1 1
     * }
     */
    public static int JOY_BUTTON1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON2 2
     * }
     */
    public static int JOY_BUTTON2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON3 4
     * }
     */
    public static int JOY_BUTTON3() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON4 8
     * }
     */
    public static int JOY_BUTTON4() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON1CHG 256
     * }
     */
    public static int JOY_BUTTON1CHG() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON2CHG 512
     * }
     */
    public static int JOY_BUTTON2CHG() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON3CHG 1024
     * }
     */
    public static int JOY_BUTTON3CHG() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define JOY_BUTTON4CHG 2048
     * }
     */
    public static int JOY_BUTTON4CHG() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define JOY_POVFORWARD 0
     * }
     */
    public static int JOY_POVFORWARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define JOY_POVRIGHT 9000
     * }
     */
    public static int JOY_POVRIGHT() {
        return (int)9000L;
    }
    /**
     * {@snippet :
     * #define JOY_POVBACKWARD 18000
     * }
     */
    public static int JOY_POVBACKWARD() {
        return (int)18000L;
    }
    /**
     * {@snippet :
     * #define JOY_POVLEFT 27000
     * }
     */
    public static int JOY_POVLEFT() {
        return (int)27000L;
    }
    /**
     * {@snippet :
     * #define JOYSTICKID1 0
     * }
     */
    public static int JOYSTICKID1() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define JOYSTICKID2 1
     * }
     */
    public static int JOYSTICKID2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_HASZ 1
     * }
     */
    public static int JOYCAPS_HASZ() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_HASR 2
     * }
     */
    public static int JOYCAPS_HASR() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_HASU 4
     * }
     */
    public static int JOYCAPS_HASU() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_HASV 8
     * }
     */
    public static int JOYCAPS_HASV() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_HASPOV 16
     * }
     */
    public static int JOYCAPS_HASPOV() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_POV4DIR 32
     * }
     */
    public static int JOYCAPS_POV4DIR() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define JOYCAPS_POVCTS 64
     * }
     */
    public static int JOYCAPS_POVCTS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define NEWTRANSPARENT 3
     * }
     */
    public static int NEWTRANSPARENT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define QUERYROPSUPPORT 40
     * }
     */
    public static int QUERYROPSUPPORT() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define SELECTDIB 41
     * }
     */
    public static int SELECTDIB() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * #define NCBNAMSZ 16
     * }
     */
    public static int NCBNAMSZ() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define MAX_LANA 254
     * }
     */
    public static int MAX_LANA() {
        return (int)254L;
    }
    /**
     * {@snippet :
     * #define NAME_FLAGS_MASK 135
     * }
     */
    public static int NAME_FLAGS_MASK() {
        return (int)135L;
    }
    /**
     * {@snippet :
     * #define GROUP_NAME 128
     * }
     */
    public static int GROUP_NAME() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define UNIQUE_NAME 0
     * }
     */
    public static int UNIQUE_NAME() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define REGISTERING 0
     * }
     */
    public static int REGISTERING() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define REGISTERED 4
     * }
     */
    public static int REGISTERED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define DEREGISTERED 5
     * }
     */
    public static int DEREGISTERED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define DUPLICATE 6
     * }
     */
    public static int DUPLICATE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define DUPLICATE_DEREG 7
     * }
     */
    public static int DUPLICATE_DEREG() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define LISTEN_OUTSTANDING 1
     * }
     */
    public static int LISTEN_OUTSTANDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CALL_PENDING 2
     * }
     */
    public static int CALL_PENDING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SESSION_ESTABLISHED 3
     * }
     */
    public static int SESSION_ESTABLISHED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define HANGUP_PENDING 4
     * }
     */
    public static int HANGUP_PENDING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define HANGUP_COMPLETE 5
     * }
     */
    public static int HANGUP_COMPLETE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SESSION_ABORTED 6
     * }
     */
    public static int SESSION_ABORTED() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define NCBCALL 16
     * }
     */
    public static int NCBCALL() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define NCBLISTEN 17
     * }
     */
    public static int NCBLISTEN() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define NCBHANGUP 18
     * }
     */
    public static int NCBHANGUP() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define NCBSEND 20
     * }
     */
    public static int NCBSEND() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define NCBRECV 21
     * }
     */
    public static int NCBRECV() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define NCBRECVANY 22
     * }
     */
    public static int NCBRECVANY() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define NCBCHAINSEND 23
     * }
     */
    public static int NCBCHAINSEND() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define NCBDGSEND 32
     * }
     */
    public static int NCBDGSEND() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define NCBDGRECV 33
     * }
     */
    public static int NCBDGRECV() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define NCBDGSENDBC 34
     * }
     */
    public static int NCBDGSENDBC() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * #define NCBDGRECVBC 35
     * }
     */
    public static int NCBDGRECVBC() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define NCBADDNAME 48
     * }
     */
    public static int NCBADDNAME() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define NCBDELNAME 49
     * }
     */
    public static int NCBDELNAME() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * #define NCBRESET 50
     * }
     */
    public static int NCBRESET() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * #define NCBASTAT 51
     * }
     */
    public static int NCBASTAT() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * #define NCBSSTAT 52
     * }
     */
    public static int NCBSSTAT() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * #define NCBCANCEL 53
     * }
     */
    public static int NCBCANCEL() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * #define NCBADDGRNAME 54
     * }
     */
    public static int NCBADDGRNAME() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * #define NCBENUM 55
     * }
     */
    public static int NCBENUM() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * #define NCBUNLINK 112
     * }
     */
    public static int NCBUNLINK() {
        return (int)112L;
    }
    /**
     * {@snippet :
     * #define NCBSENDNA 113
     * }
     */
    public static int NCBSENDNA() {
        return (int)113L;
    }
    /**
     * {@snippet :
     * #define NCBCHAINSENDNA 114
     * }
     */
    public static int NCBCHAINSENDNA() {
        return (int)114L;
    }
    /**
     * {@snippet :
     * #define NCBLANSTALERT 115
     * }
     */
    public static int NCBLANSTALERT() {
        return (int)115L;
    }
    /**
     * {@snippet :
     * #define NCBACTION 119
     * }
     */
    public static int NCBACTION() {
        return (int)119L;
    }
    /**
     * {@snippet :
     * #define NCBFINDNAME 120
     * }
     */
    public static int NCBFINDNAME() {
        return (int)120L;
    }
    /**
     * {@snippet :
     * #define NCBTRACE 121
     * }
     */
    public static int NCBTRACE() {
        return (int)121L;
    }
    /**
     * {@snippet :
     * #define ASYNCH 128
     * }
     */
    public static int ASYNCH() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define NRC_GOODRET 0
     * }
     */
    public static int NRC_GOODRET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define NRC_BUFLEN 1
     * }
     */
    public static int NRC_BUFLEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NRC_ILLCMD 3
     * }
     */
    public static int NRC_ILLCMD() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define NRC_CMDTMO 5
     * }
     */
    public static int NRC_CMDTMO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define NRC_INCOMP 6
     * }
     */
    public static int NRC_INCOMP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define NRC_BADDR 7
     * }
     */
    public static int NRC_BADDR() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define NRC_SNUMOUT 8
     * }
     */
    public static int NRC_SNUMOUT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define NRC_NORES 9
     * }
     */
    public static int NRC_NORES() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define NRC_SCLOSED 10
     * }
     */
    public static int NRC_SCLOSED() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define NRC_CMDCAN 11
     * }
     */
    public static int NRC_CMDCAN() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define NRC_DUPNAME 13
     * }
     */
    public static int NRC_DUPNAME() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define NRC_NAMTFUL 14
     * }
     */
    public static int NRC_NAMTFUL() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define NRC_ACTSES 15
     * }
     */
    public static int NRC_ACTSES() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define NRC_LOCTFUL 17
     * }
     */
    public static int NRC_LOCTFUL() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define NRC_REMTFUL 18
     * }
     */
    public static int NRC_REMTFUL() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define NRC_ILLNN 19
     * }
     */
    public static int NRC_ILLNN() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define NRC_NOCALL 20
     * }
     */
    public static int NRC_NOCALL() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define NRC_NOWILD 21
     * }
     */
    public static int NRC_NOWILD() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define NRC_INUSE 22
     * }
     */
    public static int NRC_INUSE() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define NRC_NAMERR 23
     * }
     */
    public static int NRC_NAMERR() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define NRC_SABORT 24
     * }
     */
    public static int NRC_SABORT() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define NRC_NAMCONF 25
     * }
     */
    public static int NRC_NAMCONF() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define NRC_IFBUSY 33
     * }
     */
    public static int NRC_IFBUSY() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define NRC_TOOMANY 34
     * }
     */
    public static int NRC_TOOMANY() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * #define NRC_BRIDGE 35
     * }
     */
    public static int NRC_BRIDGE() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define NRC_CANOCCR 36
     * }
     */
    public static int NRC_CANOCCR() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * #define NRC_CANCEL 38
     * }
     */
    public static int NRC_CANCEL() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define NRC_DUPENV 48
     * }
     */
    public static int NRC_DUPENV() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define NRC_ENVNOTDEF 52
     * }
     */
    public static int NRC_ENVNOTDEF() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * #define NRC_OSRESNOTAV 53
     * }
     */
    public static int NRC_OSRESNOTAV() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * #define NRC_MAXAPPS 54
     * }
     */
    public static int NRC_MAXAPPS() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * #define NRC_NOSAPS 55
     * }
     */
    public static int NRC_NOSAPS() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * #define NRC_NORESOURCES 56
     * }
     */
    public static int NRC_NORESOURCES() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * #define NRC_INVADDRESS 57
     * }
     */
    public static int NRC_INVADDRESS() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * #define NRC_INVDDID 59
     * }
     */
    public static int NRC_INVDDID() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * #define NRC_LOCKFAIL 60
     * }
     */
    public static int NRC_LOCKFAIL() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * #define NRC_OPENERR 63
     * }
     */
    public static int NRC_OPENERR() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * #define NRC_SYSTEM 64
     * }
     */
    public static int NRC_SYSTEM() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define NRC_PENDING 255
     * }
     */
    public static int NRC_PENDING() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define RPC_C_BINDING_INFINITE_TIMEOUT 10
     * }
     */
    public static int RPC_C_BINDING_INFINITE_TIMEOUT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define RPC_C_BINDING_MIN_TIMEOUT 0
     * }
     */
    public static int RPC_C_BINDING_MIN_TIMEOUT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_BINDING_DEFAULT_TIMEOUT 5
     * }
     */
    public static int RPC_C_BINDING_DEFAULT_TIMEOUT() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define RPC_C_BINDING_MAX_TIMEOUT 9
     * }
     */
    public static int RPC_C_BINDING_MAX_TIMEOUT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define RPC_C_LISTEN_MAX_CALLS_DEFAULT 1234
     * }
     */
    public static int RPC_C_LISTEN_MAX_CALLS_DEFAULT() {
        return (int)1234L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROTSEQ_MAX_REQS_DEFAULT 10
     * }
     */
    public static int RPC_C_PROTSEQ_MAX_REQS_DEFAULT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define RPC_C_BIND_TO_ALL_NICS 1
     * }
     */
    public static int RPC_C_BIND_TO_ALL_NICS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_USE_INTERNET_PORT 1
     * }
     */
    public static int RPC_C_USE_INTERNET_PORT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_USE_INTRANET_PORT 2
     * }
     */
    public static int RPC_C_USE_INTRANET_PORT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_DONT_FAIL 4
     * }
     */
    public static int RPC_C_DONT_FAIL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_RPCHTTP_USE_LOAD_BALANCE 8
     * }
     */
    public static int RPC_C_RPCHTTP_USE_LOAD_BALANCE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_C_TRY_ENFORCE_MAX_CALLS 16
     * }
     */
    public static int RPC_C_TRY_ENFORCE_MAX_CALLS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_BINDING_NONCAUSAL 9
     * }
     */
    public static int RPC_C_OPT_BINDING_NONCAUSAL() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_SECURITY_CALLBACK 10
     * }
     */
    public static int RPC_C_OPT_SECURITY_CALLBACK() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_UNIQUE_BINDING 11
     * }
     */
    public static int RPC_C_OPT_UNIQUE_BINDING() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_TRANS_SEND_BUFFER_SIZE 5
     * }
     */
    public static int RPC_C_OPT_TRANS_SEND_BUFFER_SIZE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_CALL_TIMEOUT 12
     * }
     */
    public static int RPC_C_OPT_CALL_TIMEOUT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_DONT_LINGER 13
     * }
     */
    public static int RPC_C_OPT_DONT_LINGER() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_TRUST_PEER 14
     * }
     */
    public static int RPC_C_OPT_TRUST_PEER() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_ASYNC_BLOCK 15
     * }
     */
    public static int RPC_C_OPT_ASYNC_BLOCK() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_OPTIMIZE_TIME 16
     * }
     */
    public static int RPC_C_OPT_OPTIMIZE_TIME() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_MAX_OPTIONS 17
     * }
     */
    public static int RPC_C_OPT_MAX_OPTIONS() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define RPC_C_FULL_CERT_CHAIN 1
     * }
     */
    public static int RPC_C_FULL_CERT_CHAIN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_STATS_CALLS_IN 0
     * }
     */
    public static int RPC_C_STATS_CALLS_IN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_STATS_CALLS_OUT 1
     * }
     */
    public static int RPC_C_STATS_CALLS_OUT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_STATS_PKTS_IN 2
     * }
     */
    public static int RPC_C_STATS_PKTS_IN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_STATS_PKTS_OUT 3
     * }
     */
    public static int RPC_C_STATS_PKTS_OUT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_DEFAULT 0
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_NONE 1
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_CONNECT 2
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_CONNECT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_CALL 3
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_CALL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_PKT 4
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_PKT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_PKT_INTEGRITY 5
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_PKT_INTEGRITY() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LEVEL_PKT_PRIVACY 6
     * }
     */
    public static int RPC_C_AUTHN_LEVEL_PKT_PRIVACY() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define RPC_C_IMP_LEVEL_DEFAULT 0
     * }
     */
    public static int RPC_C_IMP_LEVEL_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_IMP_LEVEL_ANONYMOUS 1
     * }
     */
    public static int RPC_C_IMP_LEVEL_ANONYMOUS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_IMP_LEVEL_IDENTIFY 2
     * }
     */
    public static int RPC_C_IMP_LEVEL_IDENTIFY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_IMP_LEVEL_IMPERSONATE 3
     * }
     */
    public static int RPC_C_IMP_LEVEL_IMPERSONATE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_IMP_LEVEL_DELEGATE 4
     * }
     */
    public static int RPC_C_IMP_LEVEL_DELEGATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_IDENTITY_STATIC 0
     * }
     */
    public static int RPC_C_QOS_IDENTITY_STATIC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_IDENTITY_DYNAMIC 1
     * }
     */
    public static int RPC_C_QOS_IDENTITY_DYNAMIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_DEFAULT 0
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH 1
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC 2
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY 4
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE 8
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_IGNORE_DELEGATE_FAILURE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT 16
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_LOCAL_MA_HINT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_QOS_CAPABILITIES_SCHANNEL_FULL_AUTH_IDENTITY 32
     * }
     */
    public static int RPC_C_QOS_CAPABILITIES_SCHANNEL_FULL_AUTH_IDENTITY() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_NONE 0
     * }
     */
    public static int RPC_C_AUTHN_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_DCE_PRIVATE 1
     * }
     */
    public static int RPC_C_AUTHN_DCE_PRIVATE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_DCE_PUBLIC 2
     * }
     */
    public static int RPC_C_AUTHN_DCE_PUBLIC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_DEC_PUBLIC 4
     * }
     */
    public static int RPC_C_AUTHN_DEC_PUBLIC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_GSS_NEGOTIATE 9
     * }
     */
    public static int RPC_C_AUTHN_GSS_NEGOTIATE() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_WINNT 10
     * }
     */
    public static int RPC_C_AUTHN_WINNT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_GSS_SCHANNEL 14
     * }
     */
    public static int RPC_C_AUTHN_GSS_SCHANNEL() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_GSS_KERBEROS 16
     * }
     */
    public static int RPC_C_AUTHN_GSS_KERBEROS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_DPA 17
     * }
     */
    public static int RPC_C_AUTHN_DPA() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_MSN 18
     * }
     */
    public static int RPC_C_AUTHN_MSN() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_DIGEST 21
     * }
     */
    public static int RPC_C_AUTHN_DIGEST() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_KERNEL 20
     * }
     */
    public static int RPC_C_AUTHN_KERNEL() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_NEGO_EXTENDER 30
     * }
     */
    public static int RPC_C_AUTHN_NEGO_EXTENDER() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_PKU2U 31
     * }
     */
    public static int RPC_C_AUTHN_PKU2U() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LIVE_SSP 32
     * }
     */
    public static int RPC_C_AUTHN_LIVE_SSP() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_LIVEXP_SSP 35
     * }
     */
    public static int RPC_C_AUTHN_LIVEXP_SSP() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_CLOUD_AP 36
     * }
     */
    public static int RPC_C_AUTHN_CLOUD_AP() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_MSONLINE 82
     * }
     */
    public static int RPC_C_AUTHN_MSONLINE() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_MQ 100
     * }
     */
    public static int RPC_C_AUTHN_MQ() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define SEC_WINNT_AUTH_IDENTITY_ANSI 1
     * }
     */
    public static int SEC_WINNT_AUTH_IDENTITY_ANSI() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SEC_WINNT_AUTH_IDENTITY_UNICODE 2
     * }
     */
    public static int SEC_WINNT_AUTH_IDENTITY_UNICODE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHN_INFO_TYPE_HTTP 1
     * }
     */
    public static int RPC_C_AUTHN_INFO_TYPE_HTTP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_TARGET_SERVER 1
     * }
     */
    public static int RPC_C_HTTP_AUTHN_TARGET_SERVER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_TARGET_PROXY 2
     * }
     */
    public static int RPC_C_HTTP_AUTHN_TARGET_PROXY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_BASIC 1
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_BASIC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_NTLM 2
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_NTLM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_PASSPORT 4
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_PASSPORT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_DIGEST 8
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_DIGEST() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE 16
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_NEGOTIATE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_AUTHN_SCHEME_CERT 65536
     * }
     */
    public static int RPC_C_HTTP_AUTHN_SCHEME_CERT() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_FLAG_USE_SSL 1
     * }
     */
    public static int RPC_C_HTTP_FLAG_USE_SSL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME 2
     * }
     */
    public static int RPC_C_HTTP_FLAG_USE_FIRST_AUTH_SCHEME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID 8
     * }
     */
    public static int RPC_C_HTTP_FLAG_IGNORE_CERT_CN_INVALID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_C_HTTP_FLAG_ENABLE_CERT_REVOCATION_CHECK 16
     * }
     */
    public static int RPC_C_HTTP_FLAG_ENABLE_CERT_REVOCATION_CHECK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHZ_NONE 0
     * }
     */
    public static int RPC_C_AUTHZ_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHZ_NAME 1
     * }
     */
    public static int RPC_C_AUTHZ_NAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_AUTHZ_DCE 2
     * }
     */
    public static int RPC_C_AUTHZ_DCE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define DCE_C_ERROR_STRING_LEN 256
     * }
     */
    public static int DCE_C_ERROR_STRING_LEN() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define RPC_C_EP_ALL_ELTS 0
     * }
     */
    public static int RPC_C_EP_ALL_ELTS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_EP_MATCH_BY_IF 1
     * }
     */
    public static int RPC_C_EP_MATCH_BY_IF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_EP_MATCH_BY_OBJ 2
     * }
     */
    public static int RPC_C_EP_MATCH_BY_OBJ() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_EP_MATCH_BY_BOTH 3
     * }
     */
    public static int RPC_C_EP_MATCH_BY_BOTH() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_VERS_ALL 1
     * }
     */
    public static int RPC_C_VERS_ALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_VERS_COMPATIBLE 2
     * }
     */
    public static int RPC_C_VERS_COMPATIBLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_VERS_EXACT 3
     * }
     */
    public static int RPC_C_VERS_EXACT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_VERS_MAJOR_ONLY 4
     * }
     */
    public static int RPC_C_VERS_MAJOR_ONLY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_VERS_UPTO 5
     * }
     */
    public static int RPC_C_VERS_UPTO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define RPC_C_MGMT_INQ_IF_IDS 0
     * }
     */
    public static int RPC_C_MGMT_INQ_IF_IDS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_MGMT_INQ_PRINC_NAME 1
     * }
     */
    public static int RPC_C_MGMT_INQ_PRINC_NAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_MGMT_INQ_STATS 2
     * }
     */
    public static int RPC_C_MGMT_INQ_STATS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_MGMT_IS_SERVER_LISTEN 3
     * }
     */
    public static int RPC_C_MGMT_IS_SERVER_LISTEN() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_MGMT_STOP_SERVER_LISTEN 4
     * }
     */
    public static int RPC_C_MGMT_STOP_SERVER_LISTEN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PARM_MAX_PACKET_LENGTH 1
     * }
     */
    public static int RPC_C_PARM_MAX_PACKET_LENGTH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PARM_BUFFER_LENGTH 2
     * }
     */
    public static int RPC_C_PARM_BUFFER_LENGTH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_AUTOLISTEN 1
     * }
     */
    public static int RPC_IF_AUTOLISTEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_OLE 2
     * }
     */
    public static int RPC_IF_OLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_ALLOW_UNKNOWN_AUTHORITY 4
     * }
     */
    public static int RPC_IF_ALLOW_UNKNOWN_AUTHORITY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_ALLOW_SECURE_ONLY 8
     * }
     */
    public static int RPC_IF_ALLOW_SECURE_ONLY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH 16
     * }
     */
    public static int RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_ALLOW_LOCAL_ONLY 32
     * }
     */
    public static int RPC_IF_ALLOW_LOCAL_ONLY() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_SEC_NO_CACHE 64
     * }
     */
    public static int RPC_IF_SEC_NO_CACHE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_SEC_CACHE_PER_PROC 128
     * }
     */
    public static int RPC_IF_SEC_CACHE_PER_PROC() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define RPC_IF_ASYNC_CALLBACK 256
     * }
     */
    public static int RPC_IF_ASYNC_CALLBACK() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define RPC_FW_IF_FLAG_DCOM 1
     * }
     */
    public static int RPC_FW_IF_FLAG_DCOM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_NCA_FLAGS_DEFAULT 0
     * }
     */
    public static int RPC_NCA_FLAGS_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_NCA_FLAGS_IDEMPOTENT 1
     * }
     */
    public static int RPC_NCA_FLAGS_IDEMPOTENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_NCA_FLAGS_BROADCAST 2
     * }
     */
    public static int RPC_NCA_FLAGS_BROADCAST() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_NCA_FLAGS_MAYBE 4
     * }
     */
    public static int RPC_NCA_FLAGS_MAYBE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_BUFFER_COMPLETE 4096
     * }
     */
    public static int RPC_BUFFER_COMPLETE() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define RPC_BUFFER_PARTIAL 8192
     * }
     */
    public static int RPC_BUFFER_PARTIAL() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define RPC_BUFFER_EXTRA 16384
     * }
     */
    public static int RPC_BUFFER_EXTRA() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define RPC_BUFFER_ASYNC 32768
     * }
     */
    public static int RPC_BUFFER_ASYNC() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define RPC_BUFFER_NONOTIFY 65536
     * }
     */
    public static int RPC_BUFFER_NONOTIFY() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define RPC_FLAGS_VALID_BIT 32768
     * }
     */
    public static int RPC_FLAGS_VALID_BIT() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define NT351_INTERFACE_SIZE 64
     * }
     */
    public static int NT351_INTERFACE_SIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define RPC_INTERFACE_HAS_PIPES 1
     * }
     */
    public static int RPC_INTERFACE_HAS_PIPES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_SYSTEM_HANDLE_FREE_UNRETRIEVED 1
     * }
     */
    public static int RPC_SYSTEM_HANDLE_FREE_UNRETRIEVED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_SYSTEM_HANDLE_FREE_RETRIEVED 2
     * }
     */
    public static int RPC_SYSTEM_HANDLE_FREE_RETRIEVED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_SYSTEM_HANDLE_FREE_ALL 3
     * }
     */
    public static int RPC_SYSTEM_HANDLE_FREE_ALL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_SYSTEM_HANDLE_FREE_ERROR_ON_CLOSE 4
     * }
     */
    public static int RPC_SYSTEM_HANDLE_FREE_ERROR_ON_CLOSE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define TRANSPORT_TYPE_CN 1
     * }
     */
    public static int TRANSPORT_TYPE_CN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define TRANSPORT_TYPE_DG 2
     * }
     */
    public static int TRANSPORT_TYPE_DG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define TRANSPORT_TYPE_LPC 4
     * }
     */
    public static int TRANSPORT_TYPE_LPC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define TRANSPORT_TYPE_WMSG 8
     * }
     */
    public static int TRANSPORT_TYPE_WMSG() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define RPC_P_ADDR_FORMAT_TCP_IPV4 1
     * }
     */
    public static int RPC_P_ADDR_FORMAT_TCP_IPV4() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_P_ADDR_FORMAT_TCP_IPV6 2
     * }
     */
    public static int RPC_P_ADDR_FORMAT_TCP_IPV6() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_PROXY_CONNECTION_TYPE_IN_PROXY 0
     * }
     */
    public static int RPC_PROXY_CONNECTION_TYPE_IN_PROXY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_PROXY_CONNECTION_TYPE_OUT_PROXY 1
     * }
     */
    public static int RPC_PROXY_CONNECTION_TYPE_OUT_PROXY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_PRIVATE_SUPPRESS_WAKE 1
     * }
     */
    public static int RPC_C_OPT_PRIVATE_SUPPRESS_WAKE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_PRIVATE_DO_NOT_DISTURB 2
     * }
     */
    public static int RPC_C_OPT_PRIVATE_DO_NOT_DISTURB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_OPT_PRIVATE_BREAK_ON_SUSPEND 3
     * }
     */
    public static int RPC_C_OPT_PRIVATE_BREAK_ON_SUSPEND() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_NS_SYNTAX_DEFAULT 0
     * }
     */
    public static int RPC_C_NS_SYNTAX_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_NS_SYNTAX_DCE 3
     * }
     */
    public static int RPC_C_NS_SYNTAX_DCE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROFILE_DEFAULT_ELT 0
     * }
     */
    public static int RPC_C_PROFILE_DEFAULT_ELT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROFILE_ALL_ELT 1
     * }
     */
    public static int RPC_C_PROFILE_ALL_ELT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROFILE_MATCH_BY_IF 2
     * }
     */
    public static int RPC_C_PROFILE_MATCH_BY_IF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROFILE_MATCH_BY_MBR 3
     * }
     */
    public static int RPC_C_PROFILE_MATCH_BY_MBR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RPC_C_PROFILE_MATCH_BY_BOTH 4
     * }
     */
    public static int RPC_C_PROFILE_MATCH_BY_BOTH() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_C_NOTIFY_ON_SEND_COMPLETE 1
     * }
     */
    public static int RPC_C_NOTIFY_ON_SEND_COMPLETE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MaxNumberOfEEInfoParams 4
     * }
     */
    public static int MaxNumberOfEEInfoParams() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define RPC_EEINFO_VERSION 1
     * }
     */
    public static int RPC_EEINFO_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define EEInfoPreviousRecordsMissing 1
     * }
     */
    public static int EEInfoPreviousRecordsMissing() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define EEInfoNextRecordsMissing 2
     * }
     */
    public static int EEInfoNextRecordsMissing() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define EEInfoUseFileTime 4
     * }
     */
    public static int EEInfoUseFileTime() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define EEInfoGCCOM 11
     * }
     */
    public static int EEInfoGCCOM() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define EEInfoGCFRS 12
     * }
     */
    public static int EEInfoGCFRS() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define RPC_CALL_STATUS_CANCELLED 1
     * }
     */
    public static int RPC_CALL_STATUS_CANCELLED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RPC_CALL_STATUS_DISCONNECTED 2
     * }
     */
    public static int RPC_CALL_STATUS_DISCONNECTED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ABM_NEW 0
     * }
     */
    public static int ABM_NEW() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define ABM_REMOVE 1
     * }
     */
    public static int ABM_REMOVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ABM_QUERYPOS 2
     * }
     */
    public static int ABM_QUERYPOS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ABM_SETPOS 3
     * }
     */
    public static int ABM_SETPOS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ABM_GETSTATE 4
     * }
     */
    public static int ABM_GETSTATE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ABM_GETTASKBARPOS 5
     * }
     */
    public static int ABM_GETTASKBARPOS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ABM_ACTIVATE 6
     * }
     */
    public static int ABM_ACTIVATE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define ABM_GETAUTOHIDEBAR 7
     * }
     */
    public static int ABM_GETAUTOHIDEBAR() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define ABM_SETAUTOHIDEBAR 8
     * }
     */
    public static int ABM_SETAUTOHIDEBAR() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define ABM_WINDOWPOSCHANGED 9
     * }
     */
    public static int ABM_WINDOWPOSCHANGED() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define ABM_SETSTATE 10
     * }
     */
    public static int ABM_SETSTATE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define ABM_GETAUTOHIDEBAREX 11
     * }
     */
    public static int ABM_GETAUTOHIDEBAREX() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define ABM_SETAUTOHIDEBAREX 12
     * }
     */
    public static int ABM_SETAUTOHIDEBAREX() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define ABN_STATECHANGE 0
     * }
     */
    public static int ABN_STATECHANGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define ABN_POSCHANGED 1
     * }
     */
    public static int ABN_POSCHANGED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ABN_FULLSCREENAPP 2
     * }
     */
    public static int ABN_FULLSCREENAPP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ABN_WINDOWARRANGE 3
     * }
     */
    public static int ABN_WINDOWARRANGE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ABS_AUTOHIDE 1
     * }
     */
    public static int ABS_AUTOHIDE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ABS_ALWAYSONTOP 2
     * }
     */
    public static int ABS_ALWAYSONTOP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ABE_LEFT 0
     * }
     */
    public static int ABE_LEFT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define ABE_TOP 1
     * }
     */
    public static int ABE_TOP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ABE_RIGHT 2
     * }
     */
    public static int ABE_RIGHT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ABE_BOTTOM 3
     * }
     */
    public static int ABE_BOTTOM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FO_MOVE 1
     * }
     */
    public static int FO_MOVE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FO_COPY 2
     * }
     */
    public static int FO_COPY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FO_DELETE 3
     * }
     */
    public static int FO_DELETE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FO_RENAME 4
     * }
     */
    public static int FO_RENAME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FOF_MULTIDESTFILES 1
     * }
     */
    public static int FOF_MULTIDESTFILES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FOF_CONFIRMMOUSE 2
     * }
     */
    public static int FOF_CONFIRMMOUSE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FOF_SILENT 4
     * }
     */
    public static int FOF_SILENT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FOF_RENAMEONCOLLISION 8
     * }
     */
    public static int FOF_RENAMEONCOLLISION() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FOF_NOCONFIRMATION 16
     * }
     */
    public static int FOF_NOCONFIRMATION() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FOF_WANTMAPPINGHANDLE 32
     * }
     */
    public static int FOF_WANTMAPPINGHANDLE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define FOF_ALLOWUNDO 64
     * }
     */
    public static int FOF_ALLOWUNDO() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define FOF_FILESONLY 128
     * }
     */
    public static int FOF_FILESONLY() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define FOF_SIMPLEPROGRESS 256
     * }
     */
    public static int FOF_SIMPLEPROGRESS() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define FOF_NOCONFIRMMKDIR 512
     * }
     */
    public static int FOF_NOCONFIRMMKDIR() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define FOF_NOERRORUI 1024
     * }
     */
    public static int FOF_NOERRORUI() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define FOF_NOCOPYSECURITYATTRIBS 2048
     * }
     */
    public static int FOF_NOCOPYSECURITYATTRIBS() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define FOF_NORECURSION 4096
     * }
     */
    public static int FOF_NORECURSION() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define FOF_NO_CONNECTED_ELEMENTS 8192
     * }
     */
    public static int FOF_NO_CONNECTED_ELEMENTS() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define FOF_WANTNUKEWARNING 16384
     * }
     */
    public static int FOF_WANTNUKEWARNING() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define FOF_NORECURSEREPARSE 32768
     * }
     */
    public static int FOF_NORECURSEREPARSE() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define PO_DELETE 19
     * }
     */
    public static int PO_DELETE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define PO_RENAME 20
     * }
     */
    public static int PO_RENAME() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define PO_PORTCHANGE 32
     * }
     */
    public static int PO_PORTCHANGE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define PO_REN_PORT 52
     * }
     */
    public static int PO_REN_PORT() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_FNF 2
     * }
     */
    public static int SE_ERR_FNF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_PNF 3
     * }
     */
    public static int SE_ERR_PNF() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_ACCESSDENIED 5
     * }
     */
    public static int SE_ERR_ACCESSDENIED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_OOM 8
     * }
     */
    public static int SE_ERR_OOM() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_DLLNOTFOUND 32
     * }
     */
    public static int SE_ERR_DLLNOTFOUND() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_SHARE 26
     * }
     */
    public static int SE_ERR_SHARE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_ASSOCINCOMPLETE 27
     * }
     */
    public static int SE_ERR_ASSOCINCOMPLETE() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_DDETIMEOUT 28
     * }
     */
    public static int SE_ERR_DDETIMEOUT() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_DDEFAIL 29
     * }
     */
    public static int SE_ERR_DDEFAIL() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_DDEBUSY 30
     * }
     */
    public static int SE_ERR_DDEBUSY() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * #define SE_ERR_NOASSOC 31
     * }
     */
    public static int SE_ERR_NOASSOC() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_DEFAULT 0
     * }
     */
    public static int SEE_MASK_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_CLASSNAME 1
     * }
     */
    public static int SEE_MASK_CLASSNAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_CLASSKEY 3
     * }
     */
    public static int SEE_MASK_CLASSKEY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_IDLIST 4
     * }
     */
    public static int SEE_MASK_IDLIST() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_INVOKEIDLIST 12
     * }
     */
    public static int SEE_MASK_INVOKEIDLIST() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_HOTKEY 32
     * }
     */
    public static int SEE_MASK_HOTKEY() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_NOCLOSEPROCESS 64
     * }
     */
    public static int SEE_MASK_NOCLOSEPROCESS() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_CONNECTNETDRV 128
     * }
     */
    public static int SEE_MASK_CONNECTNETDRV() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_NOASYNC 256
     * }
     */
    public static int SEE_MASK_NOASYNC() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_DOENVSUBST 512
     * }
     */
    public static int SEE_MASK_DOENVSUBST() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_FLAG_NO_UI 1024
     * }
     */
    public static int SEE_MASK_FLAG_NO_UI() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_UNICODE 16384
     * }
     */
    public static int SEE_MASK_UNICODE() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_NO_CONSOLE 32768
     * }
     */
    public static int SEE_MASK_NO_CONSOLE() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_ASYNCOK 1048576
     * }
     */
    public static int SEE_MASK_ASYNCOK() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_HMONITOR 2097152
     * }
     */
    public static int SEE_MASK_HMONITOR() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_NOZONECHECKS 8388608
     * }
     */
    public static int SEE_MASK_NOZONECHECKS() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_NOQUERYCLASSSTORE 16777216
     * }
     */
    public static int SEE_MASK_NOQUERYCLASSSTORE() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_WAITFORINPUTIDLE 33554432
     * }
     */
    public static int SEE_MASK_WAITFORINPUTIDLE() {
        return (int)33554432L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_FLAG_LOG_USAGE 67108864
     * }
     */
    public static int SEE_MASK_FLAG_LOG_USAGE() {
        return (int)67108864L;
    }
    /**
     * {@snippet :
     * #define SEE_MASK_FLAG_HINST_IS_SITE 134217728
     * }
     */
    public static int SEE_MASK_FLAG_HINST_IS_SITE() {
        return (int)134217728L;
    }
    /**
     * {@snippet :
     * #define SHERB_NOCONFIRMATION 1
     * }
     */
    public static int SHERB_NOCONFIRMATION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SHERB_NOPROGRESSUI 2
     * }
     */
    public static int SHERB_NOPROGRESSUI() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SHERB_NOSOUND 4
     * }
     */
    public static int SHERB_NOSOUND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define NINF_KEY 1
     * }
     */
    public static int NINF_KEY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NIM_ADD 0
     * }
     */
    public static int NIM_ADD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define NIM_MODIFY 1
     * }
     */
    public static int NIM_MODIFY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NIM_DELETE 2
     * }
     */
    public static int NIM_DELETE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define NIM_SETFOCUS 3
     * }
     */
    public static int NIM_SETFOCUS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define NIM_SETVERSION 4
     * }
     */
    public static int NIM_SETVERSION() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define NOTIFYICON_VERSION 3
     * }
     */
    public static int NOTIFYICON_VERSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define NOTIFYICON_VERSION_4 4
     * }
     */
    public static int NOTIFYICON_VERSION_4() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define NIF_MESSAGE 1
     * }
     */
    public static int NIF_MESSAGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NIF_ICON 2
     * }
     */
    public static int NIF_ICON() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define NIF_TIP 4
     * }
     */
    public static int NIF_TIP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define NIF_STATE 8
     * }
     */
    public static int NIF_STATE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define NIF_INFO 16
     * }
     */
    public static int NIF_INFO() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define NIF_GUID 32
     * }
     */
    public static int NIF_GUID() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define NIF_REALTIME 64
     * }
     */
    public static int NIF_REALTIME() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define NIF_SHOWTIP 128
     * }
     */
    public static int NIF_SHOWTIP() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define NIS_HIDDEN 1
     * }
     */
    public static int NIS_HIDDEN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NIS_SHAREDICON 2
     * }
     */
    public static int NIS_SHAREDICON() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define NIIF_NONE 0
     * }
     */
    public static int NIIF_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define NIIF_INFO 1
     * }
     */
    public static int NIIF_INFO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define NIIF_WARNING 2
     * }
     */
    public static int NIIF_WARNING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define NIIF_ERROR 3
     * }
     */
    public static int NIIF_ERROR() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define NIIF_USER 4
     * }
     */
    public static int NIIF_USER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define NIIF_ICON_MASK 15
     * }
     */
    public static int NIIF_ICON_MASK() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define NIIF_NOSOUND 16
     * }
     */
    public static int NIIF_NOSOUND() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define NIIF_LARGE_ICON 32
     * }
     */
    public static int NIIF_LARGE_ICON() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define NIIF_RESPECT_QUIET_TIME 128
     * }
     */
    public static int NIIF_RESPECT_QUIET_TIME() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define SHGFI_ICON 256
     * }
     */
    public static int SHGFI_ICON() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define SHGFI_DISPLAYNAME 512
     * }
     */
    public static int SHGFI_DISPLAYNAME() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define SHGFI_TYPENAME 1024
     * }
     */
    public static int SHGFI_TYPENAME() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define SHGFI_ATTRIBUTES 2048
     * }
     */
    public static int SHGFI_ATTRIBUTES() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define SHGFI_ICONLOCATION 4096
     * }
     */
    public static int SHGFI_ICONLOCATION() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define SHGFI_EXETYPE 8192
     * }
     */
    public static int SHGFI_EXETYPE() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define SHGFI_SYSICONINDEX 16384
     * }
     */
    public static int SHGFI_SYSICONINDEX() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define SHGFI_LINKOVERLAY 32768
     * }
     */
    public static int SHGFI_LINKOVERLAY() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define SHGFI_SELECTED 65536
     * }
     */
    public static int SHGFI_SELECTED() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define SHGFI_ATTR_SPECIFIED 131072
     * }
     */
    public static int SHGFI_ATTR_SPECIFIED() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define SHGFI_LARGEICON 0
     * }
     */
    public static int SHGFI_LARGEICON() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SHGFI_SMALLICON 1
     * }
     */
    public static int SHGFI_SMALLICON() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SHGFI_OPENICON 2
     * }
     */
    public static int SHGFI_OPENICON() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SHGFI_SHELLICONSIZE 4
     * }
     */
    public static int SHGFI_SHELLICONSIZE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SHGFI_PIDL 8
     * }
     */
    public static int SHGFI_PIDL() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SHGFI_USEFILEATTRIBUTES 16
     * }
     */
    public static int SHGFI_USEFILEATTRIBUTES() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SHGFI_ADDOVERLAYS 32
     * }
     */
    public static int SHGFI_ADDOVERLAYS() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SHGFI_OVERLAYINDEX 64
     * }
     */
    public static int SHGFI_OVERLAYINDEX() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define SHGSI_ICONLOCATION 0
     * }
     */
    public static int SHGSI_ICONLOCATION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_PIDL 1
     * }
     */
    public static int SHGNLI_PIDL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_PREFIXNAME 2
     * }
     */
    public static int SHGNLI_PREFIXNAME() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_NOUNIQUE 4
     * }
     */
    public static int SHGNLI_NOUNIQUE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_NOLNK 8
     * }
     */
    public static int SHGNLI_NOLNK() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_NOLOCNAME 16
     * }
     */
    public static int SHGNLI_NOLOCNAME() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SHGNLI_USEURLEXT 32
     * }
     */
    public static int SHGNLI_USEURLEXT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_OPEN 0
     * }
     */
    public static int PRINTACTION_OPEN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_PROPERTIES 1
     * }
     */
    public static int PRINTACTION_PROPERTIES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_NETINSTALL 2
     * }
     */
    public static int PRINTACTION_NETINSTALL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_NETINSTALLLINK 3
     * }
     */
    public static int PRINTACTION_NETINSTALLLINK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_TESTPAGE 4
     * }
     */
    public static int PRINTACTION_TESTPAGE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_OPENNETPRN 5
     * }
     */
    public static int PRINTACTION_OPENNETPRN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_DOCUMENTDEFAULTS 6
     * }
     */
    public static int PRINTACTION_DOCUMENTDEFAULTS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define PRINTACTION_SERVERPROPERTIES 7
     * }
     */
    public static int PRINTACTION_SERVERPROPERTIES() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define PRINT_PROP_FORCE_NAME 1
     * }
     */
    public static int PRINT_PROP_FORCE_NAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define OFFLINE_STATUS_LOCAL 1
     * }
     */
    public static int OFFLINE_STATUS_LOCAL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define OFFLINE_STATUS_REMOTE 2
     * }
     */
    public static int OFFLINE_STATUS_REMOTE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define OFFLINE_STATUS_INCOMPLETE 4
     * }
     */
    public static int OFFLINE_STATUS_INCOMPLETE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SHIL_LARGE 0
     * }
     */
    public static int SHIL_LARGE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SHIL_SMALL 1
     * }
     */
    public static int SHIL_SMALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SHIL_EXTRALARGE 2
     * }
     */
    public static int SHIL_EXTRALARGE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SHIL_SYSSMALL 3
     * }
     */
    public static int SHIL_SYSSMALL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SHIL_JUMBO 4
     * }
     */
    public static int SHIL_JUMBO() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PERF_DATA_VERSION 1
     * }
     */
    public static int PERF_DATA_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PERF_DATA_REVISION 1
     * }
     */
    public static int PERF_DATA_REVISION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PERF_SIZE_DWORD 0
     * }
     */
    public static int PERF_SIZE_DWORD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_SIZE_LARGE 256
     * }
     */
    public static int PERF_SIZE_LARGE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define PERF_SIZE_ZERO 512
     * }
     */
    public static int PERF_SIZE_ZERO() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define PERF_SIZE_VARIABLE_LEN 768
     * }
     */
    public static int PERF_SIZE_VARIABLE_LEN() {
        return (int)768L;
    }
    /**
     * {@snippet :
     * #define PERF_TYPE_NUMBER 0
     * }
     */
    public static int PERF_TYPE_NUMBER() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_TYPE_COUNTER 1024
     * }
     */
    public static int PERF_TYPE_COUNTER() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define PERF_TYPE_TEXT 2048
     * }
     */
    public static int PERF_TYPE_TEXT() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define PERF_TYPE_ZERO 3072
     * }
     */
    public static int PERF_TYPE_ZERO() {
        return (int)3072L;
    }
    /**
     * {@snippet :
     * #define PERF_NUMBER_HEX 0
     * }
     */
    public static int PERF_NUMBER_HEX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_NUMBER_DECIMAL 65536
     * }
     */
    public static int PERF_NUMBER_DECIMAL() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define PERF_NUMBER_DEC_1000 131072
     * }
     */
    public static int PERF_NUMBER_DEC_1000() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_VALUE 0
     * }
     */
    public static int PERF_COUNTER_VALUE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_RATE 65536
     * }
     */
    public static int PERF_COUNTER_RATE() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_FRACTION 131072
     * }
     */
    public static int PERF_COUNTER_FRACTION() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_BASE 196608
     * }
     */
    public static int PERF_COUNTER_BASE() {
        return (int)196608L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_ELAPSED 262144
     * }
     */
    public static int PERF_COUNTER_ELAPSED() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_QUEUELEN 327680
     * }
     */
    public static int PERF_COUNTER_QUEUELEN() {
        return (int)327680L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_HISTOGRAM 393216
     * }
     */
    public static int PERF_COUNTER_HISTOGRAM() {
        return (int)393216L;
    }
    /**
     * {@snippet :
     * #define PERF_COUNTER_PRECISION 458752
     * }
     */
    public static int PERF_COUNTER_PRECISION() {
        return (int)458752L;
    }
    /**
     * {@snippet :
     * #define PERF_TEXT_UNICODE 0
     * }
     */
    public static int PERF_TEXT_UNICODE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_TEXT_ASCII 65536
     * }
     */
    public static int PERF_TEXT_ASCII() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define PERF_TIMER_TICK 0
     * }
     */
    public static int PERF_TIMER_TICK() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_TIMER_100NS 1048576
     * }
     */
    public static int PERF_TIMER_100NS() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define PERF_OBJECT_TIMER 2097152
     * }
     */
    public static int PERF_OBJECT_TIMER() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * #define PERF_DELTA_COUNTER 4194304
     * }
     */
    public static int PERF_DELTA_COUNTER() {
        return (int)4194304L;
    }
    /**
     * {@snippet :
     * #define PERF_DELTA_BASE 8388608
     * }
     */
    public static int PERF_DELTA_BASE() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * #define PERF_INVERSE_COUNTER 16777216
     * }
     */
    public static int PERF_INVERSE_COUNTER() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * #define PERF_MULTI_COUNTER 33554432
     * }
     */
    public static int PERF_MULTI_COUNTER() {
        return (int)33554432L;
    }
    /**
     * {@snippet :
     * #define PERF_DISPLAY_NO_SUFFIX 0
     * }
     */
    public static int PERF_DISPLAY_NO_SUFFIX() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define PERF_DISPLAY_PER_SEC 268435456
     * }
     */
    public static int PERF_DISPLAY_PER_SEC() {
        return (int)268435456L;
    }
    /**
     * {@snippet :
     * #define PERF_DISPLAY_PERCENT 536870912
     * }
     */
    public static int PERF_DISPLAY_PERCENT() {
        return (int)536870912L;
    }
    /**
     * {@snippet :
     * #define PERF_DISPLAY_SECONDS 805306368
     * }
     */
    public static int PERF_DISPLAY_SECONDS() {
        return (int)805306368L;
    }
    /**
     * {@snippet :
     * #define PERF_DISPLAY_NOSHOW 1073741824
     * }
     */
    public static int PERF_DISPLAY_NOSHOW() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * #define PERF_DETAIL_NOVICE 100
     * }
     */
    public static int PERF_DETAIL_NOVICE() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define PERF_DETAIL_ADVANCED 200
     * }
     */
    public static int PERF_DETAIL_ADVANCED() {
        return (int)200L;
    }
    /**
     * {@snippet :
     * #define PERF_DETAIL_EXPERT 300
     * }
     */
    public static int PERF_DETAIL_EXPERT() {
        return (int)300L;
    }
    /**
     * {@snippet :
     * #define PERF_DETAIL_WIZARD 400
     * }
     */
    public static int PERF_DETAIL_WIZARD() {
        return (int)400L;
    }
    /**
     * {@snippet :
     * #define WINPERF_LOG_NONE 0
     * }
     */
    public static int WINPERF_LOG_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINPERF_LOG_USER 1
     * }
     */
    public static int WINPERF_LOG_USER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define WINPERF_LOG_DEBUG 2
     * }
     */
    public static int WINPERF_LOG_DEBUG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define WINPERF_LOG_VERBOSE 3
     * }
     */
    public static int WINPERF_LOG_VERBOSE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define FD_SETSIZE 64
     * }
     */
    public static int FD_SETSIZE() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define IOCPARM_MASK 127
     * }
     */
    public static int IOCPARM_MASK() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define IOC_VOID 536870912
     * }
     */
    public static int IOC_VOID() {
        return (int)536870912L;
    }
    /**
     * {@snippet :
     * #define IOC_OUT 1073741824
     * }
     */
    public static int IOC_OUT() {
        return (int)1073741824L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_IP 0
     * }
     */
    public static int IPPROTO_IP() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_ICMP 1
     * }
     */
    public static int IPPROTO_ICMP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_IGMP 2
     * }
     */
    public static int IPPROTO_IGMP() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_GGP 3
     * }
     */
    public static int IPPROTO_GGP() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_TCP 6
     * }
     */
    public static int IPPROTO_TCP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_PUP 12
     * }
     */
    public static int IPPROTO_PUP() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_UDP 17
     * }
     */
    public static int IPPROTO_UDP() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_IDP 22
     * }
     */
    public static int IPPROTO_IDP() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_ND 77
     * }
     */
    public static int IPPROTO_ND() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_RAW 255
     * }
     */
    public static int IPPROTO_RAW() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define IPPROTO_MAX 256
     * }
     */
    public static int IPPROTO_MAX() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define IPPORT_ECHO 7
     * }
     */
    public static int IPPORT_ECHO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define IPPORT_DISCARD 9
     * }
     */
    public static int IPPORT_DISCARD() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define IPPORT_SYSTAT 11
     * }
     */
    public static int IPPORT_SYSTAT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define IPPORT_DAYTIME 13
     * }
     */
    public static int IPPORT_DAYTIME() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define IPPORT_NETSTAT 15
     * }
     */
    public static int IPPORT_NETSTAT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define IPPORT_FTP 21
     * }
     */
    public static int IPPORT_FTP() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define IPPORT_TELNET 23
     * }
     */
    public static int IPPORT_TELNET() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define IPPORT_SMTP 25
     * }
     */
    public static int IPPORT_SMTP() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define IPPORT_TIMESERVER 37
     * }
     */
    public static int IPPORT_TIMESERVER() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define IPPORT_NAMESERVER 42
     * }
     */
    public static int IPPORT_NAMESERVER() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * #define IPPORT_WHOIS 43
     * }
     */
    public static int IPPORT_WHOIS() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * #define IPPORT_MTP 57
     * }
     */
    public static int IPPORT_MTP() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * #define IPPORT_TFTP 69
     * }
     */
    public static int IPPORT_TFTP() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * #define IPPORT_RJE 77
     * }
     */
    public static int IPPORT_RJE() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * #define IPPORT_FINGER 79
     * }
     */
    public static int IPPORT_FINGER() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * #define IPPORT_TTYLINK 87
     * }
     */
    public static int IPPORT_TTYLINK() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * #define IPPORT_SUPDUP 95
     * }
     */
    public static int IPPORT_SUPDUP() {
        return (int)95L;
    }
    /**
     * {@snippet :
     * #define IPPORT_EXECSERVER 512
     * }
     */
    public static int IPPORT_EXECSERVER() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define IPPORT_LOGINSERVER 513
     * }
     */
    public static int IPPORT_LOGINSERVER() {
        return (int)513L;
    }
    /**
     * {@snippet :
     * #define IPPORT_CMDSERVER 514
     * }
     */
    public static int IPPORT_CMDSERVER() {
        return (int)514L;
    }
    /**
     * {@snippet :
     * #define IPPORT_EFSSERVER 520
     * }
     */
    public static int IPPORT_EFSSERVER() {
        return (int)520L;
    }
    /**
     * {@snippet :
     * #define IPPORT_BIFFUDP 512
     * }
     */
    public static int IPPORT_BIFFUDP() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define IPPORT_WHOSERVER 513
     * }
     */
    public static int IPPORT_WHOSERVER() {
        return (int)513L;
    }
    /**
     * {@snippet :
     * #define IPPORT_ROUTESERVER 520
     * }
     */
    public static int IPPORT_ROUTESERVER() {
        return (int)520L;
    }
    /**
     * {@snippet :
     * #define IPPORT_RESERVED 1024
     * }
     */
    public static int IPPORT_RESERVED() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define IMPLINK_IP 155
     * }
     */
    public static int IMPLINK_IP() {
        return (int)155L;
    }
    /**
     * {@snippet :
     * #define IMPLINK_LOWEXPER 156
     * }
     */
    public static int IMPLINK_LOWEXPER() {
        return (int)156L;
    }
    /**
     * {@snippet :
     * #define IMPLINK_HIGHEXPER 158
     * }
     */
    public static int IMPLINK_HIGHEXPER() {
        return (int)158L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSA_NSHIFT 24
     * }
     */
    public static int IN_CLASSA_NSHIFT() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSA_HOST 16777215
     * }
     */
    public static int IN_CLASSA_HOST() {
        return (int)16777215L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSA_MAX 128
     * }
     */
    public static int IN_CLASSA_MAX() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSB_NSHIFT 16
     * }
     */
    public static int IN_CLASSB_NSHIFT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSB_HOST 65535
     * }
     */
    public static int IN_CLASSB_HOST() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSB_MAX 65536
     * }
     */
    public static int IN_CLASSB_MAX() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSC_NSHIFT 8
     * }
     */
    public static int IN_CLASSC_NSHIFT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define IN_CLASSC_HOST 255
     * }
     */
    public static int IN_CLASSC_HOST() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define INADDR_LOOPBACK 2130706433
     * }
     */
    public static int INADDR_LOOPBACK() {
        return (int)2130706433L;
    }
    /**
     * {@snippet :
     * #define WSADESCRIPTION_LEN 256
     * }
     */
    public static int WSADESCRIPTION_LEN() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define WSASYS_STATUS_LEN 128
     * }
     */
    public static int WSASYS_STATUS_LEN() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define IP_OPTIONS 1
     * }
     */
    public static int IP_OPTIONS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define IP_MULTICAST_IF 2
     * }
     */
    public static int IP_MULTICAST_IF() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define IP_MULTICAST_TTL 3
     * }
     */
    public static int IP_MULTICAST_TTL() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define IP_MULTICAST_LOOP 4
     * }
     */
    public static int IP_MULTICAST_LOOP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define IP_ADD_MEMBERSHIP 5
     * }
     */
    public static int IP_ADD_MEMBERSHIP() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define IP_DROP_MEMBERSHIP 6
     * }
     */
    public static int IP_DROP_MEMBERSHIP() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define IP_TTL 7
     * }
     */
    public static int IP_TTL() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define IP_TOS 8
     * }
     */
    public static int IP_TOS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define IP_DONTFRAGMENT 9
     * }
     */
    public static int IP_DONTFRAGMENT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define IP_DEFAULT_MULTICAST_TTL 1
     * }
     */
    public static int IP_DEFAULT_MULTICAST_TTL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define IP_DEFAULT_MULTICAST_LOOP 1
     * }
     */
    public static int IP_DEFAULT_MULTICAST_LOOP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define IP_MAX_MEMBERSHIPS 20
     * }
     */
    public static int IP_MAX_MEMBERSHIPS() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define SOCK_STREAM 1
     * }
     */
    public static int SOCK_STREAM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SOCK_DGRAM 2
     * }
     */
    public static int SOCK_DGRAM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SOCK_RAW 3
     * }
     */
    public static int SOCK_RAW() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define SOCK_RDM 4
     * }
     */
    public static int SOCK_RDM() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SOCK_SEQPACKET 5
     * }
     */
    public static int SOCK_SEQPACKET() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SO_DEBUG 1
     * }
     */
    public static int SO_DEBUG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define SO_ACCEPTCONN 2
     * }
     */
    public static int SO_ACCEPTCONN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SO_REUSEADDR 4
     * }
     */
    public static int SO_REUSEADDR() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SO_KEEPALIVE 8
     * }
     */
    public static int SO_KEEPALIVE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SO_DONTROUTE 16
     * }
     */
    public static int SO_DONTROUTE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SO_BROADCAST 32
     * }
     */
    public static int SO_BROADCAST() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SO_USELOOPBACK 64
     * }
     */
    public static int SO_USELOOPBACK() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define SO_LINGER 128
     * }
     */
    public static int SO_LINGER() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define SO_OOBINLINE 256
     * }
     */
    public static int SO_OOBINLINE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define SO_SNDBUF 4097
     * }
     */
    public static int SO_SNDBUF() {
        return (int)4097L;
    }
    /**
     * {@snippet :
     * #define SO_RCVBUF 4098
     * }
     */
    public static int SO_RCVBUF() {
        return (int)4098L;
    }
    /**
     * {@snippet :
     * #define SO_SNDLOWAT 4099
     * }
     */
    public static int SO_SNDLOWAT() {
        return (int)4099L;
    }
    /**
     * {@snippet :
     * #define SO_RCVLOWAT 4100
     * }
     */
    public static int SO_RCVLOWAT() {
        return (int)4100L;
    }
    /**
     * {@snippet :
     * #define SO_SNDTIMEO 4101
     * }
     */
    public static int SO_SNDTIMEO() {
        return (int)4101L;
    }
    /**
     * {@snippet :
     * #define SO_RCVTIMEO 4102
     * }
     */
    public static int SO_RCVTIMEO() {
        return (int)4102L;
    }
    /**
     * {@snippet :
     * #define SO_ERROR 4103
     * }
     */
    public static int SO_ERROR() {
        return (int)4103L;
    }
    /**
     * {@snippet :
     * #define SO_TYPE 4104
     * }
     */
    public static int SO_TYPE() {
        return (int)4104L;
    }
    /**
     * {@snippet :
     * #define SO_CONNDATA 28672
     * }
     */
    public static int SO_CONNDATA() {
        return (int)28672L;
    }
    /**
     * {@snippet :
     * #define SO_CONNOPT 28673
     * }
     */
    public static int SO_CONNOPT() {
        return (int)28673L;
    }
    /**
     * {@snippet :
     * #define SO_DISCDATA 28674
     * }
     */
    public static int SO_DISCDATA() {
        return (int)28674L;
    }
    /**
     * {@snippet :
     * #define SO_DISCOPT 28675
     * }
     */
    public static int SO_DISCOPT() {
        return (int)28675L;
    }
    /**
     * {@snippet :
     * #define SO_CONNDATALEN 28676
     * }
     */
    public static int SO_CONNDATALEN() {
        return (int)28676L;
    }
    /**
     * {@snippet :
     * #define SO_CONNOPTLEN 28677
     * }
     */
    public static int SO_CONNOPTLEN() {
        return (int)28677L;
    }
    /**
     * {@snippet :
     * #define SO_DISCDATALEN 28678
     * }
     */
    public static int SO_DISCDATALEN() {
        return (int)28678L;
    }
    /**
     * {@snippet :
     * #define SO_DISCOPTLEN 28679
     * }
     */
    public static int SO_DISCOPTLEN() {
        return (int)28679L;
    }
    /**
     * {@snippet :
     * #define SO_OPENTYPE 28680
     * }
     */
    public static int SO_OPENTYPE() {
        return (int)28680L;
    }
    /**
     * {@snippet :
     * #define SO_SYNCHRONOUS_ALERT 16
     * }
     */
    public static int SO_SYNCHRONOUS_ALERT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define SO_SYNCHRONOUS_NONALERT 32
     * }
     */
    public static int SO_SYNCHRONOUS_NONALERT() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define SO_MAXDG 28681
     * }
     */
    public static int SO_MAXDG() {
        return (int)28681L;
    }
    /**
     * {@snippet :
     * #define SO_MAXPATHDG 28682
     * }
     */
    public static int SO_MAXPATHDG() {
        return (int)28682L;
    }
    /**
     * {@snippet :
     * #define SO_UPDATE_ACCEPT_CONTEXT 28683
     * }
     */
    public static int SO_UPDATE_ACCEPT_CONTEXT() {
        return (int)28683L;
    }
    /**
     * {@snippet :
     * #define SO_CONNECT_TIME 28684
     * }
     */
    public static int SO_CONNECT_TIME() {
        return (int)28684L;
    }
    /**
     * {@snippet :
     * #define TCP_NODELAY 1
     * }
     */
    public static int TCP_NODELAY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define TCP_BSDURGENT 28672
     * }
     */
    public static int TCP_BSDURGENT() {
        return (int)28672L;
    }
    /**
     * {@snippet :
     * #define AF_UNSPEC 0
     * }
     */
    public static int AF_UNSPEC() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define AF_UNIX 1
     * }
     */
    public static int AF_UNIX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AF_INET 2
     * }
     */
    public static int AF_INET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define AF_IMPLINK 3
     * }
     */
    public static int AF_IMPLINK() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define AF_PUP 4
     * }
     */
    public static int AF_PUP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define AF_CHAOS 5
     * }
     */
    public static int AF_CHAOS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define AF_IPX 6
     * }
     */
    public static int AF_IPX() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define AF_NS 6
     * }
     */
    public static int AF_NS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define AF_ISO 7
     * }
     */
    public static int AF_ISO() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define AF_ECMA 8
     * }
     */
    public static int AF_ECMA() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define AF_DATAKIT 9
     * }
     */
    public static int AF_DATAKIT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define AF_CCITT 10
     * }
     */
    public static int AF_CCITT() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define AF_SNA 11
     * }
     */
    public static int AF_SNA() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define AF_DECnet 12
     * }
     */
    public static int AF_DECnet() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define AF_DLI 13
     * }
     */
    public static int AF_DLI() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define AF_LAT 14
     * }
     */
    public static int AF_LAT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define AF_HYLINK 15
     * }
     */
    public static int AF_HYLINK() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define AF_APPLETALK 16
     * }
     */
    public static int AF_APPLETALK() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define AF_NETBIOS 17
     * }
     */
    public static int AF_NETBIOS() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define AF_VOICEVIEW 18
     * }
     */
    public static int AF_VOICEVIEW() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define AF_FIREFOX 19
     * }
     */
    public static int AF_FIREFOX() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define AF_UNKNOWN1 20
     * }
     */
    public static int AF_UNKNOWN1() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define AF_BAN 21
     * }
     */
    public static int AF_BAN() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define AF_MAX 22
     * }
     */
    public static int AF_MAX() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define SOL_SOCKET 65535
     * }
     */
    public static int SOL_SOCKET() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define SOMAXCONN 5
     * }
     */
    public static int SOMAXCONN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define MSG_OOB 1
     * }
     */
    public static int MSG_OOB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define MSG_PEEK 2
     * }
     */
    public static int MSG_PEEK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define MSG_DONTROUTE 4
     * }
     */
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define MSG_MAXIOVLEN 16
     * }
     */
    public static int MSG_MAXIOVLEN() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define MSG_PARTIAL 32768
     * }
     */
    public static int MSG_PARTIAL() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define MAXGETHOSTSTRUCT 1024
     * }
     */
    public static int MAXGETHOSTSTRUCT() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define FD_READ 1
     * }
     */
    public static int FD_READ() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define FD_WRITE 2
     * }
     */
    public static int FD_WRITE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define FD_OOB 4
     * }
     */
    public static int FD_OOB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define FD_ACCEPT 8
     * }
     */
    public static int FD_ACCEPT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define FD_CONNECT 16
     * }
     */
    public static int FD_CONNECT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define FD_CLOSE 32
     * }
     */
    public static int FD_CLOSE() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define TF_DISCONNECT 1
     * }
     */
    public static int TF_DISCONNECT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define TF_REUSE_SOCKET 2
     * }
     */
    public static int TF_REUSE_SOCKET() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define TF_WRITE_BEHIND 4
     * }
     */
    public static int TF_WRITE_BEHIND() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RSA_ANY 0
     * }
     */
    public static int ALG_SID_RSA_ANY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RSA_PKCS 1
     * }
     */
    public static int ALG_SID_RSA_PKCS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RSA_MSATWORK 2
     * }
     */
    public static int ALG_SID_RSA_MSATWORK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RSA_ENTRUST 3
     * }
     */
    public static int ALG_SID_RSA_ENTRUST() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RSA_PGP 4
     * }
     */
    public static int ALG_SID_RSA_PGP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DSS_ANY 0
     * }
     */
    public static int ALG_SID_DSS_ANY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DSS_PKCS 1
     * }
     */
    public static int ALG_SID_DSS_PKCS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DSS_DMS 2
     * }
     */
    public static int ALG_SID_DSS_DMS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_ECDSA 3
     * }
     */
    public static int ALG_SID_ECDSA() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DES 1
     * }
     */
    public static int ALG_SID_DES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_3DES 3
     * }
     */
    public static int ALG_SID_3DES() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DESX 4
     * }
     */
    public static int ALG_SID_DESX() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_IDEA 5
     * }
     */
    public static int ALG_SID_IDEA() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_CAST 6
     * }
     */
    public static int ALG_SID_CAST() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SAFERSK64 7
     * }
     */
    public static int ALG_SID_SAFERSK64() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SAFERSK128 8
     * }
     */
    public static int ALG_SID_SAFERSK128() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_3DES_112 9
     * }
     */
    public static int ALG_SID_3DES_112() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_CYLINK_MEK 12
     * }
     */
    public static int ALG_SID_CYLINK_MEK() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RC5 13
     * }
     */
    public static int ALG_SID_RC5() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_AES_128 14
     * }
     */
    public static int ALG_SID_AES_128() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_AES_192 15
     * }
     */
    public static int ALG_SID_AES_192() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_AES_256 16
     * }
     */
    public static int ALG_SID_AES_256() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_AES 17
     * }
     */
    public static int ALG_SID_AES() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SKIPJACK 10
     * }
     */
    public static int ALG_SID_SKIPJACK() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_TEK 11
     * }
     */
    public static int ALG_SID_TEK() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CBCI 6
     * }
     */
    public static int CRYPT_MODE_CBCI() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CFBP 7
     * }
     */
    public static int CRYPT_MODE_CFBP() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_OFBP 8
     * }
     */
    public static int CRYPT_MODE_OFBP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CBCOFM 9
     * }
     */
    public static int CRYPT_MODE_CBCOFM() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CBCOFMI 10
     * }
     */
    public static int CRYPT_MODE_CBCOFMI() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RC2 2
     * }
     */
    public static int ALG_SID_RC2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RC4 1
     * }
     */
    public static int ALG_SID_RC4() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SEAL 2
     * }
     */
    public static int ALG_SID_SEAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DH_SANDF 1
     * }
     */
    public static int ALG_SID_DH_SANDF() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_DH_EPHEM 2
     * }
     */
    public static int ALG_SID_DH_EPHEM() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_AGREED_KEY_ANY 3
     * }
     */
    public static int ALG_SID_AGREED_KEY_ANY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_KEA 4
     * }
     */
    public static int ALG_SID_KEA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_ECDH 5
     * }
     */
    public static int ALG_SID_ECDH() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_ECDH_EPHEM 6
     * }
     */
    public static int ALG_SID_ECDH_EPHEM() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_MD2 1
     * }
     */
    public static int ALG_SID_MD2() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_MD4 2
     * }
     */
    public static int ALG_SID_MD4() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_MD5 3
     * }
     */
    public static int ALG_SID_MD5() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SHA 4
     * }
     */
    public static int ALG_SID_SHA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SHA1 4
     * }
     */
    public static int ALG_SID_SHA1() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_MAC 5
     * }
     */
    public static int ALG_SID_MAC() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RIPEMD 6
     * }
     */
    public static int ALG_SID_RIPEMD() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_RIPEMD160 7
     * }
     */
    public static int ALG_SID_RIPEMD160() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SSL3SHAMD5 8
     * }
     */
    public static int ALG_SID_SSL3SHAMD5() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_HMAC 9
     * }
     */
    public static int ALG_SID_HMAC() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_TLS1PRF 10
     * }
     */
    public static int ALG_SID_TLS1PRF() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_HASH_REPLACE_OWF 11
     * }
     */
    public static int ALG_SID_HASH_REPLACE_OWF() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SHA_256 12
     * }
     */
    public static int ALG_SID_SHA_256() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SHA_384 13
     * }
     */
    public static int ALG_SID_SHA_384() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SHA_512 14
     * }
     */
    public static int ALG_SID_SHA_512() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SSL3_MASTER 1
     * }
     */
    public static int ALG_SID_SSL3_MASTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SCHANNEL_MASTER_HASH 2
     * }
     */
    public static int ALG_SID_SCHANNEL_MASTER_HASH() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SCHANNEL_MAC_KEY 3
     * }
     */
    public static int ALG_SID_SCHANNEL_MAC_KEY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_PCT1_MASTER 4
     * }
     */
    public static int ALG_SID_PCT1_MASTER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SSL2_MASTER 5
     * }
     */
    public static int ALG_SID_SSL2_MASTER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_TLS1_MASTER 6
     * }
     */
    public static int ALG_SID_TLS1_MASTER() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_SCHANNEL_ENC_KEY 7
     * }
     */
    public static int ALG_SID_SCHANNEL_ENC_KEY() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_ECMQV 1
     * }
     */
    public static int ALG_SID_ECMQV() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define ALG_SID_EXAMPLE 80
     * }
     */
    public static int ALG_SID_EXAMPLE() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * #define CRYPT_NEWKEYSET 8
     * }
     */
    public static int CRYPT_NEWKEYSET() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DELETEKEYSET 16
     * }
     */
    public static int CRYPT_DELETEKEYSET() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MACHINE_KEYSET 32
     * }
     */
    public static int CRYPT_MACHINE_KEYSET() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SILENT 64
     * }
     */
    public static int CRYPT_SILENT() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DEFAULT_CONTAINER_OPTIONAL 128
     * }
     */
    public static int CRYPT_DEFAULT_CONTAINER_OPTIONAL() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define CRYPT_EXPORTABLE 1
     * }
     */
    public static int CRYPT_EXPORTABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_USER_PROTECTED 2
     * }
     */
    public static int CRYPT_USER_PROTECTED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_CREATE_SALT 4
     * }
     */
    public static int CRYPT_CREATE_SALT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_UPDATE_KEY 8
     * }
     */
    public static int CRYPT_UPDATE_KEY() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_NO_SALT 16
     * }
     */
    public static int CRYPT_NO_SALT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define CRYPT_PREGEN 64
     * }
     */
    public static int CRYPT_PREGEN() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define CRYPT_RECIPIENT 16
     * }
     */
    public static int CRYPT_RECIPIENT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define CRYPT_INITIATOR 64
     * }
     */
    public static int CRYPT_INITIATOR() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define CRYPT_ONLINE 128
     * }
     */
    public static int CRYPT_ONLINE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SF 256
     * }
     */
    public static int CRYPT_SF() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define CRYPT_CREATE_IV 512
     * }
     */
    public static int CRYPT_CREATE_IV() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define CRYPT_KEK 1024
     * }
     */
    public static int CRYPT_KEK() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DATA_KEY 2048
     * }
     */
    public static int CRYPT_DATA_KEY() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define CRYPT_VOLATILE 4096
     * }
     */
    public static int CRYPT_VOLATILE() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SGCKEY 8192
     * }
     */
    public static int CRYPT_SGCKEY() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define CRYPT_USER_PROTECTED_STRONG 1048576
     * }
     */
    public static int CRYPT_USER_PROTECTED_STRONG() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define CRYPT_ARCHIVABLE 16384
     * }
     */
    public static int CRYPT_ARCHIVABLE() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FORCE_KEY_PROTECTION_HIGH 32768
     * }
     */
    public static int CRYPT_FORCE_KEY_PROTECTION_HIGH() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define RSA1024BIT_KEY 67108864
     * }
     */
    public static int RSA1024BIT_KEY() {
        return (int)67108864L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SERVER 1024
     * }
     */
    public static int CRYPT_SERVER() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define CRYPT_Y_ONLY 1
     * }
     */
    public static int CRYPT_Y_ONLY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SSL2_FALLBACK 2
     * }
     */
    public static int CRYPT_SSL2_FALLBACK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DESTROYKEY 4
     * }
     */
    public static int CRYPT_DESTROYKEY() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_OAEP 64
     * }
     */
    public static int CRYPT_OAEP() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define CRYPT_BLOB_VER3 128
     * }
     */
    public static int CRYPT_BLOB_VER3() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IPSEC_HMAC_KEY 256
     * }
     */
    public static int CRYPT_IPSEC_HMAC_KEY() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DECRYPT_RSA_NO_PADDING_CHECK 32
     * }
     */
    public static int CRYPT_DECRYPT_RSA_NO_PADDING_CHECK() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SECRETDIGEST 1
     * }
     */
    public static int CRYPT_SECRETDIGEST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_OWF_REPL_LM_HASH 1
     * }
     */
    public static int CRYPT_OWF_REPL_LM_HASH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_LITTLE_ENDIAN 1
     * }
     */
    public static int CRYPT_LITTLE_ENDIAN() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_NOHASHOID 1
     * }
     */
    public static int CRYPT_NOHASHOID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_TYPE2_FORMAT 2
     * }
     */
    public static int CRYPT_TYPE2_FORMAT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_X931_FORMAT 4
     * }
     */
    public static int CRYPT_X931_FORMAT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MACHINE_DEFAULT 1
     * }
     */
    public static int CRYPT_MACHINE_DEFAULT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_USER_DEFAULT 2
     * }
     */
    public static int CRYPT_USER_DEFAULT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DELETE_DEFAULT 4
     * }
     */
    public static int CRYPT_DELETE_DEFAULT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define SIMPLEBLOB 1
     * }
     */
    public static int SIMPLEBLOB() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PUBLICKEYBLOB 6
     * }
     */
    public static int PUBLICKEYBLOB() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define PRIVATEKEYBLOB 7
     * }
     */
    public static int PRIVATEKEYBLOB() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define PLAINTEXTKEYBLOB 8
     * }
     */
    public static int PLAINTEXTKEYBLOB() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define OPAQUEKEYBLOB 9
     * }
     */
    public static int OPAQUEKEYBLOB() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define PUBLICKEYBLOBEX 10
     * }
     */
    public static int PUBLICKEYBLOBEX() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define SYMMETRICWRAPKEYBLOB 11
     * }
     */
    public static int SYMMETRICWRAPKEYBLOB() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define KEYSTATEBLOB 12
     * }
     */
    public static int KEYSTATEBLOB() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define AT_KEYEXCHANGE 1
     * }
     */
    public static int AT_KEYEXCHANGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define AT_SIGNATURE 2
     * }
     */
    public static int AT_SIGNATURE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_USERDATA 1
     * }
     */
    public static int CRYPT_USERDATA() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define KP_IV 1
     * }
     */
    public static int KP_IV() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define KP_SALT 2
     * }
     */
    public static int KP_SALT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define KP_PADDING 3
     * }
     */
    public static int KP_PADDING() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define KP_MODE 4
     * }
     */
    public static int KP_MODE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define KP_MODE_BITS 5
     * }
     */
    public static int KP_MODE_BITS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define KP_PERMISSIONS 6
     * }
     */
    public static int KP_PERMISSIONS() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define KP_ALGID 7
     * }
     */
    public static int KP_ALGID() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define KP_BLOCKLEN 8
     * }
     */
    public static int KP_BLOCKLEN() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define KP_KEYLEN 9
     * }
     */
    public static int KP_KEYLEN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define KP_SALT_EX 10
     * }
     */
    public static int KP_SALT_EX() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define KP_P 11
     * }
     */
    public static int KP_P() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define KP_G 12
     * }
     */
    public static int KP_G() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define KP_Q 13
     * }
     */
    public static int KP_Q() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define KP_X 14
     * }
     */
    public static int KP_X() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define KP_Y 15
     * }
     */
    public static int KP_Y() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define KP_RA 16
     * }
     */
    public static int KP_RA() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define KP_RB 17
     * }
     */
    public static int KP_RB() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define KP_INFO 18
     * }
     */
    public static int KP_INFO() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define KP_EFFECTIVE_KEYLEN 19
     * }
     */
    public static int KP_EFFECTIVE_KEYLEN() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define KP_SCHANNEL_ALG 20
     * }
     */
    public static int KP_SCHANNEL_ALG() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define KP_CLIENT_RANDOM 21
     * }
     */
    public static int KP_CLIENT_RANDOM() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define KP_SERVER_RANDOM 22
     * }
     */
    public static int KP_SERVER_RANDOM() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define KP_RP 23
     * }
     */
    public static int KP_RP() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define KP_PRECOMP_MD5 24
     * }
     */
    public static int KP_PRECOMP_MD5() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define KP_PRECOMP_SHA 25
     * }
     */
    public static int KP_PRECOMP_SHA() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define KP_CERTIFICATE 26
     * }
     */
    public static int KP_CERTIFICATE() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * #define KP_CLEAR_KEY 27
     * }
     */
    public static int KP_CLEAR_KEY() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * #define KP_PUB_EX_LEN 28
     * }
     */
    public static int KP_PUB_EX_LEN() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * #define KP_PUB_EX_VAL 29
     * }
     */
    public static int KP_PUB_EX_VAL() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * #define KP_KEYVAL 30
     * }
     */
    public static int KP_KEYVAL() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * #define KP_ADMIN_PIN 31
     * }
     */
    public static int KP_ADMIN_PIN() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * #define KP_KEYEXCHANGE_PIN 32
     * }
     */
    public static int KP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define KP_SIGNATURE_PIN 33
     * }
     */
    public static int KP_SIGNATURE_PIN() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define KP_PREHASH 34
     * }
     */
    public static int KP_PREHASH() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * #define KP_ROUNDS 35
     * }
     */
    public static int KP_ROUNDS() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define KP_OAEP_PARAMS 36
     * }
     */
    public static int KP_OAEP_PARAMS() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * #define KP_CMS_KEY_INFO 37
     * }
     */
    public static int KP_CMS_KEY_INFO() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define KP_CMS_DH_KEY_INFO 38
     * }
     */
    public static int KP_CMS_DH_KEY_INFO() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define KP_PUB_PARAMS 39
     * }
     */
    public static int KP_PUB_PARAMS() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * #define KP_VERIFY_PARAMS 40
     * }
     */
    public static int KP_VERIFY_PARAMS() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define KP_HIGHEST_VERSION 41
     * }
     */
    public static int KP_HIGHEST_VERSION() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * #define KP_GET_USE_COUNT 42
     * }
     */
    public static int KP_GET_USE_COUNT() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * #define KP_PIN_ID 43
     * }
     */
    public static int KP_PIN_ID() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * #define KP_PIN_INFO 44
     * }
     */
    public static int KP_PIN_INFO() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * #define PKCS5_PADDING 1
     * }
     */
    public static int PKCS5_PADDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define RANDOM_PADDING 2
     * }
     */
    public static int RANDOM_PADDING() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ZERO_PADDING 3
     * }
     */
    public static int ZERO_PADDING() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CBC 1
     * }
     */
    public static int CRYPT_MODE_CBC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_ECB 2
     * }
     */
    public static int CRYPT_MODE_ECB() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_OFB 3
     * }
     */
    public static int CRYPT_MODE_OFB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CFB 4
     * }
     */
    public static int CRYPT_MODE_CFB() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MODE_CTS 5
     * }
     */
    public static int CRYPT_MODE_CTS() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define CRYPT_ENCRYPT 1
     * }
     */
    public static int CRYPT_ENCRYPT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_DECRYPT 2
     * }
     */
    public static int CRYPT_DECRYPT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_EXPORT 4
     * }
     */
    public static int CRYPT_EXPORT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_READ 8
     * }
     */
    public static int CRYPT_READ() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_WRITE 16
     * }
     */
    public static int CRYPT_WRITE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define CRYPT_MAC 32
     * }
     */
    public static int CRYPT_MAC() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define CRYPT_EXPORT_KEY 64
     * }
     */
    public static int CRYPT_EXPORT_KEY() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPORT_KEY 128
     * }
     */
    public static int CRYPT_IMPORT_KEY() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define CRYPT_ARCHIVE 256
     * }
     */
    public static int CRYPT_ARCHIVE() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define HP_ALGID 1
     * }
     */
    public static int HP_ALGID() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define HP_HASHVAL 2
     * }
     */
    public static int HP_HASHVAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define HP_HASHSIZE 4
     * }
     */
    public static int HP_HASHSIZE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define HP_HMAC_INFO 5
     * }
     */
    public static int HP_HMAC_INFO() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define HP_TLS1PRF_LABEL 6
     * }
     */
    public static int HP_TLS1PRF_LABEL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define HP_TLS1PRF_SEED 7
     * }
     */
    public static int HP_TLS1PRF_SEED() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMALGS 1
     * }
     */
    public static int PP_ENUMALGS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMCONTAINERS 2
     * }
     */
    public static int PP_ENUMCONTAINERS() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define PP_IMPTYPE 3
     * }
     */
    public static int PP_IMPTYPE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define PP_NAME 4
     * }
     */
    public static int PP_NAME() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PP_VERSION 5
     * }
     */
    public static int PP_VERSION() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define PP_CONTAINER 6
     * }
     */
    public static int PP_CONTAINER() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define PP_CHANGE_PASSWORD 7
     * }
     */
    public static int PP_CHANGE_PASSWORD() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define PP_KEYSET_SEC_DESCR 8
     * }
     */
    public static int PP_KEYSET_SEC_DESCR() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define PP_CERTCHAIN 9
     * }
     */
    public static int PP_CERTCHAIN() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define PP_KEY_TYPE_SUBTYPE 10
     * }
     */
    public static int PP_KEY_TYPE_SUBTYPE() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define PP_PROVTYPE 16
     * }
     */
    public static int PP_PROVTYPE() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define PP_KEYSTORAGE 17
     * }
     */
    public static int PP_KEYSTORAGE() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define PP_APPLI_CERT 18
     * }
     */
    public static int PP_APPLI_CERT() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define PP_SYM_KEYSIZE 19
     * }
     */
    public static int PP_SYM_KEYSIZE() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define PP_SESSION_KEYSIZE 20
     * }
     */
    public static int PP_SESSION_KEYSIZE() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define PP_UI_PROMPT 21
     * }
     */
    public static int PP_UI_PROMPT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMALGS_EX 22
     * }
     */
    public static int PP_ENUMALGS_EX() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMMANDROOTS 25
     * }
     */
    public static int PP_ENUMMANDROOTS() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMELECTROOTS 26
     * }
     */
    public static int PP_ENUMELECTROOTS() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * #define PP_KEYSET_TYPE 27
     * }
     */
    public static int PP_KEYSET_TYPE() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * #define PP_ADMIN_PIN 31
     * }
     */
    public static int PP_ADMIN_PIN() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * #define PP_KEYEXCHANGE_PIN 32
     * }
     */
    public static int PP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define PP_SIGNATURE_PIN 33
     * }
     */
    public static int PP_SIGNATURE_PIN() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define PP_SIG_KEYSIZE_INC 34
     * }
     */
    public static int PP_SIG_KEYSIZE_INC() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * #define PP_KEYX_KEYSIZE_INC 35
     * }
     */
    public static int PP_KEYX_KEYSIZE_INC() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * #define PP_UNIQUE_CONTAINER 36
     * }
     */
    public static int PP_UNIQUE_CONTAINER() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * #define PP_SGC_INFO 37
     * }
     */
    public static int PP_SGC_INFO() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * #define PP_USE_HARDWARE_RNG 38
     * }
     */
    public static int PP_USE_HARDWARE_RNG() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * #define PP_KEYSPEC 39
     * }
     */
    public static int PP_KEYSPEC() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * #define PP_ENUMEX_SIGNING_PROT 40
     * }
     */
    public static int PP_ENUMEX_SIGNING_PROT() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * #define PP_CRYPT_COUNT_KEY_USE 41
     * }
     */
    public static int PP_CRYPT_COUNT_KEY_USE() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * #define PP_USER_CERTSTORE 42
     * }
     */
    public static int PP_USER_CERTSTORE() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * #define PP_SMARTCARD_READER 43
     * }
     */
    public static int PP_SMARTCARD_READER() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * #define PP_SMARTCARD_GUID 45
     * }
     */
    public static int PP_SMARTCARD_GUID() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * #define PP_ROOT_CERTSTORE 46
     * }
     */
    public static int PP_ROOT_CERTSTORE() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * #define PP_SMARTCARD_READER_ICON 47
     * }
     */
    public static int PP_SMARTCARD_READER_ICON() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FIRST 1
     * }
     */
    public static int CRYPT_FIRST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_NEXT 2
     * }
     */
    public static int CRYPT_NEXT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SGC_ENUM 4
     * }
     */
    public static int CRYPT_SGC_ENUM() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPL_HARDWARE 1
     * }
     */
    public static int CRYPT_IMPL_HARDWARE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPL_SOFTWARE 2
     * }
     */
    public static int CRYPT_IMPL_SOFTWARE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPL_MIXED 3
     * }
     */
    public static int CRYPT_IMPL_MIXED() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPL_UNKNOWN 4
     * }
     */
    public static int CRYPT_IMPL_UNKNOWN() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_IMPL_REMOVABLE 8
     * }
     */
    public static int CRYPT_IMPL_REMOVABLE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SEC_DESCR 1
     * }
     */
    public static int CRYPT_SEC_DESCR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_PSTORE 2
     * }
     */
    public static int CRYPT_PSTORE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_UI_PROMPT 4
     * }
     */
    public static int CRYPT_UI_PROMPT() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_PCT1 1
     * }
     */
    public static int CRYPT_FLAG_PCT1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_SSL2 2
     * }
     */
    public static int CRYPT_FLAG_SSL2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_SSL3 4
     * }
     */
    public static int CRYPT_FLAG_SSL3() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_TLS1 8
     * }
     */
    public static int CRYPT_FLAG_TLS1() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_IPSEC 16
     * }
     */
    public static int CRYPT_FLAG_IPSEC() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FLAG_SIGNING 32
     * }
     */
    public static int CRYPT_FLAG_SIGNING() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define CRYPT_SGC 1
     * }
     */
    public static int CRYPT_SGC() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define CRYPT_FASTSGC 2
     * }
     */
    public static int CRYPT_FASTSGC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define PP_CLIENT_HWND 1
     * }
     */
    public static int PP_CLIENT_HWND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PP_CONTEXT_INFO 11
     * }
     */
    public static int PP_CONTEXT_INFO() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define PP_KEYEXCHANGE_KEYSIZE 12
     * }
     */
    public static int PP_KEYEXCHANGE_KEYSIZE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define PP_SIGNATURE_KEYSIZE 13
     * }
     */
    public static int PP_SIGNATURE_KEYSIZE() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define PP_KEYEXCHANGE_ALG 14
     * }
     */
    public static int PP_KEYEXCHANGE_ALG() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define PP_SIGNATURE_ALG 15
     * }
     */
    public static int PP_SIGNATURE_ALG() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define PP_DELETEKEY 24
     * }
     */
    public static int PP_DELETEKEY() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define PP_PIN_PROMPT_STRING 44
     * }
     */
    public static int PP_PIN_PROMPT_STRING() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * #define PP_SECURE_KEYEXCHANGE_PIN 47
     * }
     */
    public static int PP_SECURE_KEYEXCHANGE_PIN() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * #define PP_SECURE_SIGNATURE_PIN 48
     * }
     */
    public static int PP_SECURE_SIGNATURE_PIN() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * #define PP_DISMISS_PIN_UI_SEC 49
     * }
     */
    public static int PP_DISMISS_PIN_UI_SEC() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * #define PROV_RSA_FULL 1
     * }
     */
    public static int PROV_RSA_FULL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define PROV_RSA_SIG 2
     * }
     */
    public static int PROV_RSA_SIG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define PROV_DSS 3
     * }
     */
    public static int PROV_DSS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define PROV_FORTEZZA 4
     * }
     */
    public static int PROV_FORTEZZA() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define PROV_MS_EXCHANGE 5
     * }
     */
    public static int PROV_MS_EXCHANGE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define PROV_SSL 6
     * }
     */
    public static int PROV_SSL() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define PROV_RSA_SCHANNEL 12
     * }
     */
    public static int PROV_RSA_SCHANNEL() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define PROV_DSS_DH 13
     * }
     */
    public static int PROV_DSS_DH() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define PROV_EC_ECDSA_SIG 14
     * }
     */
    public static int PROV_EC_ECDSA_SIG() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define PROV_EC_ECNRA_SIG 15
     * }
     */
    public static int PROV_EC_ECNRA_SIG() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define PROV_EC_ECDSA_FULL 16
     * }
     */
    public static int PROV_EC_ECDSA_FULL() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define PROV_EC_ECNRA_FULL 17
     * }
     */
    public static int PROV_EC_ECNRA_FULL() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define PROV_DH_SCHANNEL 18
     * }
     */
    public static int PROV_DH_SCHANNEL() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define PROV_SPYRUS_LYNKS 20
     * }
     */
    public static int PROV_SPYRUS_LYNKS() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define PROV_RNG 21
     * }
     */
    public static int PROV_RNG() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define PROV_INTEL_SEC 22
     * }
     */
    public static int PROV_INTEL_SEC() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * #define PROV_REPLACE_OWF 23
     * }
     */
    public static int PROV_REPLACE_OWF() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define PROV_RSA_AES 24
     * }
     */
    public static int PROV_RSA_AES() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * #define MAXUIDLEN 64
     * }
     */
    public static int MAXUIDLEN() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT 20
     * }
     */
    public static int cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT 86400
     * }
     */
    public static int cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT() {
        return (int)86400L;
    }
    /**
     * {@snippet :
     * #define CUR_BLOB_VERSION 2
     * }
     */
    public static int CUR_BLOB_VERSION() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define SCHANNEL_MAC_KEY 0
     * }
     */
    public static int SCHANNEL_MAC_KEY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define SCHANNEL_ENC_KEY 1
     * }
     */
    public static int SCHANNEL_ENC_KEY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define INTERNATIONAL_USAGE 1
     * }
     */
    public static int INTERNATIONAL_USAGE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_OBJECT_ALIGNMENT 16
     * }
     */
    public static int BCRYPT_OBJECT_ALIGNMENT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define KDF_HASH_ALGORITHM 0
     * }
     */
    public static int KDF_HASH_ALGORITHM() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define KDF_SECRET_PREPEND 1
     * }
     */
    public static int KDF_SECRET_PREPEND() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define KDF_SECRET_APPEND 2
     * }
     */
    public static int KDF_SECRET_APPEND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define KDF_HMAC_KEY 3
     * }
     */
    public static int KDF_HMAC_KEY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define KDF_TLS_PRF_LABEL 4
     * }
     */
    public static int KDF_TLS_PRF_LABEL() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define KDF_TLS_PRF_SEED 5
     * }
     */
    public static int KDF_TLS_PRF_SEED() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define KDF_SECRET_HANDLE 6
     * }
     */
    public static int KDF_SECRET_HANDLE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define KDF_TLS_PRF_PROTOCOL 7
     * }
     */
    public static int KDF_TLS_PRF_PROTOCOL() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define KDF_ALGORITHMID 8
     * }
     */
    public static int KDF_ALGORITHMID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define KDF_PARTYUINFO 9
     * }
     */
    public static int KDF_PARTYUINFO() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define KDF_PARTYVINFO 10
     * }
     */
    public static int KDF_PARTYVINFO() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * #define KDF_SUPPPUBINFO 11
     * }
     */
    public static int KDF_SUPPPUBINFO() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define KDF_SUPPPRIVINFO 12
     * }
     */
    public static int KDF_SUPPPRIVINFO() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define KDF_LABEL 13
     * }
     */
    public static int KDF_LABEL() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * #define KDF_CONTEXT 14
     * }
     */
    public static int KDF_CONTEXT() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * #define KDF_SALT 15
     * }
     */
    public static int KDF_SALT() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * #define KDF_ITERATION_COUNT 16
     * }
     */
    public static int KDF_ITERATION_COUNT() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define KDF_GENERIC_PARAMETER 17
     * }
     */
    public static int KDF_GENERIC_PARAMETER() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define KDF_KEYBITLENGTH 18
     * }
     */
    public static int KDF_KEYBITLENGTH() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * #define KDF_HKDF_SALT 19
     * }
     */
    public static int KDF_HKDF_SALT() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * #define KDF_HKDF_INFO 20
     * }
     */
    public static int KDF_HKDF_INFO() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define KDF_USE_SECRET_AS_HMAC_KEY_FLAG 1
     * }
     */
    public static int KDF_USE_SECRET_AS_HMAC_KEY_FLAG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION 1
     * }
     */
    public static int BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG 1
     * }
     */
    public static int BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG 2
     * }
     */
    public static int BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SUPPORTED_PAD_ROUTER 1
     * }
     */
    public static int BCRYPT_SUPPORTED_PAD_ROUTER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SUPPORTED_PAD_PKCS1_ENC 2
     * }
     */
    public static int BCRYPT_SUPPORTED_PAD_PKCS1_ENC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SUPPORTED_PAD_PKCS1_SIG 4
     * }
     */
    public static int BCRYPT_SUPPORTED_PAD_PKCS1_SIG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SUPPORTED_PAD_OAEP 8
     * }
     */
    public static int BCRYPT_SUPPORTED_PAD_OAEP() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SUPPORTED_PAD_PSS 16
     * }
     */
    public static int BCRYPT_SUPPORTED_PAD_PSS() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PROV_DISPATCH 1
     * }
     */
    public static int BCRYPT_PROV_DISPATCH() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_BLOCK_PADDING 1
     * }
     */
    public static int BCRYPT_BLOCK_PADDING() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_GENERATE_IV 32
     * }
     */
    public static int BCRYPT_GENERATE_IV() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PAD_NONE 1
     * }
     */
    public static int BCRYPT_PAD_NONE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PAD_PKCS1 2
     * }
     */
    public static int BCRYPT_PAD_PKCS1() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PAD_OAEP 4
     * }
     */
    public static int BCRYPT_PAD_OAEP() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PAD_PSS 8
     * }
     */
    public static int BCRYPT_PAD_PSS() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID 16
     * }
     */
    public static int BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define BCRYPTBUFFER_VERSION 0
     * }
     */
    public static int BCRYPTBUFFER_VERSION() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_RSAPUBLIC_MAGIC 826364754
     * }
     */
    public static int BCRYPT_RSAPUBLIC_MAGIC() {
        return (int)826364754L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_RSAPRIVATE_MAGIC 843141970
     * }
     */
    public static int BCRYPT_RSAPRIVATE_MAGIC() {
        return (int)843141970L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_RSAFULLPRIVATE_MAGIC 859919186
     * }
     */
    public static int BCRYPT_RSAFULLPRIVATE_MAGIC() {
        return (int)859919186L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PUBLIC_P256_MAGIC 827016005
     * }
     */
    public static int BCRYPT_ECDH_PUBLIC_P256_MAGIC() {
        return (int)827016005L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PRIVATE_P256_MAGIC 843793221
     * }
     */
    public static int BCRYPT_ECDH_PRIVATE_P256_MAGIC() {
        return (int)843793221L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PUBLIC_P384_MAGIC 860570437
     * }
     */
    public static int BCRYPT_ECDH_PUBLIC_P384_MAGIC() {
        return (int)860570437L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PRIVATE_P384_MAGIC 877347653
     * }
     */
    public static int BCRYPT_ECDH_PRIVATE_P384_MAGIC() {
        return (int)877347653L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PUBLIC_P521_MAGIC 894124869
     * }
     */
    public static int BCRYPT_ECDH_PUBLIC_P521_MAGIC() {
        return (int)894124869L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PRIVATE_P521_MAGIC 910902085
     * }
     */
    public static int BCRYPT_ECDH_PRIVATE_P521_MAGIC() {
        return (int)910902085L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC 1347109701
     * }
     */
    public static int BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC() {
        return (int)1347109701L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC 1447772997
     * }
     */
    public static int BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC() {
        return (int)1447772997L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PUBLIC_P256_MAGIC 827540293
     * }
     */
    public static int BCRYPT_ECDSA_PUBLIC_P256_MAGIC() {
        return (int)827540293L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PRIVATE_P256_MAGIC 844317509
     * }
     */
    public static int BCRYPT_ECDSA_PRIVATE_P256_MAGIC() {
        return (int)844317509L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PUBLIC_P384_MAGIC 861094725
     * }
     */
    public static int BCRYPT_ECDSA_PUBLIC_P384_MAGIC() {
        return (int)861094725L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PRIVATE_P384_MAGIC 877871941
     * }
     */
    public static int BCRYPT_ECDSA_PRIVATE_P384_MAGIC() {
        return (int)877871941L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PUBLIC_P521_MAGIC 894649157
     * }
     */
    public static int BCRYPT_ECDSA_PUBLIC_P521_MAGIC() {
        return (int)894649157L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PRIVATE_P521_MAGIC 911426373
     * }
     */
    public static int BCRYPT_ECDSA_PRIVATE_P521_MAGIC() {
        return (int)911426373L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC 1346650949
     * }
     */
    public static int BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC() {
        return (int)1346650949L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC 1447314245
     * }
     */
    public static int BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC() {
        return (int)1447314245L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECC_FULLKEY_BLOB_V1 1
     * }
     */
    public static int BCRYPT_ECC_FULLKEY_BLOB_V1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DH_PUBLIC_MAGIC 1112557636
     * }
     */
    public static int BCRYPT_DH_PUBLIC_MAGIC() {
        return (int)1112557636L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DH_PRIVATE_MAGIC 1448101956
     * }
     */
    public static int BCRYPT_DH_PRIVATE_MAGIC() {
        return (int)1448101956L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DH_PARAMETERS_MAGIC 1297107012
     * }
     */
    public static int BCRYPT_DH_PARAMETERS_MAGIC() {
        return (int)1297107012L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PUBLIC_MAGIC 1112560452
     * }
     */
    public static int BCRYPT_DSA_PUBLIC_MAGIC() {
        return (int)1112560452L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PRIVATE_MAGIC 1448104772
     * }
     */
    public static int BCRYPT_DSA_PRIVATE_MAGIC() {
        return (int)1448104772L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PUBLIC_MAGIC_V2 843206724
     * }
     */
    public static int BCRYPT_DSA_PUBLIC_MAGIC_V2() {
        return (int)843206724L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PRIVATE_MAGIC_V2 844517444
     * }
     */
    public static int BCRYPT_DSA_PRIVATE_MAGIC_V2() {
        return (int)844517444L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_KEY_DATA_BLOB_MAGIC 1296188491
     * }
     */
    public static int BCRYPT_KEY_DATA_BLOB_MAGIC() {
        return (int)1296188491L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_KEY_DATA_BLOB_VERSION1 1
     * }
     */
    public static int BCRYPT_KEY_DATA_BLOB_VERSION1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PARAMETERS_MAGIC 1297109828
     * }
     */
    public static int BCRYPT_DSA_PARAMETERS_MAGIC() {
        return (int)1297109828L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_DSA_PARAMETERS_MAGIC_V2 843927620
     * }
     */
    public static int BCRYPT_DSA_PARAMETERS_MAGIC_V2() {
        return (int)843927620L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ECC_PARAMETERS_MAGIC 1346585413
     * }
     */
    public static int BCRYPT_ECC_PARAMETERS_MAGIC() {
        return (int)1346585413L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_CIPHER_INTERFACE 1
     * }
     */
    public static int BCRYPT_CIPHER_INTERFACE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_HASH_INTERFACE 2
     * }
     */
    public static int BCRYPT_HASH_INTERFACE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE 3
     * }
     */
    public static int BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SECRET_AGREEMENT_INTERFACE 4
     * }
     */
    public static int BCRYPT_SECRET_AGREEMENT_INTERFACE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_SIGNATURE_INTERFACE 5
     * }
     */
    public static int BCRYPT_SIGNATURE_INTERFACE() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_RNG_INTERFACE 6
     * }
     */
    public static int BCRYPT_RNG_INTERFACE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_KEY_DERIVATION_INTERFACE 7
     * }
     */
    public static int BCRYPT_KEY_DERIVATION_INTERFACE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ALG_HANDLE_HMAC_FLAG 8
     * }
     */
    public static int BCRYPT_ALG_HANDLE_HMAC_FLAG() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_HASH_REUSABLE_FLAG 32
     * }
     */
    public static int BCRYPT_HASH_REUSABLE_FLAG() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_CAPI_AES_FLAG 16
     * }
     */
    public static int BCRYPT_CAPI_AES_FLAG() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_MULTI_FLAG 64
     * }
     */
    public static int BCRYPT_MULTI_FLAG() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG 4
     * }
     */
    public static int BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_BUFFERS_LOCKED_FLAG 64
     * }
     */
    public static int BCRYPT_BUFFERS_LOCKED_FLAG() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_EXTENDED_KEYSIZE 128
     * }
     */
    public static int BCRYPT_EXTENDED_KEYSIZE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS 256
     * }
     */
    public static int BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_CIPHER_OPERATION 1
     * }
     */
    public static int BCRYPT_CIPHER_OPERATION() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define BCRYPT_HASH_OPERATION 2
     * }
     */
    public static int BCRYPT_HASH_OPERATION() {
        return (int)2L;
    }
}


