// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class Windows_h_20 extends Windows_h_19 {

    public static MethodHandle CryptMemRealloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.const$1,"CryptMemRealloc");
    }
    /**
     * {@snippet :
     * LPVOID CryptMemRealloc(LPVOID pv, ULONG cbSize);
     * }
     */
    public static MemorySegment CryptMemRealloc(MemorySegment pv, int cbSize) {
        var mh$ = CryptMemRealloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pv, cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptMemFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.const$2,"CryptMemFree");
    }
    /**
     * {@snippet :
     * void CryptMemFree(LPVOID pv);
     * }
     */
    public static void CryptMemFree(MemorySegment pv) {
        var mh$ = CryptMemFree$MH();
        try {
            mh$.invokeExact(pv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* HCRYPTASYNC;
     * }
     */
    public static final AddressLayout HCRYPTASYNC = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void** PHCRYPTASYNC;
     * }
     */
    public static final AddressLayout PHCRYPTASYNC = RuntimeHelper.POINTER;
    public static MethodHandle CryptCreateAsyncHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.const$4,"CryptCreateAsyncHandle");
    }
    /**
     * {@snippet :
     * BOOL CryptCreateAsyncHandle(DWORD dwFlags, PHCRYPTASYNC phAsync);
     * }
     */
    public static int CryptCreateAsyncHandle(int dwFlags, MemorySegment phAsync) {
        var mh$ = CryptCreateAsyncHandle$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, phAsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptSetAsyncParam$MH() {
        return RuntimeHelper.requireNonNull(constants$2188.const$5,"CryptSetAsyncParam");
    }
    /**
     * {@snippet :
     * BOOL CryptSetAsyncParam(HCRYPTASYNC hAsync, LPSTR pszParamOid, LPVOID pvParam, PFN_CRYPT_ASYNC_PARAM_FREE_FUNC pfnFree);
     * }
     */
    public static int CryptSetAsyncParam(MemorySegment hAsync, MemorySegment pszParamOid, MemorySegment pvParam, MemorySegment pfnFree) {
        var mh$ = CryptSetAsyncParam$MH();
        try {
            return (int)mh$.invokeExact(hAsync, pszParamOid, pvParam, pfnFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptGetAsyncParam$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.const$0,"CryptGetAsyncParam");
    }
    /**
     * {@snippet :
     * BOOL CryptGetAsyncParam(HCRYPTASYNC hAsync, LPSTR pszParamOid, LPVOID* ppvParam, PFN_CRYPT_ASYNC_PARAM_FREE_FUNC* ppfnFree);
     * }
     */
    public static int CryptGetAsyncParam(MemorySegment hAsync, MemorySegment pszParamOid, MemorySegment ppvParam, MemorySegment ppfnFree) {
        var mh$ = CryptGetAsyncParam$MH();
        try {
            return (int)mh$.invokeExact(hAsync, pszParamOid, ppvParam, ppfnFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptCloseAsyncHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2189.const$1,"CryptCloseAsyncHandle");
    }
    /**
     * {@snippet :
     * BOOL CryptCloseAsyncHandle(HCRYPTASYNC hAsync);
     * }
     */
    public static int CryptCloseAsyncHandle(MemorySegment hAsync) {
        var mh$ = CryptCloseAsyncHandle$MH();
        try {
            return (int)mh$.invokeExact(hAsync);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRYPT_BLOB_ARRAY* PCRYPT_BLOB_ARRAY;
     * }
     */
    public static final AddressLayout PCRYPT_BLOB_ARRAY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_CREDENTIALS* PCRYPT_CREDENTIALS;
     * }
     */
    public static final AddressLayout PCRYPT_CREDENTIALS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_PASSWORD_CREDENTIALSA* PCRYPT_PASSWORD_CREDENTIALSA;
     * }
     */
    public static final AddressLayout PCRYPT_PASSWORD_CREDENTIALSA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_PASSWORD_CREDENTIALSW* PCRYPT_PASSWORD_CREDENTIALSW;
     * }
     */
    public static final AddressLayout PCRYPT_PASSWORD_CREDENTIALSW = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_PASSWORD_CREDENTIALSA* PCRYPT_PASSWORD_CREDENTIALS;
     * }
     */
    public static final AddressLayout PCRYPT_PASSWORD_CREDENTIALS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO* PCRYPTNET_URL_CACHE_PRE_FETCH_INFO;
     * }
     */
    public static final AddressLayout PCRYPTNET_URL_CACHE_PRE_FETCH_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO* PCRYPTNET_URL_CACHE_FLUSH_INFO;
     * }
     */
    public static final AddressLayout PCRYPTNET_URL_CACHE_FLUSH_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO* PCRYPTNET_URL_CACHE_RESPONSE_INFO;
     * }
     */
    public static final AddressLayout PCRYPTNET_URL_CACHE_RESPONSE_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_RETRIEVE_AUX_INFO* PCRYPT_RETRIEVE_AUX_INFO;
     * }
     */
    public static final AddressLayout PCRYPT_RETRIEVE_AUX_INFO = RuntimeHelper.POINTER;
    public static MethodHandle CryptRetrieveObjectByUrlA$MH() {
        return RuntimeHelper.requireNonNull(constants$2196.const$5,"CryptRetrieveObjectByUrlA");
    }
    /**
     * {@snippet :
     * BOOL CryptRetrieveObjectByUrlA(LPCSTR pszUrl, LPCSTR pszObjectOid, DWORD dwRetrievalFlags, DWORD dwTimeout, LPVOID* ppvObject, HCRYPTASYNC hAsyncRetrieve, PCRYPT_CREDENTIALS pCredentials, LPVOID pvVerify, PCRYPT_RETRIEVE_AUX_INFO pAuxInfo);
     * }
     */
    public static int CryptRetrieveObjectByUrlA(MemorySegment pszUrl, MemorySegment pszObjectOid, int dwRetrievalFlags, int dwTimeout, MemorySegment ppvObject, MemorySegment hAsyncRetrieve, MemorySegment pCredentials, MemorySegment pvVerify, MemorySegment pAuxInfo) {
        var mh$ = CryptRetrieveObjectByUrlA$MH();
        try {
            return (int)mh$.invokeExact(pszUrl, pszObjectOid, dwRetrievalFlags, dwTimeout, ppvObject, hAsyncRetrieve, pCredentials, pvVerify, pAuxInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptRetrieveObjectByUrlW$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$0,"CryptRetrieveObjectByUrlW");
    }
    /**
     * {@snippet :
     * BOOL CryptRetrieveObjectByUrlW(LPCWSTR pszUrl, LPCSTR pszObjectOid, DWORD dwRetrievalFlags, DWORD dwTimeout, LPVOID* ppvObject, HCRYPTASYNC hAsyncRetrieve, PCRYPT_CREDENTIALS pCredentials, LPVOID pvVerify, PCRYPT_RETRIEVE_AUX_INFO pAuxInfo);
     * }
     */
    public static int CryptRetrieveObjectByUrlW(MemorySegment pszUrl, MemorySegment pszObjectOid, int dwRetrievalFlags, int dwTimeout, MemorySegment ppvObject, MemorySegment hAsyncRetrieve, MemorySegment pCredentials, MemorySegment pvVerify, MemorySegment pAuxInfo) {
        var mh$ = CryptRetrieveObjectByUrlW$MH();
        try {
            return (int)mh$.invokeExact(pszUrl, pszObjectOid, dwRetrievalFlags, dwTimeout, ppvObject, hAsyncRetrieve, pCredentials, pvVerify, pAuxInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptInstallCancelRetrieval$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$3,"CryptInstallCancelRetrieval");
    }
    /**
     * {@snippet :
     * BOOL CryptInstallCancelRetrieval(PFN_CRYPT_CANCEL_RETRIEVAL pfnCancel, void* pvArg, DWORD dwFlags, void* pvReserved);
     * }
     */
    public static int CryptInstallCancelRetrieval(MemorySegment pfnCancel, MemorySegment pvArg, int dwFlags, MemorySegment pvReserved) {
        var mh$ = CryptInstallCancelRetrieval$MH();
        try {
            return (int)mh$.invokeExact(pfnCancel, pvArg, dwFlags, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptUninstallCancelRetrieval$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$4,"CryptUninstallCancelRetrieval");
    }
    /**
     * {@snippet :
     * BOOL CryptUninstallCancelRetrieval(DWORD dwFlags, void* pvReserved);
     * }
     */
    public static int CryptUninstallCancelRetrieval(int dwFlags, MemorySegment pvReserved) {
        var mh$ = CryptUninstallCancelRetrieval$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptCancelAsyncRetrieval$MH() {
        return RuntimeHelper.requireNonNull(constants$2197.const$5,"CryptCancelAsyncRetrieval");
    }
    /**
     * {@snippet :
     * BOOL CryptCancelAsyncRetrieval(HCRYPTASYNC hAsyncRetrieval);
     * }
     */
    public static int CryptCancelAsyncRetrieval(MemorySegment hAsyncRetrieval) {
        var mh$ = CryptCancelAsyncRetrieval$MH();
        try {
            return (int)mh$.invokeExact(hAsyncRetrieval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION* PCRYPT_ASYNC_RETRIEVAL_COMPLETION;
     * }
     */
    public static final AddressLayout PCRYPT_ASYNC_RETRIEVAL_COMPLETION = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_URL_ARRAY* PCRYPT_URL_ARRAY;
     * }
     */
    public static final AddressLayout PCRYPT_URL_ARRAY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_URL_INFO* PCRYPT_URL_INFO;
     * }
     */
    public static final AddressLayout PCRYPT_URL_INFO = RuntimeHelper.POINTER;
    public static MethodHandle CryptGetObjectUrl$MH() {
        return RuntimeHelper.requireNonNull(constants$2200.const$3,"CryptGetObjectUrl");
    }
    /**
     * {@snippet :
     * BOOL CryptGetObjectUrl(LPCSTR pszUrlOid, LPVOID pvPara, DWORD dwFlags, PCRYPT_URL_ARRAY pUrlArray, DWORD* pcbUrlArray, PCRYPT_URL_INFO pUrlInfo, DWORD* pcbUrlInfo, LPVOID pvReserved);
     * }
     */
    public static int CryptGetObjectUrl(MemorySegment pszUrlOid, MemorySegment pvPara, int dwFlags, MemorySegment pUrlArray, MemorySegment pcbUrlArray, MemorySegment pUrlInfo, MemorySegment pcbUrlInfo, MemorySegment pvReserved) {
        var mh$ = CryptGetObjectUrl$MH();
        try {
            return (int)mh$.invokeExact(pszUrlOid, pvPara, dwFlags, pUrlArray, pcbUrlArray, pUrlInfo, pcbUrlInfo, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CERT_CRL_CONTEXT_PAIR* PCERT_CRL_CONTEXT_PAIR;
     * }
     */
    public static final AddressLayout PCERT_CRL_CONTEXT_PAIR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CRL_CONTEXT_PAIR* PCCERT_CRL_CONTEXT_PAIR;
     * }
     */
    public static final AddressLayout PCCERT_CRL_CONTEXT_PAIR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO* PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
     * }
     */
    public static final AddressLayout PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO = RuntimeHelper.POINTER;
    public static MethodHandle CryptGetTimeValidObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$4,"CryptGetTimeValidObject");
    }
    /**
     * {@snippet :
     * BOOL CryptGetTimeValidObject(LPCSTR pszTimeValidOid, LPVOID pvPara, PCCERT_CONTEXT pIssuer, LPFILETIME pftValidFor, DWORD dwFlags, DWORD dwTimeout, LPVOID* ppvObject, PCRYPT_CREDENTIALS pCredentials, PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO pExtraInfo);
     * }
     */
    public static int CryptGetTimeValidObject(MemorySegment pszTimeValidOid, MemorySegment pvPara, MemorySegment pIssuer, MemorySegment pftValidFor, int dwFlags, int dwTimeout, MemorySegment ppvObject, MemorySegment pCredentials, MemorySegment pExtraInfo) {
        var mh$ = CryptGetTimeValidObject$MH();
        try {
            return (int)mh$.invokeExact(pszTimeValidOid, pvPara, pIssuer, pftValidFor, dwFlags, dwTimeout, ppvObject, pCredentials, pExtraInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptFlushTimeValidObject$MH() {
        return RuntimeHelper.requireNonNull(constants$2202.const$5,"CryptFlushTimeValidObject");
    }
    /**
     * {@snippet :
     * BOOL CryptFlushTimeValidObject(LPCSTR pszFlushTimeValidOid, LPVOID pvPara, PCCERT_CONTEXT pIssuer, DWORD dwFlags, LPVOID pvReserved);
     * }
     */
    public static int CryptFlushTimeValidObject(MemorySegment pszFlushTimeValidOid, MemorySegment pvPara, MemorySegment pIssuer, int dwFlags, MemorySegment pvReserved) {
        var mh$ = CryptFlushTimeValidObject$MH();
        try {
            return (int)mh$.invokeExact(pszFlushTimeValidOid, pvPara, pIssuer, dwFlags, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertCreateSelfSignCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$1,"CertCreateSelfSignCertificate");
    }
    /**
     * {@snippet :
     * PCCERT_CONTEXT CertCreateSelfSignCertificate(HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hCryptProvOrNCryptKey, PCERT_NAME_BLOB pSubjectIssuerBlob, DWORD dwFlags, PCRYPT_KEY_PROV_INFO pKeyProvInfo, PCRYPT_ALGORITHM_IDENTIFIER pSignatureAlgorithm, PSYSTEMTIME pStartTime, PSYSTEMTIME pEndTime, PCERT_EXTENSIONS pExtensions);
     * }
     */
    public static MemorySegment CertCreateSelfSignCertificate(long hCryptProvOrNCryptKey, MemorySegment pSubjectIssuerBlob, int dwFlags, MemorySegment pKeyProvInfo, MemorySegment pSignatureAlgorithm, MemorySegment pStartTime, MemorySegment pEndTime, MemorySegment pExtensions) {
        var mh$ = CertCreateSelfSignCertificate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hCryptProvOrNCryptKey, pSubjectIssuerBlob, dwFlags, pKeyProvInfo, pSignatureAlgorithm, pStartTime, pEndTime, pExtensions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptGetKeyIdentifierProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$2,"CryptGetKeyIdentifierProperty");
    }
    /**
     * {@snippet :
     * BOOL CryptGetKeyIdentifierProperty(const CRYPT_HASH_BLOB* pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void* pvReserved, void* pvData, DWORD* pcbData);
     * }
     */
    public static int CryptGetKeyIdentifierProperty(MemorySegment pKeyIdentifier, int dwPropId, int dwFlags, MemorySegment pwszComputerName, MemorySegment pvReserved, MemorySegment pvData, MemorySegment pcbData) {
        var mh$ = CryptGetKeyIdentifierProperty$MH();
        try {
            return (int)mh$.invokeExact(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptSetKeyIdentifierProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$2203.const$3,"CryptSetKeyIdentifierProperty");
    }
    /**
     * {@snippet :
     * BOOL CryptSetKeyIdentifierProperty(const CRYPT_HASH_BLOB* pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void* pvReserved, void* pvData);
     * }
     */
    public static int CryptSetKeyIdentifierProperty(MemorySegment pKeyIdentifier, int dwPropId, int dwFlags, MemorySegment pwszComputerName, MemorySegment pvReserved, MemorySegment pvData) {
        var mh$ = CryptSetKeyIdentifierProperty$MH();
        try {
            return (int)mh$.invokeExact(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptEnumKeyIdentifierProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$1,"CryptEnumKeyIdentifierProperties");
    }
    /**
     * {@snippet :
     * BOOL CryptEnumKeyIdentifierProperties(const CRYPT_HASH_BLOB* pKeyIdentifier, DWORD dwPropId, DWORD dwFlags, LPCWSTR pwszComputerName, void* pvReserved, void* pvArg, PFN_CRYPT_ENUM_KEYID_PROP pfnEnum);
     * }
     */
    public static int CryptEnumKeyIdentifierProperties(MemorySegment pKeyIdentifier, int dwPropId, int dwFlags, MemorySegment pwszComputerName, MemorySegment pvReserved, MemorySegment pvArg, MemorySegment pfnEnum) {
        var mh$ = CryptEnumKeyIdentifierProperties$MH();
        try {
            return (int)mh$.invokeExact(pKeyIdentifier, dwPropId, dwFlags, pwszComputerName, pvReserved, pvArg, pfnEnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptCreateKeyIdentifierFromCSP$MH() {
        return RuntimeHelper.requireNonNull(constants$2204.const$2,"CryptCreateKeyIdentifierFromCSP");
    }
    /**
     * {@snippet :
     * BOOL CryptCreateKeyIdentifierFromCSP(DWORD dwCertEncodingType, LPCSTR pszPubKeyOID, const PUBLICKEYSTRUC* pPubKeyStruc, DWORD cbPubKeyStruc, DWORD dwFlags, void* pvReserved, BYTE* pbHash, DWORD* pcbHash);
     * }
     */
    public static int CryptCreateKeyIdentifierFromCSP(int dwCertEncodingType, MemorySegment pszPubKeyOID, MemorySegment pPubKeyStruc, int cbPubKeyStruc, int dwFlags, MemorySegment pvReserved, MemorySegment pbHash, MemorySegment pcbHash) {
        var mh$ = CryptCreateKeyIdentifierFromCSP$MH();
        try {
            return (int)mh$.invokeExact(dwCertEncodingType, pszPubKeyOID, pPubKeyStruc, cbPubKeyStruc, dwFlags, pvReserved, pbHash, pcbHash);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* HCERTCHAINENGINE;
     * }
     */
    public static final AddressLayout HCERTCHAINENGINE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_ENGINE_CONFIG* PCERT_CHAIN_ENGINE_CONFIG;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_ENGINE_CONFIG = RuntimeHelper.POINTER;
    public static MethodHandle CertCreateCertificateChainEngine$MH() {
        return RuntimeHelper.requireNonNull(constants$2206.const$5,"CertCreateCertificateChainEngine");
    }
    /**
     * {@snippet :
     * BOOL CertCreateCertificateChainEngine(PCERT_CHAIN_ENGINE_CONFIG pConfig, HCERTCHAINENGINE* phChainEngine);
     * }
     */
    public static int CertCreateCertificateChainEngine(MemorySegment pConfig, MemorySegment phChainEngine) {
        var mh$ = CertCreateCertificateChainEngine$MH();
        try {
            return (int)mh$.invokeExact(pConfig, phChainEngine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertFreeCertificateChainEngine$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$0,"CertFreeCertificateChainEngine");
    }
    /**
     * {@snippet :
     * void CertFreeCertificateChainEngine(HCERTCHAINENGINE hChainEngine);
     * }
     */
    public static void CertFreeCertificateChainEngine(MemorySegment hChainEngine) {
        var mh$ = CertFreeCertificateChainEngine$MH();
        try {
            mh$.invokeExact(hChainEngine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertResyncCertificateChainEngine$MH() {
        return RuntimeHelper.requireNonNull(constants$2207.const$1,"CertResyncCertificateChainEngine");
    }
    /**
     * {@snippet :
     * BOOL CertResyncCertificateChainEngine(HCERTCHAINENGINE hChainEngine);
     * }
     */
    public static int CertResyncCertificateChainEngine(MemorySegment hChainEngine) {
        var mh$ = CertResyncCertificateChainEngine$MH();
        try {
            return (int)mh$.invokeExact(hChainEngine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CERT_TRUST_STATUS* PCERT_TRUST_STATUS;
     * }
     */
    public static final AddressLayout PCERT_TRUST_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_REVOCATION_INFO* PCERT_REVOCATION_INFO;
     * }
     */
    public static final AddressLayout PCERT_REVOCATION_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_TRUST_LIST_INFO* PCERT_TRUST_LIST_INFO;
     * }
     */
    public static final AddressLayout PCERT_TRUST_LIST_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_ELEMENT* PCERT_CHAIN_ELEMENT;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_ELEMENT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_ELEMENT* PCCERT_CHAIN_ELEMENT;
     * }
     */
    public static final AddressLayout PCCERT_CHAIN_ELEMENT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SIMPLE_CHAIN* PCERT_SIMPLE_CHAIN;
     * }
     */
    public static final AddressLayout PCERT_SIMPLE_CHAIN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SIMPLE_CHAIN* PCCERT_SIMPLE_CHAIN;
     * }
     */
    public static final AddressLayout PCCERT_SIMPLE_CHAIN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_CONTEXT* PCERT_CHAIN_CONTEXT;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_CONTEXT* PCCERT_CHAIN_CONTEXT;
     * }
     */
    public static final AddressLayout PCCERT_CHAIN_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_USAGE_MATCH* PCERT_USAGE_MATCH;
     * }
     */
    public static final AddressLayout PCERT_USAGE_MATCH = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CTL_USAGE_MATCH* PCTL_USAGE_MATCH;
     * }
     */
    public static final AddressLayout PCTL_USAGE_MATCH = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_PARA* PCERT_CHAIN_PARA;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_PARA = RuntimeHelper.POINTER;
    public static MethodHandle CertGetCertificateChain$MH() {
        return RuntimeHelper.requireNonNull(constants$2214.const$5,"CertGetCertificateChain");
    }
    /**
     * {@snippet :
     * BOOL CertGetCertificateChain(HCERTCHAINENGINE hChainEngine, PCCERT_CONTEXT pCertContext, LPFILETIME pTime, HCERTSTORE hAdditionalStore, PCERT_CHAIN_PARA pChainPara, DWORD dwFlags, LPVOID pvReserved, PCCERT_CHAIN_CONTEXT* ppChainContext);
     * }
     */
    public static int CertGetCertificateChain(MemorySegment hChainEngine, MemorySegment pCertContext, MemorySegment pTime, MemorySegment hAdditionalStore, MemorySegment pChainPara, int dwFlags, MemorySegment pvReserved, MemorySegment ppChainContext) {
        var mh$ = CertGetCertificateChain$MH();
        try {
            return (int)mh$.invokeExact(hChainEngine, pCertContext, pTime, hAdditionalStore, pChainPara, dwFlags, pvReserved, ppChainContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertFreeCertificateChain$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$0,"CertFreeCertificateChain");
    }
    /**
     * {@snippet :
     * void CertFreeCertificateChain(PCCERT_CHAIN_CONTEXT pChainContext);
     * }
     */
    public static void CertFreeCertificateChain(MemorySegment pChainContext) {
        var mh$ = CertFreeCertificateChain$MH();
        try {
            mh$.invokeExact(pChainContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertDuplicateCertificateChain$MH() {
        return RuntimeHelper.requireNonNull(constants$2215.const$1,"CertDuplicateCertificateChain");
    }
    /**
     * {@snippet :
     * PCCERT_CHAIN_CONTEXT CertDuplicateCertificateChain(PCCERT_CHAIN_CONTEXT pChainContext);
     * }
     */
    public static MemorySegment CertDuplicateCertificateChain(MemorySegment pChainContext) {
        var mh$ = CertDuplicateCertificateChain$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pChainContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRL_REVOCATION_INFO* PCRL_REVOCATION_INFO;
     * }
     */
    public static final AddressLayout PCRL_REVOCATION_INFO = RuntimeHelper.POINTER;
    public static MethodHandle CertFindChainInStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2217.const$3,"CertFindChainInStore");
    }
    /**
     * {@snippet :
     * PCCERT_CHAIN_CONTEXT CertFindChainInStore(HCERTSTORE hCertStore, DWORD dwCertEncodingType, DWORD dwFindFlags, DWORD dwFindType, void* pvFindPara, PCCERT_CHAIN_CONTEXT pPrevChainContext);
     * }
     */
    public static MemorySegment CertFindChainInStore(MemorySegment hCertStore, int dwCertEncodingType, int dwFindFlags, int dwFindType, MemorySegment pvFindPara, MemorySegment pPrevChainContext) {
        var mh$ = CertFindChainInStore$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hCertStore, dwCertEncodingType, dwFindFlags, dwFindType, pvFindPara, pPrevChainContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA* PCERT_CHAIN_FIND_ISSUER_PARA;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_FIND_ISSUER_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA* PCERT_CHAIN_FIND_BY_ISSUER_PARA;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_FIND_BY_ISSUER_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_POLICY_PARA* PCERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_CHAIN_POLICY_STATUS* PCERT_CHAIN_POLICY_STATUS;
     * }
     */
    public static final AddressLayout PCERT_CHAIN_POLICY_STATUS = RuntimeHelper.POINTER;
    public static MethodHandle CertVerifyCertificateChainPolicy$MH() {
        return RuntimeHelper.requireNonNull(constants$2221.const$0,"CertVerifyCertificateChainPolicy");
    }
    /**
     * {@snippet :
     * BOOL CertVerifyCertificateChainPolicy(LPCSTR pszPolicyOID, PCCERT_CHAIN_CONTEXT pChainContext, PCERT_CHAIN_POLICY_PARA pPolicyPara, PCERT_CHAIN_POLICY_STATUS pPolicyStatus);
     * }
     */
    public static int CertVerifyCertificateChainPolicy(MemorySegment pszPolicyOID, MemorySegment pChainContext, MemorySegment pPolicyPara, MemorySegment pPolicyStatus) {
        var mh$ = CertVerifyCertificateChainPolicy$MH();
        try {
            return (int)mh$.invokeExact(pszPolicyOID, pChainContext, pPolicyPara, pPolicyStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA* PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS* PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
     * }
     */
    public static final AddressLayout PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA* PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _HTTPSPolicyCallbackData* PHTTPSPolicyCallbackData;
     * }
     */
    public static final AddressLayout PHTTPSPolicyCallbackData = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _HTTPSPolicyCallbackData* PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PSSL_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA* PEV_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PEV_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS* PEV_EXTRA_CERT_CHAIN_POLICY_STATUS;
     * }
     */
    public static final AddressLayout PEV_EXTRA_CERT_CHAIN_POLICY_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS* PSSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;
     * }
     */
    public static final AddressLayout PSSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA* PSSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PSSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA* PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;
     * }
     */
    public static final AddressLayout PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS* PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;
     * }
     */
    public static final AddressLayout PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS = RuntimeHelper.POINTER;
    public static MethodHandle CryptStringToBinaryA$MH() {
        return RuntimeHelper.requireNonNull(constants$2227.const$5,"CryptStringToBinaryA");
    }
    /**
     * {@snippet :
     * BOOL CryptStringToBinaryA(LPCSTR pszString, DWORD cchString, DWORD dwFlags, BYTE* pbBinary, DWORD* pcbBinary, DWORD* pdwSkip, DWORD* pdwFlags);
     * }
     */
    public static int CryptStringToBinaryA(MemorySegment pszString, int cchString, int dwFlags, MemorySegment pbBinary, MemorySegment pcbBinary, MemorySegment pdwSkip, MemorySegment pdwFlags) {
        var mh$ = CryptStringToBinaryA$MH();
        try {
            return (int)mh$.invokeExact(pszString, cchString, dwFlags, pbBinary, pcbBinary, pdwSkip, pdwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptStringToBinaryW$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.const$0,"CryptStringToBinaryW");
    }
    /**
     * {@snippet :
     * BOOL CryptStringToBinaryW(LPCWSTR pszString, DWORD cchString, DWORD dwFlags, BYTE* pbBinary, DWORD* pcbBinary, DWORD* pdwSkip, DWORD* pdwFlags);
     * }
     */
    public static int CryptStringToBinaryW(MemorySegment pszString, int cchString, int dwFlags, MemorySegment pbBinary, MemorySegment pcbBinary, MemorySegment pdwSkip, MemorySegment pdwFlags) {
        var mh$ = CryptStringToBinaryW$MH();
        try {
            return (int)mh$.invokeExact(pszString, cchString, dwFlags, pbBinary, pcbBinary, pdwSkip, pdwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptBinaryToStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.const$1,"CryptBinaryToStringA");
    }
    /**
     * {@snippet :
     * BOOL CryptBinaryToStringA(const BYTE* pbBinary, DWORD cbBinary, DWORD dwFlags, LPSTR pszString, DWORD* pcchString);
     * }
     */
    public static int CryptBinaryToStringA(MemorySegment pbBinary, int cbBinary, int dwFlags, MemorySegment pszString, MemorySegment pcchString) {
        var mh$ = CryptBinaryToStringA$MH();
        try {
            return (int)mh$.invokeExact(pbBinary, cbBinary, dwFlags, pszString, pcchString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptBinaryToStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$2228.const$2,"CryptBinaryToStringW");
    }
    /**
     * {@snippet :
     * BOOL CryptBinaryToStringW(const BYTE* pbBinary, DWORD cbBinary, DWORD dwFlags, LPWSTR pszString, DWORD* pcchString);
     * }
     */
    public static int CryptBinaryToStringW(MemorySegment pbBinary, int cbBinary, int dwFlags, MemorySegment pszString, MemorySegment pcchString) {
        var mh$ = CryptBinaryToStringW$MH();
        try {
            return (int)mh$.invokeExact(pbBinary, cbBinary, dwFlags, pszString, pcchString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PFXImportCertStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.const$0,"PFXImportCertStore");
    }
    /**
     * {@snippet :
     * HCERTSTORE PFXImportCertStore(CRYPT_DATA_BLOB* pPFX, LPCWSTR szPassword, DWORD dwFlags);
     * }
     */
    public static MemorySegment PFXImportCertStore(MemorySegment pPFX, MemorySegment szPassword, int dwFlags) {
        var mh$ = PFXImportCertStore$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pPFX, szPassword, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PFXIsPFXBlob$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.const$1,"PFXIsPFXBlob");
    }
    /**
     * {@snippet :
     * BOOL PFXIsPFXBlob(CRYPT_DATA_BLOB* pPFX);
     * }
     */
    public static int PFXIsPFXBlob(MemorySegment pPFX) {
        var mh$ = PFXIsPFXBlob$MH();
        try {
            return (int)mh$.invokeExact(pPFX);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PFXVerifyPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.const$2,"PFXVerifyPassword");
    }
    /**
     * {@snippet :
     * BOOL PFXVerifyPassword(CRYPT_DATA_BLOB* pPFX, LPCWSTR szPassword, DWORD dwFlags);
     * }
     */
    public static int PFXVerifyPassword(MemorySegment pPFX, MemorySegment szPassword, int dwFlags) {
        var mh$ = PFXVerifyPassword$MH();
        try {
            return (int)mh$.invokeExact(pPFX, szPassword, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PFXExportCertStoreEx$MH() {
        return RuntimeHelper.requireNonNull(constants$2229.const$3,"PFXExportCertStoreEx");
    }
    /**
     * {@snippet :
     * BOOL PFXExportCertStoreEx(HCERTSTORE hStore, CRYPT_DATA_BLOB* pPFX, LPCWSTR szPassword, void* pvPara, DWORD dwFlags);
     * }
     */
    public static int PFXExportCertStoreEx(MemorySegment hStore, MemorySegment pPFX, MemorySegment szPassword, MemorySegment pvPara, int dwFlags) {
        var mh$ = PFXExportCertStoreEx$MH();
        try {
            return (int)mh$.invokeExact(hStore, pPFX, szPassword, pvPara, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PKCS12_PBES2_EXPORT_PARAMS* PPKCS12_PBES2_EXPORT_PARAMS;
     * }
     */
    public static final AddressLayout PPKCS12_PBES2_EXPORT_PARAMS = RuntimeHelper.POINTER;
    public static MethodHandle PFXExportCertStore$MH() {
        return RuntimeHelper.requireNonNull(constants$2230.const$2,"PFXExportCertStore");
    }
    /**
     * {@snippet :
     * BOOL PFXExportCertStore(HCERTSTORE hStore, CRYPT_DATA_BLOB* pPFX, LPCWSTR szPassword, DWORD dwFlags);
     * }
     */
    public static int PFXExportCertStore(MemorySegment hStore, MemorySegment pPFX, MemorySegment szPassword, int dwFlags) {
        var mh$ = PFXExportCertStore$MH();
        try {
            return (int)mh$.invokeExact(hStore, pPFX, szPassword, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* HCERT_SERVER_OCSP_RESPONSE;
     * }
     */
    public static final AddressLayout HCERT_SERVER_OCSP_RESPONSE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT* PCERT_SERVER_OCSP_RESPONSE_CONTEXT;
     * }
     */
    public static final AddressLayout PCERT_SERVER_OCSP_RESPONSE_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT* PCCERT_SERVER_OCSP_RESPONSE_CONTEXT;
     * }
     */
    public static final AddressLayout PCCERT_SERVER_OCSP_RESPONSE_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA* PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA;
     * }
     */
    public static final AddressLayout PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA = RuntimeHelper.POINTER;
    public static MethodHandle CertOpenServerOcspResponse$MH() {
        return RuntimeHelper.requireNonNull(constants$2232.const$5,"CertOpenServerOcspResponse");
    }
    /**
     * {@snippet :
     * HCERT_SERVER_OCSP_RESPONSE CertOpenServerOcspResponse(PCCERT_CHAIN_CONTEXT pChainContext, DWORD dwFlags, PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA pOpenPara);
     * }
     */
    public static MemorySegment CertOpenServerOcspResponse(MemorySegment pChainContext, int dwFlags, MemorySegment pOpenPara) {
        var mh$ = CertOpenServerOcspResponse$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pChainContext, dwFlags, pOpenPara);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertAddRefServerOcspResponse$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$0,"CertAddRefServerOcspResponse");
    }
    /**
     * {@snippet :
     * void CertAddRefServerOcspResponse(HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse);
     * }
     */
    public static void CertAddRefServerOcspResponse(MemorySegment hServerOcspResponse) {
        var mh$ = CertAddRefServerOcspResponse$MH();
        try {
            mh$.invokeExact(hServerOcspResponse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertCloseServerOcspResponse$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$1,"CertCloseServerOcspResponse");
    }
    /**
     * {@snippet :
     * void CertCloseServerOcspResponse(HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse, DWORD dwFlags);
     * }
     */
    public static void CertCloseServerOcspResponse(MemorySegment hServerOcspResponse, int dwFlags) {
        var mh$ = CertCloseServerOcspResponse$MH();
        try {
            mh$.invokeExact(hServerOcspResponse, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertGetServerOcspResponseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$2,"CertGetServerOcspResponseContext");
    }
    /**
     * {@snippet :
     * PCCERT_SERVER_OCSP_RESPONSE_CONTEXT CertGetServerOcspResponseContext(HCERT_SERVER_OCSP_RESPONSE hServerOcspResponse, DWORD dwFlags, LPVOID pvReserved);
     * }
     */
    public static MemorySegment CertGetServerOcspResponseContext(MemorySegment hServerOcspResponse, int dwFlags, MemorySegment pvReserved) {
        var mh$ = CertGetServerOcspResponseContext$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hServerOcspResponse, dwFlags, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertAddRefServerOcspResponseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$3,"CertAddRefServerOcspResponseContext");
    }
    /**
     * {@snippet :
     * void CertAddRefServerOcspResponseContext(PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext);
     * }
     */
    public static void CertAddRefServerOcspResponseContext(MemorySegment pServerOcspResponseContext) {
        var mh$ = CertAddRefServerOcspResponseContext$MH();
        try {
            mh$.invokeExact(pServerOcspResponseContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertFreeServerOcspResponseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$4,"CertFreeServerOcspResponseContext");
    }
    /**
     * {@snippet :
     * void CertFreeServerOcspResponseContext(PCCERT_SERVER_OCSP_RESPONSE_CONTEXT pServerOcspResponseContext);
     * }
     */
    public static void CertFreeServerOcspResponseContext(MemorySegment pServerOcspResponseContext) {
        var mh$ = CertFreeServerOcspResponseContext$MH();
        try {
            mh$.invokeExact(pServerOcspResponseContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertRetrieveLogoOrBiometricInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2233.const$6,"CertRetrieveLogoOrBiometricInfo");
    }
    /**
     * {@snippet :
     * BOOL CertRetrieveLogoOrBiometricInfo(PCCERT_CONTEXT pCertContext, LPCSTR lpszLogoOrBiometricType, DWORD dwRetrievalFlags, DWORD dwTimeout, DWORD dwFlags, void* pvReserved, BYTE** ppbData, DWORD* pcbData, LPWSTR* ppwszMimeType);
     * }
     */
    public static int CertRetrieveLogoOrBiometricInfo(MemorySegment pCertContext, MemorySegment lpszLogoOrBiometricType, int dwRetrievalFlags, int dwTimeout, int dwFlags, MemorySegment pvReserved, MemorySegment ppbData, MemorySegment pcbData, MemorySegment ppwszMimeType) {
        var mh$ = CertRetrieveLogoOrBiometricInfo$MH();
        try {
            return (int)mh$.invokeExact(pCertContext, lpszLogoOrBiometricType, dwRetrievalFlags, dwTimeout, dwFlags, pvReserved, ppbData, pcbData, ppwszMimeType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CERT_SELECT_CHAIN_PARA* PCERT_SELECT_CHAIN_PARA;
     * }
     */
    public static final AddressLayout PCERT_SELECT_CHAIN_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SELECT_CHAIN_PARA* PCCERT_SELECT_CHAIN_PARA;
     * }
     */
    public static final AddressLayout PCCERT_SELECT_CHAIN_PARA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SELECT_CRITERIA* PCERT_SELECT_CRITERIA;
     * }
     */
    public static final AddressLayout PCERT_SELECT_CRITERIA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CERT_SELECT_CRITERIA* PCCERT_SELECT_CRITERIA;
     * }
     */
    public static final AddressLayout PCCERT_SELECT_CRITERIA = RuntimeHelper.POINTER;
    public static MethodHandle CertSelectCertificateChains$MH() {
        return RuntimeHelper.requireNonNull(constants$2235.const$5,"CertSelectCertificateChains");
    }
    /**
     * {@snippet :
     * BOOL CertSelectCertificateChains(LPCGUID pSelectionContext, DWORD dwFlags, PCCERT_SELECT_CHAIN_PARA pChainParameters, DWORD cCriteria, PCCERT_SELECT_CRITERIA rgpCriteria, HCERTSTORE hStore, PDWORD pcSelection, PCCERT_CHAIN_CONTEXT** pprgpSelection);
     * }
     */
    public static int CertSelectCertificateChains(MemorySegment pSelectionContext, int dwFlags, MemorySegment pChainParameters, int cCriteria, MemorySegment rgpCriteria, MemorySegment hStore, MemorySegment pcSelection, MemorySegment pprgpSelection) {
        var mh$ = CertSelectCertificateChains$MH();
        try {
            return (int)mh$.invokeExact(pSelectionContext, dwFlags, pChainParameters, cCriteria, rgpCriteria, hStore, pcSelection, pprgpSelection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CertFreeCertificateChainList$MH() {
        return RuntimeHelper.requireNonNull(constants$2236.const$0,"CertFreeCertificateChainList");
    }
    /**
     * {@snippet :
     * void CertFreeCertificateChainList(PCCERT_CHAIN_CONTEXT* prgpSelection);
     * }
     */
    public static void CertFreeCertificateChainList(MemorySegment prgpSelection) {
        var mh$ = CertFreeCertificateChainList$MH();
        try {
            mh$.invokeExact(prgpSelection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_REQUEST* PCRYPT_TIMESTAMP_REQUEST;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_REQUEST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_RESPONSE* PCRYPT_TIMESTAMP_RESPONSE;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_RESPONSE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_ACCURACY* PCRYPT_TIMESTAMP_ACCURACY;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_ACCURACY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_INFO* PCRYPT_TIMESTAMP_INFO;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_CONTEXT* PCRYPT_TIMESTAMP_CONTEXT;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CRYPT_TIMESTAMP_PARA* PCRYPT_TIMESTAMP_PARA;
     * }
     */
    public static final AddressLayout PCRYPT_TIMESTAMP_PARA = RuntimeHelper.POINTER;
    public static MethodHandle CryptRetrieveTimeStamp$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$2,"CryptRetrieveTimeStamp");
    }
    /**
     * {@snippet :
     * BOOL CryptRetrieveTimeStamp(LPCWSTR wszUrl, DWORD dwRetrievalFlags, DWORD dwTimeout, LPCSTR pszHashId, const CRYPT_TIMESTAMP_PARA* pPara, const BYTE* pbData, DWORD cbData, PCRYPT_TIMESTAMP_CONTEXT* ppTsContext, PCCERT_CONTEXT* ppTsSigner, HCERTSTORE* phStore);
     * }
     */
    public static int CryptRetrieveTimeStamp(MemorySegment wszUrl, int dwRetrievalFlags, int dwTimeout, MemorySegment pszHashId, MemorySegment pPara, MemorySegment pbData, int cbData, MemorySegment ppTsContext, MemorySegment ppTsSigner, MemorySegment phStore) {
        var mh$ = CryptRetrieveTimeStamp$MH();
        try {
            return (int)mh$.invokeExact(wszUrl, dwRetrievalFlags, dwTimeout, pszHashId, pPara, pbData, cbData, ppTsContext, ppTsSigner, phStore);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptVerifyTimeStampSignature$MH() {
        return RuntimeHelper.requireNonNull(constants$2241.const$3,"CryptVerifyTimeStampSignature");
    }
    /**
     * {@snippet :
     * BOOL CryptVerifyTimeStampSignature(const BYTE* pbTSContentInfo, DWORD cbTSContentInfo, const BYTE* pbData, DWORD cbData, HCERTSTORE hAdditionalStore, PCRYPT_TIMESTAMP_CONTEXT* ppTsContext, PCCERT_CONTEXT* ppTsSigner, HCERTSTORE* phStore);
     * }
     */
    public static int CryptVerifyTimeStampSignature(MemorySegment pbTSContentInfo, int cbTSContentInfo, MemorySegment pbData, int cbData, MemorySegment hAdditionalStore, MemorySegment ppTsContext, MemorySegment ppTsSigner, MemorySegment phStore) {
        var mh$ = CryptVerifyTimeStampSignature$MH();
        try {
            return (int)mh$.invokeExact(pbTSContentInfo, cbTSContentInfo, pbData, cbData, hAdditionalStore, ppTsContext, ppTsSigner, phStore);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE* PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
     * }
     */
    public static final AddressLayout PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE = RuntimeHelper.POINTER;
    public static MethodHandle CertIsWeakHash$MH() {
        return RuntimeHelper.requireNonNull(constants$2244.const$2,"CertIsWeakHash");
    }
    /**
     * {@snippet :
     * BOOL CertIsWeakHash(DWORD dwHashUseType, LPCWSTR pwszCNGHashAlgid, DWORD dwChainFlags, PCCERT_CHAIN_CONTEXT pSignerChainContext, LPFILETIME pTimeStamp, LPCWSTR pwszFileName);
     * }
     */
    public static int CertIsWeakHash(int dwHashUseType, MemorySegment pwszCNGHashAlgid, int dwChainFlags, MemorySegment pSignerChainContext, MemorySegment pTimeStamp, MemorySegment pwszFileName) {
        var mh$ = CertIsWeakHash$MH();
        try {
            return (int)mh$.invokeExact(dwHashUseType, pwszCNGHashAlgid, dwChainFlags, pSignerChainContext, pTimeStamp, pwszFileName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CRYPTPROTECT_PROMPTSTRUCT* PCRYPTPROTECT_PROMPTSTRUCT;
     * }
     */
    public static final AddressLayout PCRYPTPROTECT_PROMPTSTRUCT = RuntimeHelper.POINTER;
    public static MethodHandle CryptProtectData$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.const$4,"CryptProtectData");
    }
    /**
     * {@snippet :
     * BOOL CryptProtectData(DATA_BLOB* pDataIn, LPCWSTR szDataDescr, DATA_BLOB* pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT* pPromptStruct, DWORD dwFlags, DATA_BLOB* pDataOut);
     * }
     */
    public static int CryptProtectData(MemorySegment pDataIn, MemorySegment szDataDescr, MemorySegment pOptionalEntropy, MemorySegment pvReserved, MemorySegment pPromptStruct, int dwFlags, MemorySegment pDataOut) {
        var mh$ = CryptProtectData$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, szDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pDataOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptUnprotectData$MH() {
        return RuntimeHelper.requireNonNull(constants$2245.const$5,"CryptUnprotectData");
    }
    /**
     * {@snippet :
     * BOOL CryptUnprotectData(DATA_BLOB* pDataIn, LPWSTR* ppszDataDescr, DATA_BLOB* pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT* pPromptStruct, DWORD dwFlags, DATA_BLOB* pDataOut);
     * }
     */
    public static int CryptUnprotectData(MemorySegment pDataIn, MemorySegment ppszDataDescr, MemorySegment pOptionalEntropy, MemorySegment pvReserved, MemorySegment pPromptStruct, int dwFlags, MemorySegment pDataOut) {
        var mh$ = CryptUnprotectData$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, ppszDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pDataOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptProtectDataNoUI$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.const$1,"CryptProtectDataNoUI");
    }
    /**
     * {@snippet :
     * BOOL CryptProtectDataNoUI(DATA_BLOB* pDataIn, LPCWSTR szDataDescr, DATA_BLOB* pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT* pPromptStruct, DWORD dwFlags, const BYTE* pbOptionalPassword, DWORD cbOptionalPassword, DATA_BLOB* pDataOut);
     * }
     */
    public static int CryptProtectDataNoUI(MemorySegment pDataIn, MemorySegment szDataDescr, MemorySegment pOptionalEntropy, MemorySegment pvReserved, MemorySegment pPromptStruct, int dwFlags, MemorySegment pbOptionalPassword, int cbOptionalPassword, MemorySegment pDataOut) {
        var mh$ = CryptProtectDataNoUI$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, szDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pbOptionalPassword, cbOptionalPassword, pDataOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptUnprotectDataNoUI$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.const$2,"CryptUnprotectDataNoUI");
    }
    /**
     * {@snippet :
     * BOOL CryptUnprotectDataNoUI(DATA_BLOB* pDataIn, LPWSTR* ppszDataDescr, DATA_BLOB* pOptionalEntropy, PVOID pvReserved, CRYPTPROTECT_PROMPTSTRUCT* pPromptStruct, DWORD dwFlags, const BYTE* pbOptionalPassword, DWORD cbOptionalPassword, DATA_BLOB* pDataOut);
     * }
     */
    public static int CryptUnprotectDataNoUI(MemorySegment pDataIn, MemorySegment ppszDataDescr, MemorySegment pOptionalEntropy, MemorySegment pvReserved, MemorySegment pPromptStruct, int dwFlags, MemorySegment pbOptionalPassword, int cbOptionalPassword, MemorySegment pDataOut) {
        var mh$ = CryptUnprotectDataNoUI$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, ppszDataDescr, pOptionalEntropy, pvReserved, pPromptStruct, dwFlags, pbOptionalPassword, cbOptionalPassword, pDataOut);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptUpdateProtectedState$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.const$3,"CryptUpdateProtectedState");
    }
    /**
     * {@snippet :
     * BOOL CryptUpdateProtectedState(PSID pOldSid, LPCWSTR pwszOldPassword, DWORD dwFlags, DWORD* pdwSuccessCount, DWORD* pdwFailureCount);
     * }
     */
    public static int CryptUpdateProtectedState(MemorySegment pOldSid, MemorySegment pwszOldPassword, int dwFlags, MemorySegment pdwSuccessCount, MemorySegment pdwFailureCount) {
        var mh$ = CryptUpdateProtectedState$MH();
        try {
            return (int)mh$.invokeExact(pOldSid, pwszOldPassword, dwFlags, pdwSuccessCount, pdwFailureCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptProtectMemory$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.const$4,"CryptProtectMemory");
    }
    /**
     * {@snippet :
     * BOOL CryptProtectMemory(LPVOID pDataIn, DWORD cbDataIn, DWORD dwFlags);
     * }
     */
    public static int CryptProtectMemory(MemorySegment pDataIn, int cbDataIn, int dwFlags) {
        var mh$ = CryptProtectMemory$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, cbDataIn, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CryptUnprotectMemory$MH() {
        return RuntimeHelper.requireNonNull(constants$2246.const$5,"CryptUnprotectMemory");
    }
    /**
     * {@snippet :
     * BOOL CryptUnprotectMemory(LPVOID pDataIn, DWORD cbDataIn, DWORD dwFlags);
     * }
     */
    public static int CryptUnprotectMemory(MemorySegment pDataIn, int cbDataIn, int dwFlags) {
        var mh$ = CryptUnprotectMemory$MH();
        try {
            return (int)mh$.invokeExact(pDataIn, cbDataIn, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CERTIFICATE_BLOB* PEFS_CERTIFICATE_BLOB;
     * }
     */
    public static final AddressLayout PEFS_CERTIFICATE_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_HASH_BLOB* PEFS_HASH_BLOB;
     * }
     */
    public static final AddressLayout PEFS_HASH_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_RPC_BLOB* PEFS_RPC_BLOB;
     * }
     */
    public static final AddressLayout PEFS_RPC_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_PIN_BLOB* PEFS_PIN_BLOB;
     * }
     */
    public static final AddressLayout PEFS_PIN_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_KEY_INFO* PEFS_KEY_INFO;
     * }
     */
    public static final AddressLayout PEFS_KEY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_COMPATIBILITY_INFO* PEFS_COMPATIBILITY_INFO;
     * }
     */
    public static final AddressLayout PEFS_COMPATIBILITY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_VERSION_INFO* PEFS_VERSION_INFO;
     * }
     */
    public static final AddressLayout PEFS_VERSION_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_DECRYPTION_STATUS_INFO* PEFS_DECRYPTION_STATUS_INFO;
     * }
     */
    public static final AddressLayout PEFS_DECRYPTION_STATUS_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _EFS_ENCRYPTION_STATUS_INFO* PEFS_ENCRYPTION_STATUS_INFO;
     * }
     */
    public static final AddressLayout PEFS_ENCRYPTION_STATUS_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_CERTIFICATE* PENCRYPTION_CERTIFICATE;
     * }
     */
    public static final AddressLayout PENCRYPTION_CERTIFICATE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_CERTIFICATE_HASH* PENCRYPTION_CERTIFICATE_HASH;
     * }
     */
    public static final AddressLayout PENCRYPTION_CERTIFICATE_HASH = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST* PENCRYPTION_CERTIFICATE_HASH_LIST;
     * }
     */
    public static final AddressLayout PENCRYPTION_CERTIFICATE_HASH_LIST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_CERTIFICATE_LIST* PENCRYPTION_CERTIFICATE_LIST;
     * }
     */
    public static final AddressLayout PENCRYPTION_CERTIFICATE_LIST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTED_FILE_METADATA_SIGNATURE* PENCRYPTED_FILE_METADATA_SIGNATURE;
     * }
     */
    public static final AddressLayout PENCRYPTED_FILE_METADATA_SIGNATURE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_PROTECTOR* PENCRYPTION_PROTECTOR;
     * }
     */
    public static final AddressLayout PENCRYPTION_PROTECTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_PROTECTOR_LIST* PENCRYPTION_PROTECTOR_LIST;
     * }
     */
    public static final AddressLayout PENCRYPTION_PROTECTOR_LIST = RuntimeHelper.POINTER;
    public static MethodHandle QueryUsersOnEncryptedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.const$4,"QueryUsersOnEncryptedFile");
    }
    /**
     * {@snippet :
     * DWORD QueryUsersOnEncryptedFile(LPCWSTR lpFileName, PENCRYPTION_CERTIFICATE_HASH_LIST* pUsers);
     * }
     */
    public static int QueryUsersOnEncryptedFile(MemorySegment lpFileName, MemorySegment pUsers) {
        var mh$ = QueryUsersOnEncryptedFile$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pUsers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryRecoveryAgentsOnEncryptedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$2256.const$5,"QueryRecoveryAgentsOnEncryptedFile");
    }
    /**
     * {@snippet :
     * DWORD QueryRecoveryAgentsOnEncryptedFile(LPCWSTR lpFileName, PENCRYPTION_CERTIFICATE_HASH_LIST* pRecoveryAgents);
     * }
     */
    public static int QueryRecoveryAgentsOnEncryptedFile(MemorySegment lpFileName, MemorySegment pRecoveryAgents) {
        var mh$ = QueryRecoveryAgentsOnEncryptedFile$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pRecoveryAgents);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveUsersFromEncryptedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$0,"RemoveUsersFromEncryptedFile");
    }
    /**
     * {@snippet :
     * DWORD RemoveUsersFromEncryptedFile(LPCWSTR lpFileName, PENCRYPTION_CERTIFICATE_HASH_LIST pHashes);
     * }
     */
    public static int RemoveUsersFromEncryptedFile(MemorySegment lpFileName, MemorySegment pHashes) {
        var mh$ = RemoveUsersFromEncryptedFile$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pHashes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddUsersToEncryptedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$1,"AddUsersToEncryptedFile");
    }
    /**
     * {@snippet :
     * DWORD AddUsersToEncryptedFile(LPCWSTR lpFileName, PENCRYPTION_CERTIFICATE_LIST pEncryptionCertificates);
     * }
     */
    public static int AddUsersToEncryptedFile(MemorySegment lpFileName, MemorySegment pEncryptionCertificates) {
        var mh$ = AddUsersToEncryptedFile$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pEncryptionCertificates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserFileEncryptionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$2,"SetUserFileEncryptionKey");
    }
    /**
     * {@snippet :
     * DWORD SetUserFileEncryptionKey(PENCRYPTION_CERTIFICATE pEncryptionCertificate);
     * }
     */
    public static int SetUserFileEncryptionKey(MemorySegment pEncryptionCertificate) {
        var mh$ = SetUserFileEncryptionKey$MH();
        try {
            return (int)mh$.invokeExact(pEncryptionCertificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserFileEncryptionKeyEx$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$3,"SetUserFileEncryptionKeyEx");
    }
    /**
     * {@snippet :
     * DWORD SetUserFileEncryptionKeyEx(PENCRYPTION_CERTIFICATE pEncryptionCertificate, DWORD dwCapabilities, DWORD dwFlags, LPVOID pvReserved);
     * }
     */
    public static int SetUserFileEncryptionKeyEx(MemorySegment pEncryptionCertificate, int dwCapabilities, int dwFlags, MemorySegment pvReserved) {
        var mh$ = SetUserFileEncryptionKeyEx$MH();
        try {
            return (int)mh$.invokeExact(pEncryptionCertificate, dwCapabilities, dwFlags, pvReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreeEncryptionCertificateHashList$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$4,"FreeEncryptionCertificateHashList");
    }
    /**
     * {@snippet :
     * void FreeEncryptionCertificateHashList(PENCRYPTION_CERTIFICATE_HASH_LIST pUsers);
     * }
     */
    public static void FreeEncryptionCertificateHashList(MemorySegment pUsers) {
        var mh$ = FreeEncryptionCertificateHashList$MH();
        try {
            mh$.invokeExact(pUsers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EncryptionDisable$MH() {
        return RuntimeHelper.requireNonNull(constants$2257.const$5,"EncryptionDisable");
    }
    /**
     * {@snippet :
     * BOOL EncryptionDisable(LPCWSTR DirPath, BOOL Disable);
     * }
     */
    public static int EncryptionDisable(MemorySegment DirPath, int Disable) {
        var mh$ = EncryptionDisable$MH();
        try {
            return (int)mh$.invokeExact(DirPath, Disable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DuplicateEncryptionInfoFile$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$0,"DuplicateEncryptionInfoFile");
    }
    /**
     * {@snippet :
     * DWORD DuplicateEncryptionInfoFile(LPCWSTR SrcFileName, LPCWSTR DstFileName, DWORD dwCreationDistribution, DWORD dwAttributes, const LPSECURITY_ATTRIBUTES lpSecurityAttributes);
     * }
     */
    public static int DuplicateEncryptionInfoFile(MemorySegment SrcFileName, MemorySegment DstFileName, int dwCreationDistribution, int dwAttributes, MemorySegment lpSecurityAttributes) {
        var mh$ = DuplicateEncryptionInfoFile$MH();
        try {
            return (int)mh$.invokeExact(SrcFileName, DstFileName, dwCreationDistribution, dwAttributes, lpSecurityAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEncryptedFileMetadata$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$1,"GetEncryptedFileMetadata");
    }
    /**
     * {@snippet :
     * DWORD GetEncryptedFileMetadata(LPCWSTR lpFileName, PDWORD pcbMetadata, PBYTE* ppbMetadata);
     * }
     */
    public static int GetEncryptedFileMetadata(MemorySegment lpFileName, MemorySegment pcbMetadata, MemorySegment ppbMetadata) {
        var mh$ = GetEncryptedFileMetadata$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pcbMetadata, ppbMetadata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetEncryptedFileMetadata$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$2,"SetEncryptedFileMetadata");
    }
    /**
     * {@snippet :
     * DWORD SetEncryptedFileMetadata(LPCWSTR lpFileName, PBYTE pbOldMetadata, PBYTE pbNewMetadata, PENCRYPTION_CERTIFICATE_HASH pOwnerHash, DWORD dwOperation, PENCRYPTION_CERTIFICATE_HASH_LIST pCertificatesAdded);
     * }
     */
    public static int SetEncryptedFileMetadata(MemorySegment lpFileName, MemorySegment pbOldMetadata, MemorySegment pbNewMetadata, MemorySegment pOwnerHash, int dwOperation, MemorySegment pCertificatesAdded) {
        var mh$ = SetEncryptedFileMetadata$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, pbOldMetadata, pbNewMetadata, pOwnerHash, dwOperation, pCertificatesAdded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreeEncryptedFileMetadata$MH() {
        return RuntimeHelper.requireNonNull(constants$2258.const$3,"FreeEncryptedFileMetadata");
    }
    /**
     * {@snippet :
     * void FreeEncryptedFileMetadata(PBYTE pbMetadata);
     * }
     */
    public static void FreeEncryptedFileMetadata(MemorySegment pbMetadata) {
        var mh$ = FreeEncryptedFileMetadata$MH();
        try {
            mh$.invokeExact(pbMetadata);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct * PRPC_IMPORT_CONTEXT_P;
     * }
     */
    public static final AddressLayout PRPC_IMPORT_CONTEXT_P = RuntimeHelper.POINTER;
    public static MethodHandle I_RpcNsGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$2,"I_RpcNsGetBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsGetBuffer(PRPC_MESSAGE Message);
     * }
     */
    public static int I_RpcNsGetBuffer(MemorySegment Message) {
        var mh$ = I_RpcNsGetBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$3,"I_RpcNsSendReceive");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsSendReceive(PRPC_MESSAGE Message, RPC_BINDING_HANDLE* Handle);
     * }
     */
    public static int I_RpcNsSendReceive(MemorySegment Message, MemorySegment Handle) {
        var mh$ = I_RpcNsSendReceive$MH();
        try {
            return (int)mh$.invokeExact(Message, Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsRaiseException$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$4,"I_RpcNsRaiseException");
    }
    /**
     * {@snippet :
     * void I_RpcNsRaiseException(PRPC_MESSAGE Message, RPC_STATUS Status);
     * }
     */
    public static void I_RpcNsRaiseException(MemorySegment Message, int Status) {
        var mh$ = I_RpcNsRaiseException$MH();
        try {
            mh$.invokeExact(Message, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReBindBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2259.const$5,"I_RpcReBindBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcReBindBuffer(PRPC_MESSAGE Message);
     * }
     */
    public static int I_RpcReBindBuffer(MemorySegment Message) {
        var mh$ = I_RpcReBindBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_NsServerBindSearch$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$0,"I_NsServerBindSearch");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_NsServerBindSearch();
     * }
     */
    public static int I_NsServerBindSearch() {
        var mh$ = I_NsServerBindSearch$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_NsClientBindSearch$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$1,"I_NsClientBindSearch");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_NsClientBindSearch();
     * }
     */
    public static int I_NsClientBindSearch() {
        var mh$ = I_NsClientBindSearch$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_NsClientBindDone$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$2,"I_NsClientBindDone");
    }
    /**
     * {@snippet :
     * void I_NsClientBindDone();
     * }
     */
    public static void I_NsClientBindDone() {
        var mh$ = I_NsClientBindDone$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned char byte;
     * }
     */
    public static final OfByte byte_ = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char cs_byte;
     * }
     */
    public static final OfByte cs_byte = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned char boolean;
     * }
     */
    public static final OfByte boolean_ = JAVA_BYTE;
    public static MethodHandle MIDL_user_allocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$3,"MIDL_user_allocate");
    }
    /**
     * {@snippet :
     * void* MIDL_user_allocate(size_t size);
     * }
     */
    public static MemorySegment MIDL_user_allocate(long size) {
        var mh$ = MIDL_user_allocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MIDL_user_free$MH() {
        return RuntimeHelper.requireNonNull(constants$2260.const$4,"MIDL_user_free");
    }
    /**
     * {@snippet :
     * void MIDL_user_free(void*);
     * }
     */
    public static void MIDL_user_free(MemorySegment x0) {
        var mh$ = MIDL_user_free$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcDefaultAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$1,"I_RpcDefaultAllocate");
    }
    /**
     * {@snippet :
     * void* I_RpcDefaultAllocate(handle_t bh, size_t size, void* (*RealAlloc)(size_t));
     * }
     */
    public static MemorySegment I_RpcDefaultAllocate(MemorySegment bh, long size, MemorySegment RealAlloc) {
        var mh$ = I_RpcDefaultAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(bh, size, RealAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcDefaultFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2261.const$3,"I_RpcDefaultFree");
    }
    /**
     * {@snippet :
     * void I_RpcDefaultFree(handle_t bh, void*, void (*RealFree)(void*));
     * }
     */
    public static void I_RpcDefaultFree(MemorySegment bh, MemorySegment x1, MemorySegment RealFree) {
        var mh$ = I_RpcDefaultFree$MH();
        try {
            mh$.invokeExact(bh, x1, RealFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* NDR_CCONTEXT;
     * }
     */
    public static final AddressLayout NDR_CCONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _NDR_SCONTEXT* NDR_SCONTEXT;
     * }
     */
    public static final AddressLayout NDR_SCONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _SCONTEXT_QUEUE* PSCONTEXT_QUEUE;
     * }
     */
    public static final AddressLayout PSCONTEXT_QUEUE = RuntimeHelper.POINTER;
    public static MethodHandle NDRCContextBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.const$2,"NDRCContextBinding");
    }
    /**
     * {@snippet :
     * RPC_BINDING_HANDLE NDRCContextBinding(NDR_CCONTEXT CContext);
     * }
     */
    public static MemorySegment NDRCContextBinding(MemorySegment CContext) {
        var mh$ = NDRCContextBinding$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(CContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRCContextMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.const$3,"NDRCContextMarshall");
    }
    /**
     * {@snippet :
     * void NDRCContextMarshall(NDR_CCONTEXT CContext, void* pBuff);
     * }
     */
    public static void NDRCContextMarshall(MemorySegment CContext, MemorySegment pBuff) {
        var mh$ = NDRCContextMarshall$MH();
        try {
            mh$.invokeExact(CContext, pBuff);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRCContextUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.const$4,"NDRCContextUnmarshall");
    }
    /**
     * {@snippet :
     * void NDRCContextUnmarshall(NDR_CCONTEXT* pCContext, RPC_BINDING_HANDLE hBinding, void* pBuff, unsigned long DataRepresentation);
     * }
     */
    public static void NDRCContextUnmarshall(MemorySegment pCContext, MemorySegment hBinding, MemorySegment pBuff, int DataRepresentation) {
        var mh$ = NDRCContextUnmarshall$MH();
        try {
            mh$.invokeExact(pCContext, hBinding, pBuff, DataRepresentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRCContextUnmarshall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2263.const$5,"NDRCContextUnmarshall2");
    }
    /**
     * {@snippet :
     * void NDRCContextUnmarshall2(NDR_CCONTEXT* pCContext, RPC_BINDING_HANDLE hBinding, void* pBuff, unsigned long DataRepresentation);
     * }
     */
    public static void NDRCContextUnmarshall2(MemorySegment pCContext, MemorySegment hBinding, MemorySegment pBuff, int DataRepresentation) {
        var mh$ = NDRCContextUnmarshall2$MH();
        try {
            mh$.invokeExact(pCContext, hBinding, pBuff, DataRepresentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$0,"NDRSContextMarshall");
    }
    /**
     * {@snippet :
     * void NDRSContextMarshall(NDR_SCONTEXT CContext, void* pBuff, NDR_RUNDOWN userRunDownIn);
     * }
     */
    public static void NDRSContextMarshall(MemorySegment CContext, MemorySegment pBuff, MemorySegment userRunDownIn) {
        var mh$ = NDRSContextMarshall$MH();
        try {
            mh$.invokeExact(CContext, pBuff, userRunDownIn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$1,"NDRSContextUnmarshall");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NDRSContextUnmarshall(void* pBuff, unsigned long DataRepresentation);
     * }
     */
    public static MemorySegment NDRSContextUnmarshall(MemorySegment pBuff, int DataRepresentation) {
        var mh$ = NDRSContextUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pBuff, DataRepresentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextMarshallEx$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$2,"NDRSContextMarshallEx");
    }
    /**
     * {@snippet :
     * void NDRSContextMarshallEx(RPC_BINDING_HANDLE BindingHandle, NDR_SCONTEXT CContext, void* pBuff, NDR_RUNDOWN userRunDownIn);
     * }
     */
    public static void NDRSContextMarshallEx(MemorySegment BindingHandle, MemorySegment CContext, MemorySegment pBuff, MemorySegment userRunDownIn) {
        var mh$ = NDRSContextMarshallEx$MH();
        try {
            mh$.invokeExact(BindingHandle, CContext, pBuff, userRunDownIn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextMarshall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$3,"NDRSContextMarshall2");
    }
    /**
     * {@snippet :
     * void NDRSContextMarshall2(RPC_BINDING_HANDLE BindingHandle, NDR_SCONTEXT CContext, void* pBuff, NDR_RUNDOWN userRunDownIn, void* CtxGuard, unsigned long Flags);
     * }
     */
    public static void NDRSContextMarshall2(MemorySegment BindingHandle, MemorySegment CContext, MemorySegment pBuff, MemorySegment userRunDownIn, MemorySegment CtxGuard, int Flags) {
        var mh$ = NDRSContextMarshall2$MH();
        try {
            mh$.invokeExact(BindingHandle, CContext, pBuff, userRunDownIn, CtxGuard, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextUnmarshallEx$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$4,"NDRSContextUnmarshallEx");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NDRSContextUnmarshallEx(RPC_BINDING_HANDLE BindingHandle, void* pBuff, unsigned long DataRepresentation);
     * }
     */
    public static MemorySegment NDRSContextUnmarshallEx(MemorySegment BindingHandle, MemorySegment pBuff, int DataRepresentation) {
        var mh$ = NDRSContextUnmarshallEx$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(BindingHandle, pBuff, DataRepresentation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NDRSContextUnmarshall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2264.const$6,"NDRSContextUnmarshall2");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NDRSContextUnmarshall2(RPC_BINDING_HANDLE BindingHandle, void* pBuff, unsigned long DataRepresentation, void* CtxGuard, unsigned long Flags);
     * }
     */
    public static MemorySegment NDRSContextUnmarshall2(MemorySegment BindingHandle, MemorySegment pBuff, int DataRepresentation, MemorySegment CtxGuard, int Flags) {
        var mh$ = NDRSContextUnmarshall2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(BindingHandle, pBuff, DataRepresentation, CtxGuard, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsDestroyClientContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2265.const$0,"RpcSsDestroyClientContext");
    }
    /**
     * {@snippet :
     * void RpcSsDestroyClientContext(void** ContextHandle);
     * }
     */
    public static void RpcSsDestroyClientContext(MemorySegment ContextHandle) {
        var mh$ = RpcSsDestroyClientContext$MH();
        try {
            mh$.invokeExact(ContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned long error_status_t;
     * }
     */
    public static final OfInt error_status_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned char* RPC_BUFPTR;
     * }
     */
    public static final AddressLayout RPC_BUFPTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned long RPC_LENGTH;
     * }
     */
    public static final OfInt RPC_LENGTH = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned char* PFORMAT_STRING;
     * }
     */
    public static final AddressLayout PFORMAT_STRING = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct * PARRAY_INFO;
     * }
     */
    public static final AddressLayout PARRAY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _NDR_ASYNC_MESSAGE* PNDR_ASYNC_MESSAGE;
     * }
     */
    public static final AddressLayout PNDR_ASYNC_MESSAGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _NDR_CORRELATION_INFO* PNDR_CORRELATION_INFO;
     * }
     */
    public static final AddressLayout PNDR_CORRELATION_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_SYNTAX_INFO* PMIDL_SYNTAX_INFO;
     * }
     */
    public static final AddressLayout PMIDL_SYNTAX_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_STUB_MESSAGE* PMIDL_STUB_MESSAGE;
     * }
     */
    public static final AddressLayout PMIDL_STUB_MESSAGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GENERIC_BINDING_ROUTINE_PAIR* PGENERIC_BINDING_ROUTINE_PAIR;
     * }
     */
    public static final AddressLayout PGENERIC_BINDING_ROUTINE_PAIR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct __GENERIC_BINDING_INFO* PGENERIC_BINDING_INFO;
     * }
     */
    public static final AddressLayout PGENERIC_BINDING_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _XMIT_ROUTINE_QUINTUPLE* PXMIT_ROUTINE_QUINTUPLE;
     * }
     */
    public static final AddressLayout PXMIT_ROUTINE_QUINTUPLE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _USER_MARSHAL_CB_TYPE.USER_MARSHAL_CB_BUFFER_SIZE = 0;
     * }
     */
    public static int USER_MARSHAL_CB_BUFFER_SIZE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _USER_MARSHAL_CB_TYPE.USER_MARSHAL_CB_MARSHALL = 1;
     * }
     */
    public static int USER_MARSHAL_CB_MARSHALL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _USER_MARSHAL_CB_TYPE.USER_MARSHAL_CB_UNMARSHALL = 2;
     * }
     */
    public static int USER_MARSHAL_CB_UNMARSHALL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _USER_MARSHAL_CB_TYPE.USER_MARSHAL_CB_FREE = 3;
     * }
     */
    public static int USER_MARSHAL_CB_FREE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _IDL_CS_CONVERT.IDL_CS_NO_CONVERT = 0;
     * }
     */
    public static int IDL_CS_NO_CONVERT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _IDL_CS_CONVERT.IDL_CS_IN_PLACE_CONVERT = 1;
     * }
     */
    public static int IDL_CS_IN_PLACE_CONVERT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _IDL_CS_CONVERT.IDL_CS_NEW_BUFFER_CONVERT = 2;
     * }
     */
    public static int IDL_CS_NEW_BUFFER_CONVERT() {
        return (int)2L;
    }
    public static MethodHandle RpcCsGetTags$MH() {
        return RuntimeHelper.requireNonNull(constants$2285.const$5,"RpcCsGetTags");
    }
    /**
     * {@snippet :
     * void RpcCsGetTags(RPC_BINDING_HANDLE hBinding, int fServerSide, unsigned long* pulSendingTag, unsigned long* pulDesiredReceivingTag, unsigned long* pulReceivingTag, error_status_t* pStatus);
     * }
     */
    public static void RpcCsGetTags(MemorySegment hBinding, int fServerSide, MemorySegment pulSendingTag, MemorySegment pulDesiredReceivingTag, MemorySegment pulReceivingTag, MemorySegment pStatus) {
        var mh$ = RpcCsGetTags$MH();
        try {
            mh$.invokeExact(hBinding, fServerSide, pulSendingTag, pulDesiredReceivingTag, pulReceivingTag, pStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _MIDL_STUB_DESC* PMIDL_STUB_DESC;
     * }
     */
    public static final AddressLayout PMIDL_STUB_DESC = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* PMIDL_XMIT_TYPE;
     * }
     */
    public static final AddressLayout PMIDL_XMIT_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_METHOD_PROPERTY* PMIDL_METHOD_PROPERTY;
     * }
     */
    public static final AddressLayout PMIDL_METHOD_PROPERTY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_METHOD_PROPERTY_MAP* PMIDL_METHOD_PROPERTY_MAP;
     * }
     */
    public static final AddressLayout PMIDL_METHOD_PROPERTY_MAP = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_SERVER_INFO_* PMIDL_SERVER_INFO;
     * }
     */
    public static final AddressLayout PMIDL_SERVER_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_STUBLESS_PROXY_INFO* PMIDL_STUBLESS_PROXY_INFO;
     * }
     */
    public static final AddressLayout PMIDL_STUBLESS_PROXY_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short* PARAM_OFFSETTABLE;
     * }
     */
    public static final AddressLayout PARAM_OFFSETTABLE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short* PPARAM_OFFSETTABLE;
     * }
     */
    public static final AddressLayout PPARAM_OFFSETTABLE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum .XLAT_SERVER = 1;
     * }
     */
    public static int XLAT_SERVER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .XLAT_CLIENT = 2;
     * }
     */
    public static int XLAT_CLIENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef struct _FULL_PTR_XLAT_TABLES* PFULL_PTR_XLAT_TABLES;
     * }
     */
    public static final AddressLayout PFULL_PTR_XLAT_TABLES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_FILE = 0;
     * }
     */
    public static int SYSTEM_HANDLE_FILE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_SEMAPHORE = 1;
     * }
     */
    public static int SYSTEM_HANDLE_SEMAPHORE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_EVENT = 2;
     * }
     */
    public static int SYSTEM_HANDLE_EVENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_MUTEX = 3;
     * }
     */
    public static int SYSTEM_HANDLE_MUTEX() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_PROCESS = 4;
     * }
     */
    public static int SYSTEM_HANDLE_PROCESS() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_TOKEN = 5;
     * }
     */
    public static int SYSTEM_HANDLE_TOKEN() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_SECTION = 6;
     * }
     */
    public static int SYSTEM_HANDLE_SECTION() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_REG_KEY = 7;
     * }
     */
    public static int SYSTEM_HANDLE_REG_KEY() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_THREAD = 8;
     * }
     */
    public static int SYSTEM_HANDLE_THREAD() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_COMPOSITION_OBJECT = 9;
     * }
     */
    public static int SYSTEM_HANDLE_COMPOSITION_OBJECT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_SOCKET = 10;
     * }
     */
    public static int SYSTEM_HANDLE_SOCKET() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_JOB = 11;
     * }
     */
    public static int SYSTEM_HANDLE_JOB() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_PIPE = 12;
     * }
     */
    public static int SYSTEM_HANDLE_PIPE() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_MAX = 12;
     * }
     */
    public static int SYSTEM_HANDLE_MAX() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _system_handle_t.SYSTEM_HANDLE_INVALID = 255;
     * }
     */
    public static int SYSTEM_HANDLE_INVALID() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * enum .MidlInterceptionInfoVersionOne = 1;
     * }
     */
    public static int MidlInterceptionInfoVersionOne() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .MidlWinrtTypeSerializationInfoVersionOne = 1;
     * }
     */
    public static int MidlWinrtTypeSerializationInfoVersionOne() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef struct _MIDL_INTERCEPTION_INFO* PMIDL_INTERCEPTION_INFO;
     * }
     */
    public static final AddressLayout PMIDL_INTERCEPTION_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO* PMIDL_WINRT_TYPE_SERIALIZATION_INFO;
     * }
     */
    public static final AddressLayout PMIDL_WINRT_TYPE_SERIALIZATION_INFO = RuntimeHelper.POINTER;
    public static MethodHandle NdrClientGetSupportedSyntaxes$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$4,"NdrClientGetSupportedSyntaxes");
    }
    /**
     * {@snippet :
     * RPC_STATUS NdrClientGetSupportedSyntaxes(RPC_CLIENT_INTERFACE* pInf, unsigned long* pCount, MIDL_SYNTAX_INFO** pArr);
     * }
     */
    public static int NdrClientGetSupportedSyntaxes(MemorySegment pInf, MemorySegment pCount, MemorySegment pArr) {
        var mh$ = NdrClientGetSupportedSyntaxes$MH();
        try {
            return (int)mh$.invokeExact(pInf, pCount, pArr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerGetSupportedSyntaxes$MH() {
        return RuntimeHelper.requireNonNull(constants$2301.const$5,"NdrServerGetSupportedSyntaxes");
    }
    /**
     * {@snippet :
     * RPC_STATUS NdrServerGetSupportedSyntaxes(RPC_SERVER_INTERFACE* pInf, unsigned long* pCount, MIDL_SYNTAX_INFO** pArr, unsigned long* pPreferSyntaxIndex);
     * }
     */
    public static int NdrServerGetSupportedSyntaxes(MemorySegment pInf, MemorySegment pCount, MemorySegment pArr, MemorySegment pPreferSyntaxIndex) {
        var mh$ = NdrServerGetSupportedSyntaxes$MH();
        try {
            return (int)mh$.invokeExact(pInf, pCount, pArr, pPreferSyntaxIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleTypeMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$1,"NdrSimpleTypeMarshall");
    }
    /**
     * {@snippet :
     * void NdrSimpleTypeMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, unsigned char FormatChar);
     * }
     */
    public static void NdrSimpleTypeMarshall(MemorySegment pStubMsg, MemorySegment pMemory, byte FormatChar) {
        var mh$ = NdrSimpleTypeMarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, FormatChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPointerMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$2,"NdrPointerMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrPointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrPointerMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrPointerMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$3,"NdrCsArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrCsArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrCsArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrCsArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsTagMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$4,"NdrCsTagMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrCsTagMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrCsTagMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrCsTagMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleStructMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2302.const$5,"NdrSimpleStructMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrSimpleStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrSimpleStructMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrSimpleStructMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStructMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$0,"NdrConformantStructMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrConformantStructMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantStructMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingStructMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$1,"NdrConformantVaryingStructMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantVaryingStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrConformantVaryingStructMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingStructMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexStructMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$2,"NdrComplexStructMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrComplexStructMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrComplexStructMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexStructMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFixedArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$3,"NdrFixedArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrFixedArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrFixedArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrFixedArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$4,"NdrConformantArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrConformantArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2303.const$5,"NdrConformantVaryingArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantVaryingArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrConformantVaryingArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrVaryingArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$0,"NdrVaryingArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrVaryingArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrVaryingArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrVaryingArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexArrayMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$1,"NdrComplexArrayMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrComplexArrayMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrComplexArrayMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexArrayMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonConformantStringMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$2,"NdrNonConformantStringMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNonConformantStringMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrNonConformantStringMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrNonConformantStringMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStringMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$3,"NdrConformantStringMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantStringMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrConformantStringMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantStringMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrEncapsulatedUnionMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$4,"NdrEncapsulatedUnionMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrEncapsulatedUnionMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrEncapsulatedUnionMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrEncapsulatedUnionMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonEncapsulatedUnionMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2304.const$5,"NdrNonEncapsulatedUnionMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNonEncapsulatedUnionMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrNonEncapsulatedUnionMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrNonEncapsulatedUnionMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrByteCountPointerMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$0,"NdrByteCountPointerMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrByteCountPointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrByteCountPointerMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrByteCountPointerMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrXmitOrRepAsMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$1,"NdrXmitOrRepAsMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrXmitOrRepAsMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrXmitOrRepAsMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrXmitOrRepAsMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$2,"NdrUserMarshalMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrUserMarshalMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrUserMarshalMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrUserMarshalMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrInterfacePointerMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$3,"NdrInterfacePointerMarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrInterfacePointerMarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrInterfacePointerMarshall(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrInterfacePointerMarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientContextMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$4,"NdrClientContextMarshall");
    }
    /**
     * {@snippet :
     * void NdrClientContextMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_CCONTEXT ContextHandle, int fCheck);
     * }
     */
    public static void NdrClientContextMarshall(MemorySegment pStubMsg, MemorySegment ContextHandle, int fCheck) {
        var mh$ = NdrClientContextMarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, ContextHandle, fCheck);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerContextMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2305.const$5,"NdrServerContextMarshall");
    }
    /**
     * {@snippet :
     * void NdrServerContextMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_SCONTEXT ContextHandle, NDR_RUNDOWN RundownRoutine);
     * }
     */
    public static void NdrServerContextMarshall(MemorySegment pStubMsg, MemorySegment ContextHandle, MemorySegment RundownRoutine) {
        var mh$ = NdrServerContextMarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, ContextHandle, RundownRoutine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerContextNewMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.const$0,"NdrServerContextNewMarshall");
    }
    /**
     * {@snippet :
     * void NdrServerContextNewMarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_SCONTEXT ContextHandle, NDR_RUNDOWN RundownRoutine, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrServerContextNewMarshall(MemorySegment pStubMsg, MemorySegment ContextHandle, MemorySegment RundownRoutine, MemorySegment pFormat) {
        var mh$ = NdrServerContextNewMarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, ContextHandle, RundownRoutine, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleTypeUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.const$1,"NdrSimpleTypeUnmarshall");
    }
    /**
     * {@snippet :
     * void NdrSimpleTypeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, unsigned char FormatChar);
     * }
     */
    public static void NdrSimpleTypeUnmarshall(MemorySegment pStubMsg, MemorySegment pMemory, byte FormatChar) {
        var mh$ = NdrSimpleTypeUnmarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, FormatChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.const$3,"NdrCsArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrCsArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrCsArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrCsArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsTagUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.const$4,"NdrCsTagUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrCsTagUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrCsTagUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrCsTagUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRangeUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2306.const$5,"NdrRangeUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrRangeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrRangeUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrRangeUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCorrelationInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$0,"NdrCorrelationInitialize");
    }
    /**
     * {@snippet :
     * void NdrCorrelationInitialize(PMIDL_STUB_MESSAGE pStubMsg, void* pMemory, unsigned long CacheSize, unsigned long flags);
     * }
     */
    public static void NdrCorrelationInitialize(MemorySegment pStubMsg, MemorySegment pMemory, int CacheSize, int flags) {
        var mh$ = NdrCorrelationInitialize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, CacheSize, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCorrelationPass$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$1,"NdrCorrelationPass");
    }
    /**
     * {@snippet :
     * void NdrCorrelationPass(PMIDL_STUB_MESSAGE pStubMsg);
     * }
     */
    public static void NdrCorrelationPass(MemorySegment pStubMsg) {
        var mh$ = NdrCorrelationPass$MH();
        try {
            mh$.invokeExact(pStubMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCorrelationFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$2,"NdrCorrelationFree");
    }
    /**
     * {@snippet :
     * void NdrCorrelationFree(PMIDL_STUB_MESSAGE pStubMsg);
     * }
     */
    public static void NdrCorrelationFree(MemorySegment pStubMsg) {
        var mh$ = NdrCorrelationFree$MH();
        try {
            mh$.invokeExact(pStubMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPointerUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$3,"NdrPointerUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrPointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrPointerUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrPointerUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleStructUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$4,"NdrSimpleStructUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrSimpleStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrSimpleStructUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrSimpleStructUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStructUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2307.const$5,"NdrConformantStructUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrConformantStructUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrConformantStructUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingStructUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$0,"NdrConformantVaryingStructUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantVaryingStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrConformantVaryingStructUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrConformantVaryingStructUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexStructUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$1,"NdrComplexStructUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrComplexStructUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrComplexStructUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrComplexStructUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFixedArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$2,"NdrFixedArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrFixedArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrFixedArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrFixedArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$3,"NdrConformantArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrConformantArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrConformantArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$4,"NdrConformantVaryingArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantVaryingArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrConformantVaryingArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrConformantVaryingArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrVaryingArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2308.const$5,"NdrVaryingArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrVaryingArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrVaryingArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrVaryingArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexArrayUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$0,"NdrComplexArrayUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrComplexArrayUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrComplexArrayUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrComplexArrayUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonConformantStringUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$1,"NdrNonConformantStringUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNonConformantStringUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrNonConformantStringUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrNonConformantStringUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStringUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$2,"NdrConformantStringUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrConformantStringUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrConformantStringUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrConformantStringUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrEncapsulatedUnionUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$3,"NdrEncapsulatedUnionUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrEncapsulatedUnionUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrEncapsulatedUnionUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrEncapsulatedUnionUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonEncapsulatedUnionUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$4,"NdrNonEncapsulatedUnionUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNonEncapsulatedUnionUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrNonEncapsulatedUnionUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrNonEncapsulatedUnionUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrByteCountPointerUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2309.const$5,"NdrByteCountPointerUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrByteCountPointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrByteCountPointerUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrByteCountPointerUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrXmitOrRepAsUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$0,"NdrXmitOrRepAsUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrXmitOrRepAsUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrXmitOrRepAsUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrXmitOrRepAsUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$1,"NdrUserMarshalUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrUserMarshalUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrUserMarshalUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrUserMarshalUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrInterfacePointerUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$2,"NdrInterfacePointerUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrInterfacePointerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, unsigned char** ppMemory, PFORMAT_STRING pFormat, unsigned char fMustAlloc);
     * }
     */
    public static MemorySegment NdrInterfacePointerUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat, byte fMustAlloc) {
        var mh$ = NdrInterfacePointerUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, ppMemory, pFormat, fMustAlloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientContextUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$3,"NdrClientContextUnmarshall");
    }
    /**
     * {@snippet :
     * void NdrClientContextUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, NDR_CCONTEXT* pContextHandle, RPC_BINDING_HANDLE BindHandle);
     * }
     */
    public static void NdrClientContextUnmarshall(MemorySegment pStubMsg, MemorySegment pContextHandle, MemorySegment BindHandle) {
        var mh$ = NdrClientContextUnmarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, pContextHandle, BindHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerContextUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$4,"NdrServerContextUnmarshall");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NdrServerContextUnmarshall(PMIDL_STUB_MESSAGE pStubMsg);
     * }
     */
    public static MemorySegment NdrServerContextUnmarshall(MemorySegment pStubMsg) {
        var mh$ = NdrServerContextUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrContextHandleInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$2310.const$5,"NdrContextHandleInitialize");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NdrContextHandleInitialize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrContextHandleInitialize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrContextHandleInitialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerContextNewUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$0,"NdrServerContextNewUnmarshall");
    }
    /**
     * {@snippet :
     * NDR_SCONTEXT NdrServerContextNewUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static MemorySegment NdrServerContextNewUnmarshall(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrServerContextNewUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPointerBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$1,"NdrPointerBufferSize");
    }
    /**
     * {@snippet :
     * void NdrPointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrPointerBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrPointerBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$2,"NdrCsArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrCsArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrCsArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrCsArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsTagBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$3,"NdrCsTagBufferSize");
    }
    /**
     * {@snippet :
     * void NdrCsTagBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrCsTagBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrCsTagBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleStructBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$4,"NdrSimpleStructBufferSize");
    }
    /**
     * {@snippet :
     * void NdrSimpleStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrSimpleStructBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrSimpleStructBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStructBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2311.const$5,"NdrConformantStructBufferSize");
    }
    /**
     * {@snippet :
     * void NdrConformantStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantStructBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantStructBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingStructBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$0,"NdrConformantVaryingStructBufferSize");
    }
    /**
     * {@snippet :
     * void NdrConformantVaryingStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantVaryingStructBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingStructBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexStructBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$1,"NdrComplexStructBufferSize");
    }
    /**
     * {@snippet :
     * void NdrComplexStructBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrComplexStructBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexStructBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFixedArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$2,"NdrFixedArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrFixedArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrFixedArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrFixedArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$3,"NdrConformantArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrConformantArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$4,"NdrConformantVaryingArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrConformantVaryingArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantVaryingArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrVaryingArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2312.const$5,"NdrVaryingArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrVaryingArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrVaryingArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrVaryingArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexArrayBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$0,"NdrComplexArrayBufferSize");
    }
    /**
     * {@snippet :
     * void NdrComplexArrayBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrComplexArrayBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexArrayBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStringBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$1,"NdrConformantStringBufferSize");
    }
    /**
     * {@snippet :
     * void NdrConformantStringBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantStringBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantStringBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonConformantStringBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$2,"NdrNonConformantStringBufferSize");
    }
    /**
     * {@snippet :
     * void NdrNonConformantStringBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrNonConformantStringBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrNonConformantStringBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrEncapsulatedUnionBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$3,"NdrEncapsulatedUnionBufferSize");
    }
    /**
     * {@snippet :
     * void NdrEncapsulatedUnionBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrEncapsulatedUnionBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrEncapsulatedUnionBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonEncapsulatedUnionBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$4,"NdrNonEncapsulatedUnionBufferSize");
    }
    /**
     * {@snippet :
     * void NdrNonEncapsulatedUnionBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrNonEncapsulatedUnionBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrNonEncapsulatedUnionBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrByteCountPointerBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2313.const$5,"NdrByteCountPointerBufferSize");
    }
    /**
     * {@snippet :
     * void NdrByteCountPointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrByteCountPointerBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrByteCountPointerBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrXmitOrRepAsBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$0,"NdrXmitOrRepAsBufferSize");
    }
    /**
     * {@snippet :
     * void NdrXmitOrRepAsBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrXmitOrRepAsBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrXmitOrRepAsBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$1,"NdrUserMarshalBufferSize");
    }
    /**
     * {@snippet :
     * void NdrUserMarshalBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrUserMarshalBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrUserMarshalBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrInterfacePointerBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$2,"NdrInterfacePointerBufferSize");
    }
    /**
     * {@snippet :
     * void NdrInterfacePointerBufferSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrInterfacePointerBufferSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrInterfacePointerBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrContextHandleSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$3,"NdrContextHandleSize");
    }
    /**
     * {@snippet :
     * void NdrContextHandleSize(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrContextHandleSize(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrContextHandleSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPointerMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$4,"NdrPointerMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrPointerMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrPointerMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrPointerMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrContextHandleMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2314.const$5,"NdrContextHandleMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrContextHandleMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrContextHandleMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrContextHandleMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$0,"NdrCsArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrCsArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrCsArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrCsArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsTagMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$1,"NdrCsTagMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrCsTagMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrCsTagMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrCsTagMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleStructMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$2,"NdrSimpleStructMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrSimpleStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrSimpleStructMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrSimpleStructMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStructMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$3,"NdrConformantStructMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrConformantStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrConformantStructMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConformantStructMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingStructMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$4,"NdrConformantVaryingStructMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrConformantVaryingStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrConformantVaryingStructMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingStructMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexStructMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2315.const$5,"NdrComplexStructMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrComplexStructMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrComplexStructMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrComplexStructMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFixedArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$0,"NdrFixedArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrFixedArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrFixedArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrFixedArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$1,"NdrConformantArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrConformantArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrConformantArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConformantArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$2,"NdrConformantVaryingArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrConformantVaryingArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrConformantVaryingArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrVaryingArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$3,"NdrVaryingArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrVaryingArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrVaryingArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrVaryingArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexArrayMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$4,"NdrComplexArrayMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrComplexArrayMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrComplexArrayMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrComplexArrayMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStringMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2316.const$5,"NdrConformantStringMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrConformantStringMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrConformantStringMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConformantStringMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonConformantStringMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$0,"NdrNonConformantStringMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrNonConformantStringMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrNonConformantStringMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrNonConformantStringMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrEncapsulatedUnionMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$1,"NdrEncapsulatedUnionMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrEncapsulatedUnionMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrEncapsulatedUnionMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrEncapsulatedUnionMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonEncapsulatedUnionMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$2,"NdrNonEncapsulatedUnionMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrNonEncapsulatedUnionMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrNonEncapsulatedUnionMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrNonEncapsulatedUnionMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrXmitOrRepAsMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$3,"NdrXmitOrRepAsMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrXmitOrRepAsMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrXmitOrRepAsMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrXmitOrRepAsMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$4,"NdrUserMarshalMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrUserMarshalMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrUserMarshalMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrUserMarshalMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrInterfacePointerMemorySize$MH() {
        return RuntimeHelper.requireNonNull(constants$2317.const$5,"NdrInterfacePointerMemorySize");
    }
    /**
     * {@snippet :
     * unsigned long NdrInterfacePointerMemorySize(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static int NdrInterfacePointerMemorySize(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrInterfacePointerMemorySize$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPointerFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$0,"NdrPointerFree");
    }
    /**
     * {@snippet :
     * void NdrPointerFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrPointerFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrPointerFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCsArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$1,"NdrCsArrayFree");
    }
    /**
     * {@snippet :
     * void NdrCsArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrCsArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrCsArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSimpleStructFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$2,"NdrSimpleStructFree");
    }
    /**
     * {@snippet :
     * void NdrSimpleStructFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrSimpleStructFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrSimpleStructFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantStructFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$3,"NdrConformantStructFree");
    }
    /**
     * {@snippet :
     * void NdrConformantStructFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantStructFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantStructFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingStructFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$4,"NdrConformantVaryingStructFree");
    }
    /**
     * {@snippet :
     * void NdrConformantVaryingStructFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantVaryingStructFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingStructFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexStructFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2318.const$5,"NdrComplexStructFree");
    }
    /**
     * {@snippet :
     * void NdrComplexStructFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrComplexStructFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexStructFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFixedArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$0,"NdrFixedArrayFree");
    }
    /**
     * {@snippet :
     * void NdrFixedArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrFixedArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrFixedArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$1,"NdrConformantArrayFree");
    }
    /**
     * {@snippet :
     * void NdrConformantArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConformantVaryingArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$2,"NdrConformantVaryingArrayFree");
    }
    /**
     * {@snippet :
     * void NdrConformantVaryingArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConformantVaryingArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrConformantVaryingArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrVaryingArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$3,"NdrVaryingArrayFree");
    }
    /**
     * {@snippet :
     * void NdrVaryingArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrVaryingArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrVaryingArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrComplexArrayFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$4,"NdrComplexArrayFree");
    }
    /**
     * {@snippet :
     * void NdrComplexArrayFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrComplexArrayFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrComplexArrayFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrEncapsulatedUnionFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2319.const$5,"NdrEncapsulatedUnionFree");
    }
    /**
     * {@snippet :
     * void NdrEncapsulatedUnionFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrEncapsulatedUnionFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrEncapsulatedUnionFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNonEncapsulatedUnionFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$0,"NdrNonEncapsulatedUnionFree");
    }
    /**
     * {@snippet :
     * void NdrNonEncapsulatedUnionFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrNonEncapsulatedUnionFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrNonEncapsulatedUnionFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrByteCountPointerFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$1,"NdrByteCountPointerFree");
    }
    /**
     * {@snippet :
     * void NdrByteCountPointerFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrByteCountPointerFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrByteCountPointerFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrXmitOrRepAsFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$2,"NdrXmitOrRepAsFree");
    }
    /**
     * {@snippet :
     * void NdrXmitOrRepAsFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrXmitOrRepAsFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrXmitOrRepAsFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$3,"NdrUserMarshalFree");
    }
    /**
     * {@snippet :
     * void NdrUserMarshalFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrUserMarshalFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrUserMarshalFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrInterfacePointerFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$4,"NdrInterfacePointerFree");
    }
    /**
     * {@snippet :
     * void NdrInterfacePointerFree(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrInterfacePointerFree(MemorySegment pStubMsg, MemorySegment pMemory, MemorySegment pFormat) {
        var mh$ = NdrInterfacePointerFree$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConvert2$MH() {
        return RuntimeHelper.requireNonNull(constants$2320.const$5,"NdrConvert2");
    }
    /**
     * {@snippet :
     * void NdrConvert2(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat, long NumberParams);
     * }
     */
    public static void NdrConvert2(MemorySegment pStubMsg, MemorySegment pFormat, int NumberParams) {
        var mh$ = NdrConvert2$MH();
        try {
            mh$.invokeExact(pStubMsg, pFormat, NumberParams);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$0,"NdrConvert");
    }
    /**
     * {@snippet :
     * void NdrConvert(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrConvert(MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrConvert$MH();
        try {
            mh$.invokeExact(pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrUserMarshalSimpleTypeConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$2,"NdrUserMarshalSimpleTypeConvert");
    }
    /**
     * {@snippet :
     * unsigned char* NdrUserMarshalSimpleTypeConvert(unsigned long* pFlags, unsigned char* pBuffer, unsigned char FormatChar);
     * }
     */
    public static MemorySegment NdrUserMarshalSimpleTypeConvert(MemorySegment pFlags, MemorySegment pBuffer, byte FormatChar) {
        var mh$ = NdrUserMarshalSimpleTypeConvert$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pFlags, pBuffer, FormatChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientInitializeNew$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$3,"NdrClientInitializeNew");
    }
    /**
     * {@snippet :
     * void NdrClientInitializeNew(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, unsigned int ProcNum);
     * }
     */
    public static void NdrClientInitializeNew(MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor, int ProcNum) {
        var mh$ = NdrClientInitializeNew$MH();
        try {
            mh$.invokeExact(pRpcMsg, pStubMsg, pStubDescriptor, ProcNum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerInitializeNew$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$4,"NdrServerInitializeNew");
    }
    /**
     * {@snippet :
     * unsigned char* NdrServerInitializeNew(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor);
     * }
     */
    public static MemorySegment NdrServerInitializeNew(MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor) {
        var mh$ = NdrServerInitializeNew$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pRpcMsg, pStubMsg, pStubDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerInitializePartial$MH() {
        return RuntimeHelper.requireNonNull(constants$2321.const$5,"NdrServerInitializePartial");
    }
    /**
     * {@snippet :
     * void NdrServerInitializePartial(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, unsigned long RequestedBufferSize);
     * }
     */
    public static void NdrServerInitializePartial(MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor, int RequestedBufferSize) {
        var mh$ = NdrServerInitializePartial$MH();
        try {
            mh$.invokeExact(pRpcMsg, pStubMsg, pStubDescriptor, RequestedBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$0,"NdrClientInitialize");
    }
    /**
     * {@snippet :
     * void NdrClientInitialize(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, unsigned int ProcNum);
     * }
     */
    public static void NdrClientInitialize(MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor, int ProcNum) {
        var mh$ = NdrClientInitialize$MH();
        try {
            mh$.invokeExact(pRpcMsg, pStubMsg, pStubDescriptor, ProcNum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$1,"NdrServerInitialize");
    }
    /**
     * {@snippet :
     * unsigned char* NdrServerInitialize(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor);
     * }
     */
    public static MemorySegment NdrServerInitialize(MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor) {
        var mh$ = NdrServerInitialize$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pRpcMsg, pStubMsg, pStubDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerInitializeUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$2,"NdrServerInitializeUnmarshall");
    }
    /**
     * {@snippet :
     * unsigned char* NdrServerInitializeUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static MemorySegment NdrServerInitializeUnmarshall(MemorySegment pStubMsg, MemorySegment pStubDescriptor, MemorySegment pRpcMsg) {
        var mh$ = NdrServerInitializeUnmarshall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pStubDescriptor, pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerInitializeMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$3,"NdrServerInitializeMarshall");
    }
    /**
     * {@snippet :
     * void NdrServerInitializeMarshall(PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg);
     * }
     */
    public static void NdrServerInitializeMarshall(MemorySegment pRpcMsg, MemorySegment pStubMsg) {
        var mh$ = NdrServerInitializeMarshall$MH();
        try {
            mh$.invokeExact(pRpcMsg, pStubMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$4,"NdrGetBuffer");
    }
    /**
     * {@snippet :
     * unsigned char* NdrGetBuffer(PMIDL_STUB_MESSAGE pStubMsg, unsigned long BufferLength, RPC_BINDING_HANDLE Handle);
     * }
     */
    public static MemorySegment NdrGetBuffer(MemorySegment pStubMsg, int BufferLength, MemorySegment Handle) {
        var mh$ = NdrGetBuffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, BufferLength, Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNsGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2322.const$5,"NdrNsGetBuffer");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNsGetBuffer(PMIDL_STUB_MESSAGE pStubMsg, unsigned long BufferLength, RPC_BINDING_HANDLE Handle);
     * }
     */
    public static MemorySegment NdrNsGetBuffer(MemorySegment pStubMsg, int BufferLength, MemorySegment Handle) {
        var mh$ = NdrNsGetBuffer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, BufferLength, Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$0,"NdrSendReceive");
    }
    /**
     * {@snippet :
     * unsigned char* NdrSendReceive(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pBufferEnd);
     * }
     */
    public static MemorySegment NdrSendReceive(MemorySegment pStubMsg, MemorySegment pBufferEnd) {
        var mh$ = NdrSendReceive$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pBufferEnd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrNsSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$1,"NdrNsSendReceive");
    }
    /**
     * {@snippet :
     * unsigned char* NdrNsSendReceive(PMIDL_STUB_MESSAGE pStubMsg, unsigned char* pBufferEnd, RPC_BINDING_HANDLE* pAutoHandle);
     * }
     */
    public static MemorySegment NdrNsSendReceive(MemorySegment pStubMsg, MemorySegment pBufferEnd, MemorySegment pAutoHandle) {
        var mh$ = NdrNsSendReceive$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, pBufferEnd, pAutoHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFreeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$2,"NdrFreeBuffer");
    }
    /**
     * {@snippet :
     * void NdrFreeBuffer(PMIDL_STUB_MESSAGE pStubMsg);
     * }
     */
    public static void NdrFreeBuffer(MemorySegment pStubMsg) {
        var mh$ = NdrFreeBuffer$MH();
        try {
            mh$.invokeExact(pStubMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrGetDcomProtocolVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$3,"NdrGetDcomProtocolVersion");
    }
    /**
     * {@snippet :
     * HRESULT NdrGetDcomProtocolVersion(PMIDL_STUB_MESSAGE pStubMsg, RPC_VERSION* pVersion);
     * }
     */
    public static int NdrGetDcomProtocolVersion(MemorySegment pStubMsg, MemorySegment pVersion) {
        var mh$ = NdrGetDcomProtocolVersion$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pVersion);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientCall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2323.const$5,"NdrClientCall2");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN NdrClientCall2(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat,...);
     * }
     */
    public static MemorySegment NdrClientCall2(SegmentAllocator allocator, MemorySegment pStubDescriptor, MemorySegment pFormat, Object... x3) {
        var mh$ = NdrClientCall2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pStubDescriptor, pFormat, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$0,"NdrClientCall");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN NdrClientCall(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat,...);
     * }
     */
    public static MemorySegment NdrClientCall(SegmentAllocator allocator, MemorySegment pStubDescriptor, MemorySegment pFormat, Object... x3) {
        var mh$ = NdrClientCall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pStubDescriptor, pFormat, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrAsyncClientCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$1,"NdrAsyncClientCall");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN NdrAsyncClientCall(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat,...);
     * }
     */
    public static MemorySegment NdrAsyncClientCall(SegmentAllocator allocator, MemorySegment pStubDescriptor, MemorySegment pFormat, Object... x3) {
        var mh$ = NdrAsyncClientCall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pStubDescriptor, pFormat, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrDcomAsyncClientCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$2,"NdrDcomAsyncClientCall");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN NdrDcomAsyncClientCall(PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat,...);
     * }
     */
    public static MemorySegment NdrDcomAsyncClientCall(SegmentAllocator allocator, MemorySegment pStubDescriptor, MemorySegment pFormat, Object... x3) {
        var mh$ = NdrDcomAsyncClientCall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pStubDescriptor, pFormat, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum .STUB_UNMARSHAL = 0;
     * }
     */
    public static int STUB_UNMARSHAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .STUB_CALL_SERVER = 1;
     * }
     */
    public static int STUB_CALL_SERVER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .STUB_MARSHAL = 2;
     * }
     */
    public static int STUB_MARSHAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .STUB_CALL_SERVER_NO_HRESULT = 3;
     * }
     */
    public static int STUB_CALL_SERVER_NO_HRESULT() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .PROXY_CALCSIZE = 0;
     * }
     */
    public static int PROXY_CALCSIZE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .PROXY_GETBUFFER = 1;
     * }
     */
    public static int PROXY_GETBUFFER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .PROXY_MARSHAL = 2;
     * }
     */
    public static int PROXY_MARSHAL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .PROXY_SENDRECEIVE = 3;
     * }
     */
    public static int PROXY_SENDRECEIVE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum .PROXY_UNMARSHAL = 4;
     * }
     */
    public static int PROXY_UNMARSHAL() {
        return (int)4L;
    }
    public static MethodHandle NdrAsyncServerCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$3,"NdrAsyncServerCall");
    }
    /**
     * {@snippet :
     * void NdrAsyncServerCall(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrAsyncServerCall(MemorySegment pRpcMsg) {
        var mh$ = NdrAsyncServerCall$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrAsyncStubCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$4,"NdrAsyncStubCall");
    }
    /**
     * {@snippet :
     * long NdrAsyncStubCall(struct IRpcStubBuffer* pThis, struct IRpcChannelBuffer* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int NdrAsyncStubCall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = NdrAsyncStubCall$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrDcomAsyncStubCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2324.const$5,"NdrDcomAsyncStubCall");
    }
    /**
     * {@snippet :
     * long NdrDcomAsyncStubCall(struct IRpcStubBuffer* pThis, struct IRpcChannelBuffer* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int NdrDcomAsyncStubCall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = NdrDcomAsyncStubCall$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrStubCall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$0,"NdrStubCall2");
    }
    /**
     * {@snippet :
     * long NdrStubCall2(void* pThis, void* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int NdrStubCall2(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = NdrStubCall2$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerCall2$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$1,"NdrServerCall2");
    }
    /**
     * {@snippet :
     * void NdrServerCall2(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrServerCall2(MemorySegment pRpcMsg) {
        var mh$ = NdrServerCall2$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrStubCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$2,"NdrStubCall");
    }
    /**
     * {@snippet :
     * long NdrStubCall(void* pThis, void* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int NdrStubCall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = NdrStubCall$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$3,"NdrServerCall");
    }
    /**
     * {@snippet :
     * void NdrServerCall(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrServerCall(MemorySegment pRpcMsg) {
        var mh$ = NdrServerCall$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$4,"NdrServerUnmarshall");
    }
    /**
     * {@snippet :
     * int NdrServerUnmarshall(void* pChannel, PRPC_MESSAGE pRpcMsg, PMIDL_STUB_MESSAGE pStubMsg, PMIDL_STUB_DESC pStubDescriptor, PFORMAT_STRING pFormat, void* pParamList);
     * }
     */
    public static int NdrServerUnmarshall(MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pStubMsg, MemorySegment pStubDescriptor, MemorySegment pFormat, MemorySegment pParamList) {
        var mh$ = NdrServerUnmarshall$MH();
        try {
            return (int)mh$.invokeExact(pChannel, pRpcMsg, pStubMsg, pStubDescriptor, pFormat, pParamList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2325.const$5,"NdrServerMarshall");
    }
    /**
     * {@snippet :
     * void NdrServerMarshall(void* pThis, void* pChannel, PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrServerMarshall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pStubMsg, MemorySegment pFormat) {
        var mh$ = NdrServerMarshall$MH();
        try {
            mh$.invokeExact(pThis, pChannel, pStubMsg, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrMapCommAndFaultStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.const$0,"NdrMapCommAndFaultStatus");
    }
    /**
     * {@snippet :
     * RPC_STATUS NdrMapCommAndFaultStatus(PMIDL_STUB_MESSAGE pStubMsg, unsigned long* pCommStatus, unsigned long* pFaultStatus, RPC_STATUS Status);
     * }
     */
    public static int NdrMapCommAndFaultStatus(MemorySegment pStubMsg, MemorySegment pCommStatus, MemorySegment pFaultStatus, int Status) {
        var mh$ = NdrMapCommAndFaultStatus$MH();
        try {
            return (int)mh$.invokeExact(pStubMsg, pCommStatus, pFaultStatus, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* RPC_SS_THREAD_HANDLE;
     * }
     */
    public static final AddressLayout RPC_SS_THREAD_HANDLE = RuntimeHelper.POINTER;
    public static MethodHandle RpcSsAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.const$3,"RpcSsAllocate");
    }
    /**
     * {@snippet :
     * void* RpcSsAllocate(size_t Size);
     * }
     */
    public static MemorySegment RpcSsAllocate(long Size) {
        var mh$ = RpcSsAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsDisableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.const$4,"RpcSsDisableAllocate");
    }
    /**
     * {@snippet :
     * void RpcSsDisableAllocate();
     * }
     */
    public static void RpcSsDisableAllocate() {
        var mh$ = RpcSsDisableAllocate$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsEnableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2326.const$5,"RpcSsEnableAllocate");
    }
    /**
     * {@snippet :
     * void RpcSsEnableAllocate();
     * }
     */
    public static void RpcSsEnableAllocate() {
        var mh$ = RpcSsEnableAllocate$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.const$0,"RpcSsFree");
    }
    /**
     * {@snippet :
     * void RpcSsFree(void* NodeToFree);
     * }
     */
    public static void RpcSsFree(MemorySegment NodeToFree) {
        var mh$ = RpcSsFree$MH();
        try {
            mh$.invokeExact(NodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsGetThreadHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.const$1,"RpcSsGetThreadHandle");
    }
    /**
     * {@snippet :
     * RPC_SS_THREAD_HANDLE RpcSsGetThreadHandle();
     * }
     */
    public static MemorySegment RpcSsGetThreadHandle() {
        var mh$ = RpcSsGetThreadHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsSetClientAllocFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.const$4,"RpcSsSetClientAllocFree");
    }
    /**
     * {@snippet :
     * void RpcSsSetClientAllocFree(void* (*ClientAlloc)(size_t), void (*ClientFree)(void*));
     * }
     */
    public static void RpcSsSetClientAllocFree(MemorySegment ClientAlloc, MemorySegment ClientFree) {
        var mh$ = RpcSsSetClientAllocFree$MH();
        try {
            mh$.invokeExact(ClientAlloc, ClientFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsSetThreadHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2327.const$5,"RpcSsSetThreadHandle");
    }
    /**
     * {@snippet :
     * void RpcSsSetThreadHandle(RPC_SS_THREAD_HANDLE Id);
     * }
     */
    public static void RpcSsSetThreadHandle(MemorySegment Id) {
        var mh$ = RpcSsSetThreadHandle$MH();
        try {
            mh$.invokeExact(Id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsSwapClientAllocFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.const$4,"RpcSsSwapClientAllocFree");
    }
    /**
     * {@snippet :
     * void RpcSsSwapClientAllocFree(void* (*ClientAlloc)(size_t), void (*ClientFree)(void*), void* (**OldClientAlloc)(size_t), void (**OldClientFree)(void*));
     * }
     */
    public static void RpcSsSwapClientAllocFree(MemorySegment ClientAlloc, MemorySegment ClientFree, MemorySegment OldClientAlloc, MemorySegment OldClientFree) {
        var mh$ = RpcSsSwapClientAllocFree$MH();
        try {
            mh$.invokeExact(ClientAlloc, ClientFree, OldClientAlloc, OldClientFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2328.const$5,"RpcSmAllocate");
    }
    /**
     * {@snippet :
     * void* RpcSmAllocate(size_t Size, RPC_STATUS* pStatus);
     * }
     */
    public static MemorySegment RpcSmAllocate(long Size, MemorySegment pStatus) {
        var mh$ = RpcSmAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size, pStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmClientFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$0,"RpcSmClientFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmClientFree(void* pNodeToFree);
     * }
     */
    public static int RpcSmClientFree(MemorySegment pNodeToFree) {
        var mh$ = RpcSmClientFree$MH();
        try {
            return (int)mh$.invokeExact(pNodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmDestroyClientContext$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$1,"RpcSmDestroyClientContext");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmDestroyClientContext(void** ContextHandle);
     * }
     */
    public static int RpcSmDestroyClientContext(MemorySegment ContextHandle) {
        var mh$ = RpcSmDestroyClientContext$MH();
        try {
            return (int)mh$.invokeExact(ContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmDisableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$2,"RpcSmDisableAllocate");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmDisableAllocate();
     * }
     */
    public static int RpcSmDisableAllocate() {
        var mh$ = RpcSmDisableAllocate$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmEnableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$3,"RpcSmEnableAllocate");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmEnableAllocate();
     * }
     */
    public static int RpcSmEnableAllocate() {
        var mh$ = RpcSmEnableAllocate$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$4,"RpcSmFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmFree(void* NodeToFree);
     * }
     */
    public static int RpcSmFree(MemorySegment NodeToFree) {
        var mh$ = RpcSmFree$MH();
        try {
            return (int)mh$.invokeExact(NodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmGetThreadHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2329.const$5,"RpcSmGetThreadHandle");
    }
    /**
     * {@snippet :
     * RPC_SS_THREAD_HANDLE RpcSmGetThreadHandle(RPC_STATUS* pStatus);
     * }
     */
    public static MemorySegment RpcSmGetThreadHandle(MemorySegment pStatus) {
        var mh$ = RpcSmGetThreadHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmSetClientAllocFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.const$2,"RpcSmSetClientAllocFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmSetClientAllocFree(void* (*ClientAlloc)(size_t), void (*ClientFree)(void*));
     * }
     */
    public static int RpcSmSetClientAllocFree(MemorySegment ClientAlloc, MemorySegment ClientFree) {
        var mh$ = RpcSmSetClientAllocFree$MH();
        try {
            return (int)mh$.invokeExact(ClientAlloc, ClientFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmSetThreadHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$2330.const$3,"RpcSmSetThreadHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmSetThreadHandle(RPC_SS_THREAD_HANDLE Id);
     * }
     */
    public static int RpcSmSetThreadHandle(MemorySegment Id) {
        var mh$ = RpcSmSetThreadHandle$MH();
        try {
            return (int)mh$.invokeExact(Id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSmSwapClientAllocFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.const$2,"RpcSmSwapClientAllocFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSmSwapClientAllocFree(void* (*ClientAlloc)(size_t), void (*ClientFree)(void*), void* (**OldClientAlloc)(size_t), void (**OldClientFree)(void*));
     * }
     */
    public static int RpcSmSwapClientAllocFree(MemorySegment ClientAlloc, MemorySegment ClientFree, MemorySegment OldClientAlloc, MemorySegment OldClientFree) {
        var mh$ = RpcSmSwapClientAllocFree$MH();
        try {
            return (int)mh$.invokeExact(ClientAlloc, ClientFree, OldClientAlloc, OldClientFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSsEnableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.const$3,"NdrRpcSsEnableAllocate");
    }
    /**
     * {@snippet :
     * void NdrRpcSsEnableAllocate(PMIDL_STUB_MESSAGE pMessage);
     * }
     */
    public static void NdrRpcSsEnableAllocate(MemorySegment pMessage) {
        var mh$ = NdrRpcSsEnableAllocate$MH();
        try {
            mh$.invokeExact(pMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSsDisableAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.const$4,"NdrRpcSsDisableAllocate");
    }
    /**
     * {@snippet :
     * void NdrRpcSsDisableAllocate(PMIDL_STUB_MESSAGE pMessage);
     * }
     */
    public static void NdrRpcSsDisableAllocate(MemorySegment pMessage) {
        var mh$ = NdrRpcSsDisableAllocate$MH();
        try {
            mh$.invokeExact(pMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSmSetClientToOsf$MH() {
        return RuntimeHelper.requireNonNull(constants$2331.const$5,"NdrRpcSmSetClientToOsf");
    }
    /**
     * {@snippet :
     * void NdrRpcSmSetClientToOsf(PMIDL_STUB_MESSAGE pMessage);
     * }
     */
    public static void NdrRpcSmSetClientToOsf(MemorySegment pMessage) {
        var mh$ = NdrRpcSmSetClientToOsf$MH();
        try {
            mh$.invokeExact(pMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSmClientAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$0,"NdrRpcSmClientAllocate");
    }
    /**
     * {@snippet :
     * void* NdrRpcSmClientAllocate(size_t Size);
     * }
     */
    public static MemorySegment NdrRpcSmClientAllocate(long Size) {
        var mh$ = NdrRpcSmClientAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSmClientFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$1,"NdrRpcSmClientFree");
    }
    /**
     * {@snippet :
     * void NdrRpcSmClientFree(void* NodeToFree);
     * }
     */
    public static void NdrRpcSmClientFree(MemorySegment NodeToFree) {
        var mh$ = NdrRpcSmClientFree$MH();
        try {
            mh$.invokeExact(NodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSsDefaultAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$2,"NdrRpcSsDefaultAllocate");
    }
    /**
     * {@snippet :
     * void* NdrRpcSsDefaultAllocate(size_t Size);
     * }
     */
    public static MemorySegment NdrRpcSsDefaultAllocate(long Size) {
        var mh$ = NdrRpcSsDefaultAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrRpcSsDefaultFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$3,"NdrRpcSsDefaultFree");
    }
    /**
     * {@snippet :
     * void NdrRpcSsDefaultFree(void* NodeToFree);
     * }
     */
    public static void NdrRpcSsDefaultFree(MemorySegment NodeToFree) {
        var mh$ = NdrRpcSsDefaultFree$MH();
        try {
            mh$.invokeExact(NodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFullPointerXlatInit$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$4,"NdrFullPointerXlatInit");
    }
    /**
     * {@snippet :
     * PFULL_PTR_XLAT_TABLES NdrFullPointerXlatInit(unsigned long NumberOfPointers, XLAT_SIDE XlatSide);
     * }
     */
    public static MemorySegment NdrFullPointerXlatInit(int NumberOfPointers, int XlatSide) {
        var mh$ = NdrFullPointerXlatInit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(NumberOfPointers, XlatSide);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrFullPointerXlatFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2332.const$5,"NdrFullPointerXlatFree");
    }
    /**
     * {@snippet :
     * void NdrFullPointerXlatFree(PFULL_PTR_XLAT_TABLES pXlatTables);
     * }
     */
    public static void NdrFullPointerXlatFree(MemorySegment pXlatTables) {
        var mh$ = NdrFullPointerXlatFree$MH();
        try {
            mh$.invokeExact(pXlatTables);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.const$1,"NdrAllocate");
    }
    /**
     * {@snippet :
     * void* NdrAllocate(PMIDL_STUB_MESSAGE pStubMsg, size_t Len);
     * }
     */
    public static MemorySegment NdrAllocate(MemorySegment pStubMsg, long Len) {
        var mh$ = NdrAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pStubMsg, Len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClearOutParameters$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.const$2,"NdrClearOutParameters");
    }
    /**
     * {@snippet :
     * void NdrClearOutParameters(PMIDL_STUB_MESSAGE pStubMsg, PFORMAT_STRING pFormat, void* ArgAddr);
     * }
     */
    public static void NdrClearOutParameters(MemorySegment pStubMsg, MemorySegment pFormat, MemorySegment ArgAddr) {
        var mh$ = NdrClearOutParameters$MH();
        try {
            mh$.invokeExact(pStubMsg, pFormat, ArgAddr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrOleAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.const$3,"NdrOleAllocate");
    }
    /**
     * {@snippet :
     * void* NdrOleAllocate(size_t Size);
     * }
     */
    public static MemorySegment NdrOleAllocate(long Size) {
        var mh$ = NdrOleAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrOleFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2333.const$4,"NdrOleFree");
    }
    /**
     * {@snippet :
     * void NdrOleFree(void* NodeToFree);
     * }
     */
    public static void NdrOleFree(MemorySegment NodeToFree) {
        var mh$ = NdrOleFree$MH();
        try {
            mh$.invokeExact(NodeToFree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrGetUserMarshalInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$3,"NdrGetUserMarshalInfo");
    }
    /**
     * {@snippet :
     * RPC_STATUS NdrGetUserMarshalInfo(unsigned long* pFlags, unsigned long InformationLevel, NDR_USER_MARSHAL_INFO* pMarshalInfo);
     * }
     */
    public static int NdrGetUserMarshalInfo(MemorySegment pFlags, int InformationLevel, MemorySegment pMarshalInfo) {
        var mh$ = NdrGetUserMarshalInfo$MH();
        try {
            return (int)mh$.invokeExact(pFlags, InformationLevel, pMarshalInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrCreateServerInterfaceFromStub$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$4,"NdrCreateServerInterfaceFromStub");
    }
    /**
     * {@snippet :
     * RPC_STATUS NdrCreateServerInterfaceFromStub(struct IRpcStubBuffer* pStub, RPC_SERVER_INTERFACE* pServerIf);
     * }
     */
    public static int NdrCreateServerInterfaceFromStub(MemorySegment pStub, MemorySegment pServerIf) {
        var mh$ = NdrCreateServerInterfaceFromStub$MH();
        try {
            return (int)mh$.invokeExact(pStub, pServerIf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrClientCall3$MH() {
        return RuntimeHelper.requireNonNull(constants$2335.const$6,"NdrClientCall3");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN NdrClientCall3(MIDL_STUBLESS_PROXY_INFO* pProxyInfo, unsigned long nProcNum, void* pReturnValue,...);
     * }
     */
    public static MemorySegment NdrClientCall3(SegmentAllocator allocator, MemorySegment pProxyInfo, int nProcNum, MemorySegment pReturnValue, Object... x4) {
        var mh$ = NdrClientCall3$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pProxyInfo, nProcNum, pReturnValue, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64AsyncClientCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$0,"Ndr64AsyncClientCall");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN Ndr64AsyncClientCall(MIDL_STUBLESS_PROXY_INFO* pProxyInfo, unsigned long nProcNum, void* pReturnValue,...);
     * }
     */
    public static MemorySegment Ndr64AsyncClientCall(SegmentAllocator allocator, MemorySegment pProxyInfo, int nProcNum, MemorySegment pReturnValue, Object... x4) {
        var mh$ = Ndr64AsyncClientCall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pProxyInfo, nProcNum, pReturnValue, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64DcomAsyncClientCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$1,"Ndr64DcomAsyncClientCall");
    }
    /**
     * {@snippet :
     * CLIENT_CALL_RETURN Ndr64DcomAsyncClientCall(MIDL_STUBLESS_PROXY_INFO* pProxyInfo, unsigned long nProcNum, void* pReturnValue,...);
     * }
     */
    public static MemorySegment Ndr64DcomAsyncClientCall(SegmentAllocator allocator, MemorySegment pProxyInfo, int nProcNum, MemorySegment pReturnValue, Object... x4) {
        var mh$ = Ndr64DcomAsyncClientCall$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, pProxyInfo, nProcNum, pReturnValue, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64AsyncServerCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$2,"Ndr64AsyncServerCall");
    }
    /**
     * {@snippet :
     * void Ndr64AsyncServerCall(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void Ndr64AsyncServerCall(MemorySegment pRpcMsg) {
        var mh$ = Ndr64AsyncServerCall$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64AsyncServerCall64$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$3,"Ndr64AsyncServerCall64");
    }
    /**
     * {@snippet :
     * void Ndr64AsyncServerCall64(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void Ndr64AsyncServerCall64(MemorySegment pRpcMsg) {
        var mh$ = Ndr64AsyncServerCall64$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64AsyncServerCallAll$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$4,"Ndr64AsyncServerCallAll");
    }
    /**
     * {@snippet :
     * void Ndr64AsyncServerCallAll(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void Ndr64AsyncServerCallAll(MemorySegment pRpcMsg) {
        var mh$ = Ndr64AsyncServerCallAll$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64AsyncStubCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2336.const$5,"Ndr64AsyncStubCall");
    }
    /**
     * {@snippet :
     * long Ndr64AsyncStubCall(struct IRpcStubBuffer* pThis, struct IRpcChannelBuffer* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int Ndr64AsyncStubCall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = Ndr64AsyncStubCall$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Ndr64DcomAsyncStubCall$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$0,"Ndr64DcomAsyncStubCall");
    }
    /**
     * {@snippet :
     * long Ndr64DcomAsyncStubCall(struct IRpcStubBuffer* pThis, struct IRpcChannelBuffer* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int Ndr64DcomAsyncStubCall(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = Ndr64DcomAsyncStubCall$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrStubCall3$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$1,"NdrStubCall3");
    }
    /**
     * {@snippet :
     * long NdrStubCall3(void* pThis, void* pChannel, PRPC_MESSAGE pRpcMsg, unsigned long* pdwStubPhase);
     * }
     */
    public static int NdrStubCall3(MemorySegment pThis, MemorySegment pChannel, MemorySegment pRpcMsg, MemorySegment pdwStubPhase) {
        var mh$ = NdrStubCall3$MH();
        try {
            return (int)mh$.invokeExact(pThis, pChannel, pRpcMsg, pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerCallAll$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$2,"NdrServerCallAll");
    }
    /**
     * {@snippet :
     * void NdrServerCallAll(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrServerCallAll(MemorySegment pRpcMsg) {
        var mh$ = NdrServerCallAll$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerCallNdr64$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$3,"NdrServerCallNdr64");
    }
    /**
     * {@snippet :
     * void NdrServerCallNdr64(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrServerCallNdr64(MemorySegment pRpcMsg) {
        var mh$ = NdrServerCallNdr64$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrServerCall3$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$4,"NdrServerCall3");
    }
    /**
     * {@snippet :
     * void NdrServerCall3(PRPC_MESSAGE pRpcMsg);
     * }
     */
    public static void NdrServerCall3(MemorySegment pRpcMsg) {
        var mh$ = NdrServerCall3$MH();
        try {
            mh$.invokeExact(pRpcMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPartialIgnoreClientMarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2337.const$5,"NdrPartialIgnoreClientMarshall");
    }
    /**
     * {@snippet :
     * void NdrPartialIgnoreClientMarshall(PMIDL_STUB_MESSAGE pStubMsg, void* pMemory);
     * }
     */
    public static void NdrPartialIgnoreClientMarshall(MemorySegment pStubMsg, MemorySegment pMemory) {
        var mh$ = NdrPartialIgnoreClientMarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPartialIgnoreServerUnmarshall$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$0,"NdrPartialIgnoreServerUnmarshall");
    }
    /**
     * {@snippet :
     * void NdrPartialIgnoreServerUnmarshall(PMIDL_STUB_MESSAGE pStubMsg, void** ppMemory);
     * }
     */
    public static void NdrPartialIgnoreServerUnmarshall(MemorySegment pStubMsg, MemorySegment ppMemory) {
        var mh$ = NdrPartialIgnoreServerUnmarshall$MH();
        try {
            mh$.invokeExact(pStubMsg, ppMemory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPartialIgnoreClientBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$1,"NdrPartialIgnoreClientBufferSize");
    }
    /**
     * {@snippet :
     * void NdrPartialIgnoreClientBufferSize(PMIDL_STUB_MESSAGE pStubMsg, void* pMemory);
     * }
     */
    public static void NdrPartialIgnoreClientBufferSize(MemorySegment pStubMsg, MemorySegment pMemory) {
        var mh$ = NdrPartialIgnoreClientBufferSize$MH();
        try {
            mh$.invokeExact(pStubMsg, pMemory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NdrPartialIgnoreServerInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$2,"NdrPartialIgnoreServerInitialize");
    }
    /**
     * {@snippet :
     * void NdrPartialIgnoreServerInitialize(PMIDL_STUB_MESSAGE pStubMsg, void** ppMemory, PFORMAT_STRING pFormat);
     * }
     */
    public static void NdrPartialIgnoreServerInitialize(MemorySegment pStubMsg, MemorySegment ppMemory, MemorySegment pFormat) {
        var mh$ = NdrPartialIgnoreServerInitialize$MH();
        try {
            mh$.invokeExact(pStubMsg, ppMemory, pFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcUserFree$MH() {
        return RuntimeHelper.requireNonNull(constants$2338.const$3,"RpcUserFree");
    }
    /**
     * {@snippet :
     * void RpcUserFree(handle_t AsyncHandle, void* pBuffer);
     * }
     */
    public static void RpcUserFree(MemorySegment AsyncHandle, MemorySegment pBuffer) {
        var mh$ = RpcUserFree$MH();
        try {
            mh$.invokeExact(AsyncHandle, pBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2338.const$5,"__MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2338.const$5, "__MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2338.const$5, "__MIDL_itf_wtypesbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2339.const$0,"__MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2339.const$0, "__MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2339.const$0, "__MIDL_itf_wtypesbase_0000_0000_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef unsigned short OLECHAR;
     * }
     */
    public static final OfShort OLECHAR = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned short* LPOLESTR;
     * }
     */
    public static final AddressLayout LPOLESTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short* LPCOLESTR;
     * }
     */
    public static final AddressLayout LPCOLESTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef double DOUBLE;
     * }
     */
    public static final OfDouble DOUBLE = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef long SCODE;
     * }
     */
    public static final OfInt SCODE = JAVA_INT;
    /**
     * {@snippet :
     * typedef long* PSCODE;
     * }
     */
    public static final AddressLayout PSCODE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum tagMEMCTX.MEMCTX_TASK = 1;
     * }
     */
    public static int MEMCTX_TASK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagMEMCTX.MEMCTX_SHARED = 2;
     * }
     */
    public static int MEMCTX_SHARED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagMEMCTX.MEMCTX_MACSYSTEM = 3;
     * }
     */
    public static int MEMCTX_MACSYSTEM() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum tagMEMCTX.MEMCTX_UNKNOWN = -1;
     * }
     */
    public static int MEMCTX_UNKNOWN() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * enum tagMEMCTX.MEMCTX_SAME = -2;
     * }
     */
    public static int MEMCTX_SAME() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_INPROC_SERVER = 1;
     * }
     */
    public static int CLSCTX_INPROC_SERVER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_INPROC_HANDLER = 2;
     * }
     */
    public static int CLSCTX_INPROC_HANDLER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_LOCAL_SERVER = 4;
     * }
     */
    public static int CLSCTX_LOCAL_SERVER() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_INPROC_SERVER16 = 8;
     * }
     */
    public static int CLSCTX_INPROC_SERVER16() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_REMOTE_SERVER = 16;
     * }
     */
    public static int CLSCTX_REMOTE_SERVER() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_INPROC_HANDLER16 = 32;
     * }
     */
    public static int CLSCTX_INPROC_HANDLER16() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED1 = 64;
     * }
     */
    public static int CLSCTX_RESERVED1() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED2 = 128;
     * }
     */
    public static int CLSCTX_RESERVED2() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED3 = 256;
     * }
     */
    public static int CLSCTX_RESERVED3() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED4 = 512;
     * }
     */
    public static int CLSCTX_RESERVED4() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_NO_CODE_DOWNLOAD = 1024;
     * }
     */
    public static int CLSCTX_NO_CODE_DOWNLOAD() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED5 = 2048;
     * }
     */
    public static int CLSCTX_RESERVED5() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_NO_CUSTOM_MARSHAL = 4096;
     * }
     */
    public static int CLSCTX_NO_CUSTOM_MARSHAL() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ENABLE_CODE_DOWNLOAD = 8192;
     * }
     */
    public static int CLSCTX_ENABLE_CODE_DOWNLOAD() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_NO_FAILURE_LOG = 16384;
     * }
     */
    public static int CLSCTX_NO_FAILURE_LOG() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_DISABLE_AAA = 32768;
     * }
     */
    public static int CLSCTX_DISABLE_AAA() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ENABLE_AAA = 65536;
     * }
     */
    public static int CLSCTX_ENABLE_AAA() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_FROM_DEFAULT_CONTEXT = 131072;
     * }
     */
    public static int CLSCTX_FROM_DEFAULT_CONTEXT() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ACTIVATE_X86_SERVER = 262144;
     * }
     */
    public static int CLSCTX_ACTIVATE_X86_SERVER() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ACTIVATE_32_BIT_SERVER = 262144;
     * }
     */
    public static int CLSCTX_ACTIVATE_32_BIT_SERVER() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ACTIVATE_64_BIT_SERVER = 524288;
     * }
     */
    public static int CLSCTX_ACTIVATE_64_BIT_SERVER() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ENABLE_CLOAKING = 1048576;
     * }
     */
    public static int CLSCTX_ENABLE_CLOAKING() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_APPCONTAINER = 4194304;
     * }
     */
    public static int CLSCTX_APPCONTAINER() {
        return (int)4194304L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ACTIVATE_AAA_AS_IU = 8388608;
     * }
     */
    public static int CLSCTX_ACTIVATE_AAA_AS_IU() {
        return (int)8388608L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_RESERVED6 = 16777216;
     * }
     */
    public static int CLSCTX_RESERVED6() {
        return (int)16777216L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ACTIVATE_ARM32_SERVER = 33554432;
     * }
     */
    public static int CLSCTX_ACTIVATE_ARM32_SERVER() {
        return (int)33554432L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_ALLOW_LOWER_TRUST_REGISTRATION = 67108864;
     * }
     */
    public static int CLSCTX_ALLOW_LOWER_TRUST_REGISTRATION() {
        return (int)67108864L;
    }
    /**
     * {@snippet :
     * enum tagCLSCTX.CLSCTX_PS_DLL = -2147483648;
     * }
     */
    public static int CLSCTX_PS_DLL() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_NORMAL = 0;
     * }
     */
    public static int MSHLFLAGS_NORMAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_TABLESTRONG = 1;
     * }
     */
    public static int MSHLFLAGS_TABLESTRONG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_TABLEWEAK = 2;
     * }
     */
    public static int MSHLFLAGS_TABLEWEAK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_NOPING = 4;
     * }
     */
    public static int MSHLFLAGS_NOPING() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_RESERVED1 = 8;
     * }
     */
    public static int MSHLFLAGS_RESERVED1() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_RESERVED2 = 16;
     * }
     */
    public static int MSHLFLAGS_RESERVED2() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_RESERVED3 = 32;
     * }
     */
    public static int MSHLFLAGS_RESERVED3() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum tagMSHLFLAGS.MSHLFLAGS_RESERVED4 = 64;
     * }
     */
    public static int MSHLFLAGS_RESERVED4() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_LOCAL = 0;
     * }
     */
    public static int MSHCTX_LOCAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_NOSHAREDMEM = 1;
     * }
     */
    public static int MSHCTX_NOSHAREDMEM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_DIFFERENTMACHINE = 2;
     * }
     */
    public static int MSHCTX_DIFFERENTMACHINE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_INPROC = 3;
     * }
     */
    public static int MSHCTX_INPROC() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_CROSSCTX = 4;
     * }
     */
    public static int MSHCTX_CROSSCTX() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagMSHCTX.MSHCTX_CONTAINER = 5;
     * }
     */
    public static int MSHCTX_CONTAINER() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef struct _BYTE_BLOB* UP_BYTE_BLOB;
     * }
     */
    public static final AddressLayout UP_BYTE_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _WORD_BLOB* UP_WORD_BLOB;
     * }
     */
    public static final AddressLayout UP_WORD_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DWORD_BLOB* UP_DWORD_BLOB;
     * }
     */
    public static final AddressLayout UP_DWORD_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FLAGGED_BYTE_BLOB* UP_FLAGGED_BYTE_BLOB;
     * }
     */
    public static final AddressLayout UP_FLAGGED_BYTE_BLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FLAGGED_WORD_BLOB* UP_FLAGGED_WORD_BLOB;
     * }
     */
    public static final AddressLayout UP_FLAGGED_WORD_BLOB = RuntimeHelper.POINTER;
    public static MemoryLayout IWinTypesBase_v0_1_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle IWinTypesBase_v0_1_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment IWinTypesBase_v0_1_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2345.const$5,"IWinTypesBase_v0_1_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypesBase_v0_1_c_ifspec;
     * }
     */
    public static MemorySegment IWinTypesBase_v0_1_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2345.const$5, "IWinTypesBase_v0_1_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypesBase_v0_1_c_ifspec;
     * }
     */
    public static void IWinTypesBase_v0_1_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2345.const$5, "IWinTypesBase_v0_1_c_ifspec"), x);
    }
    public static MemoryLayout IWinTypesBase_v0_1_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle IWinTypesBase_v0_1_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment IWinTypesBase_v0_1_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2346.const$0,"IWinTypesBase_v0_1_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypesBase_v0_1_s_ifspec;
     * }
     */
    public static MemorySegment IWinTypesBase_v0_1_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2346.const$0, "IWinTypesBase_v0_1_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypesBase_v0_1_s_ifspec;
     * }
     */
    public static void IWinTypesBase_v0_1_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2346.const$0, "IWinTypesBase_v0_1_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef struct tagBLOB* LPBLOB;
     * }
     */
    public static final AddressLayout LPBLOB = RuntimeHelper.POINTER;
    public static MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2346.const$4,"__MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2346.const$4, "__MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2346.const$4, "__MIDL_itf_wtypesbase_0000_0001_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2346.const$5,"__MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2346.const$5, "__MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2346.const$5, "__MIDL_itf_wtypesbase_0000_0001_v0_0_s_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2347.const$0,"__MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2347.const$0, "__MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2347.const$0, "__MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2347.const$1,"__MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2347.const$1, "__MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2347.const$1, "__MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * enum tagDVASPECT.DVASPECT_CONTENT = 1;
     * }
     */
    public static int DVASPECT_CONTENT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagDVASPECT.DVASPECT_THUMBNAIL = 2;
     * }
     */
    public static int DVASPECT_THUMBNAIL() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagDVASPECT.DVASPECT_ICON = 4;
     * }
     */
    public static int DVASPECT_ICON() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagDVASPECT.DVASPECT_DOCPRINT = 8;
     * }
     */
    public static int DVASPECT_DOCPRINT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagSTGC.STGC_DEFAULT = 0;
     * }
     */
    public static int STGC_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagSTGC.STGC_OVERWRITE = 1;
     * }
     */
    public static int STGC_OVERWRITE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTGC.STGC_ONLYIFCURRENT = 2;
     * }
     */
    public static int STGC_ONLYIFCURRENT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagSTGC.STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4;
     * }
     */
    public static int STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagSTGC.STGC_CONSOLIDATE = 8;
     * }
     */
    public static int STGC_CONSOLIDATE() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum tagSTGMOVE.STGMOVE_MOVE = 0;
     * }
     */
    public static int STGMOVE_MOVE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagSTGMOVE.STGMOVE_COPY = 1;
     * }
     */
    public static int STGMOVE_COPY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTGMOVE.STGMOVE_SHALLOWCOPY = 2;
     * }
     */
    public static int STGMOVE_SHALLOWCOPY() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagSTATFLAG.STATFLAG_DEFAULT = 0;
     * }
     */
    public static int STATFLAG_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagSTATFLAG.STATFLAG_NONAME = 1;
     * }
     */
    public static int STATFLAG_NONAME() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagSTATFLAG.STATFLAG_NOOPEN = 2;
     * }
     */
    public static int STATFLAG_NOOPEN() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef void* HCONTEXT;
     * }
     */
    public static final AddressLayout HCONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userCLIPFORMAT* wireCLIPFORMAT;
     * }
     */
    public static final AddressLayout wireCLIPFORMAT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short CLIPFORMAT;
     * }
     */
    public static final OfShort CLIPFORMAT = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef struct _userHGLOBAL* wireHGLOBAL;
     * }
     */
    public static final AddressLayout wireHGLOBAL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHWND;
     * }
     */
    public static final AddressLayout wireHWND = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHMENU;
     * }
     */
    public static final AddressLayout wireHMENU = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHACCEL;
     * }
     */
    public static final AddressLayout wireHACCEL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHBRUSH;
     * }
     */
    public static final AddressLayout wireHBRUSH = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHFONT;
     * }
     */
    public static final AddressLayout wireHFONT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHDC;
     * }
     */
    public static final AddressLayout wireHDC = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHICON;
     * }
     */
    public static final AddressLayout wireHICON = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHRGN;
     * }
     */
    public static final AddressLayout wireHRGN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _RemotableHandle* wireHMONITOR;
     * }
     */
    public static final AddressLayout wireHMONITOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userHBITMAP* wireHBITMAP;
     * }
     */
    public static final AddressLayout wireHBITMAP = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userHPALETTE* wireHPALETTE;
     * }
     */
    public static final AddressLayout wireHPALETTE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userHENHMETAFILE* wireHENHMETAFILE;
     * }
     */
    public static final AddressLayout wireHENHMETAFILE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userHMETAFILE* wireHMETAFILE;
     * }
     */
    public static final AddressLayout wireHMETAFILE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _userHMETAFILEPICT* wireHMETAFILEPICT;
     * }
     */
    public static final AddressLayout wireHMETAFILEPICT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef void* HMETAFILEPICT;
     * }
     */
    public static final AddressLayout HMETAFILEPICT = RuntimeHelper.POINTER;
    public static MemoryLayout IWinTypes_v0_1_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle IWinTypes_v0_1_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment IWinTypes_v0_1_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2360.const$4,"IWinTypes_v0_1_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypes_v0_1_c_ifspec;
     * }
     */
    public static MemorySegment IWinTypes_v0_1_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2360.const$4, "IWinTypes_v0_1_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypes_v0_1_c_ifspec;
     * }
     */
    public static void IWinTypes_v0_1_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2360.const$4, "IWinTypes_v0_1_c_ifspec"), x);
    }
    public static MemoryLayout IWinTypes_v0_1_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle IWinTypes_v0_1_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment IWinTypes_v0_1_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2360.const$5,"IWinTypes_v0_1_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypes_v0_1_s_ifspec;
     * }
     */
    public static MemorySegment IWinTypes_v0_1_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2360.const$5, "IWinTypes_v0_1_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE IWinTypes_v0_1_s_ifspec;
     * }
     */
    public static void IWinTypes_v0_1_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2360.const$5, "IWinTypes_v0_1_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * typedef double DATE;
     * }
     */
    public static final OfDouble DATE = JAVA_DOUBLE;
    /**
     * {@snippet :
     * typedef union tagCY* LPCY;
     * }
     */
    public static final AddressLayout LPCY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct tagDEC* LPDECIMAL;
     * }
     */
    public static final AddressLayout LPDECIMAL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _FLAGGED_WORD_BLOB* wireBSTR;
     * }
     */
    public static final AddressLayout wireBSTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short* BSTR;
     * }
     */
    public static final AddressLayout BSTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short** LPBSTR;
     * }
     */
    public static final AddressLayout LPBSTR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef short VARIANT_BOOL;
     * }
     */
    public static final OfShort VARIANT_BOOL = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef struct tagBSTRBLOB* LPBSTRBLOB;
     * }
     */
    public static final AddressLayout LPBSTRBLOB = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned short VARTYPE;
     * }
     */
    public static final OfShort VARTYPE = JAVA_SHORT;
    /**
     * {@snippet :
     * enum VARENUM.VT_EMPTY = 0;
     * }
     */
    public static int VT_EMPTY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_NULL = 1;
     * }
     */
    public static int VT_NULL() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_I2 = 2;
     * }
     */
    public static int VT_I2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_I4 = 3;
     * }
     */
    public static int VT_I4() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_R4 = 4;
     * }
     */
    public static int VT_R4() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_R8 = 5;
     * }
     */
    public static int VT_R8() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_CY = 6;
     * }
     */
    public static int VT_CY() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_DATE = 7;
     * }
     */
    public static int VT_DATE() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BSTR = 8;
     * }
     */
    public static int VT_BSTR() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_DISPATCH = 9;
     * }
     */
    public static int VT_DISPATCH() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_ERROR = 10;
     * }
     */
    public static int VT_ERROR() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BOOL = 11;
     * }
     */
    public static int VT_BOOL() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_VARIANT = 12;
     * }
     */
    public static int VT_VARIANT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UNKNOWN = 13;
     * }
     */
    public static int VT_UNKNOWN() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_DECIMAL = 14;
     * }
     */
    public static int VT_DECIMAL() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_I1 = 16;
     * }
     */
    public static int VT_I1() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UI1 = 17;
     * }
     */
    public static int VT_UI1() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UI2 = 18;
     * }
     */
    public static int VT_UI2() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UI4 = 19;
     * }
     */
    public static int VT_UI4() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_I8 = 20;
     * }
     */
    public static int VT_I8() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UI8 = 21;
     * }
     */
    public static int VT_UI8() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_INT = 22;
     * }
     */
    public static int VT_INT() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UINT = 23;
     * }
     */
    public static int VT_UINT() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_VOID = 24;
     * }
     */
    public static int VT_VOID() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_HRESULT = 25;
     * }
     */
    public static int VT_HRESULT() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_PTR = 26;
     * }
     */
    public static int VT_PTR() {
        return (int)26L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_SAFEARRAY = 27;
     * }
     */
    public static int VT_SAFEARRAY() {
        return (int)27L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_CARRAY = 28;
     * }
     */
    public static int VT_CARRAY() {
        return (int)28L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_USERDEFINED = 29;
     * }
     */
    public static int VT_USERDEFINED() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_LPSTR = 30;
     * }
     */
    public static int VT_LPSTR() {
        return (int)30L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_LPWSTR = 31;
     * }
     */
    public static int VT_LPWSTR() {
        return (int)31L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_RECORD = 36;
     * }
     */
    public static int VT_RECORD() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_INT_PTR = 37;
     * }
     */
    public static int VT_INT_PTR() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_UINT_PTR = 38;
     * }
     */
    public static int VT_UINT_PTR() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_FILETIME = 64;
     * }
     */
    public static int VT_FILETIME() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BLOB = 65;
     * }
     */
    public static int VT_BLOB() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_STREAM = 66;
     * }
     */
    public static int VT_STREAM() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_STORAGE = 67;
     * }
     */
    public static int VT_STORAGE() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_STREAMED_OBJECT = 68;
     * }
     */
    public static int VT_STREAMED_OBJECT() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_STORED_OBJECT = 69;
     * }
     */
    public static int VT_STORED_OBJECT() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BLOB_OBJECT = 70;
     * }
     */
    public static int VT_BLOB_OBJECT() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_CF = 71;
     * }
     */
    public static int VT_CF() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_CLSID = 72;
     * }
     */
    public static int VT_CLSID() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_VERSIONED_STREAM = 73;
     * }
     */
    public static int VT_VERSIONED_STREAM() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BSTR_BLOB = 4095;
     * }
     */
    public static int VT_BSTR_BLOB() {
        return (int)4095L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_VECTOR = 4096;
     * }
     */
    public static int VT_VECTOR() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_ARRAY = 8192;
     * }
     */
    public static int VT_ARRAY() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_BYREF = 16384;
     * }
     */
    public static int VT_BYREF() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_RESERVED = 32768;
     * }
     */
    public static int VT_RESERVED() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_ILLEGAL = 65535;
     * }
     */
    public static int VT_ILLEGAL() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_ILLEGALMASKED = 4095;
     * }
     */
    public static int VT_ILLEGALMASKED() {
        return (int)4095L;
    }
    /**
     * {@snippet :
     * enum VARENUM.VT_TYPEMASK = 4095;
     * }
     */
    public static int VT_TYPEMASK() {
        return (int)4095L;
    }
    /**
     * {@snippet :
     * typedef unsigned long PROPID;
     * }
     */
    public static final OfInt PROPID = JAVA_INT;
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_CLSID = 0;
     * }
     */
    public static int TYSPEC_CLSID() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_FILEEXT = 1;
     * }
     */
    public static int TYSPEC_FILEEXT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_MIMETYPE = 2;
     * }
     */
    public static int TYSPEC_MIMETYPE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_FILENAME = 3;
     * }
     */
    public static int TYSPEC_FILENAME() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_PROGID = 4;
     * }
     */
    public static int TYSPEC_PROGID() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_PACKAGENAME = 5;
     * }
     */
    public static int TYSPEC_PACKAGENAME() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum tagTYSPEC.TYSPEC_OBJECTID = 6;
     * }
     */
    public static int TYSPEC_OBJECTID() {
        return (int)6L;
    }
    public static MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$0,"__MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2368.const$0, "__MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2368.const$0, "__MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$VH() {
        return constants$2338.const$4;
    }
    public static MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$1,"__MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static MemorySegment __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemorySegment) constants$2338.const$4.get(RuntimeHelper.requireNonNull(constants$2368.const$1, "__MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec;
     * }
     */
    public static void __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec$set(MemorySegment x) {
        constants$2338.const$4.set(RuntimeHelper.requireNonNull(constants$2368.const$1, "__MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec"), x);
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_DISK;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_DISK$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$2,"GUID_DEVINTERFACE_DISK");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_CDROM;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_CDROM$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$3,"GUID_DEVINTERFACE_CDROM");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_PARTITION;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_PARTITION$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$4,"GUID_DEVINTERFACE_PARTITION");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_TAPE;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_TAPE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2368.const$5,"GUID_DEVINTERFACE_TAPE");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_WRITEONCEDISK;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$0,"GUID_DEVINTERFACE_WRITEONCEDISK");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_VOLUME;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_VOLUME$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$1,"GUID_DEVINTERFACE_VOLUME");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_MEDIUMCHANGER;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$2,"GUID_DEVINTERFACE_MEDIUMCHANGER");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_FLOPPY;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_FLOPPY$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$3,"GUID_DEVINTERFACE_FLOPPY");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_CDCHANGER;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_CDCHANGER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$4,"GUID_DEVINTERFACE_CDCHANGER");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_STORAGEPORT;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_STORAGEPORT$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2369.const$5,"GUID_DEVINTERFACE_STORAGEPORT");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_VMLUN;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_VMLUN$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$0,"GUID_DEVINTERFACE_VMLUN");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_SES;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_SES$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$1,"GUID_DEVINTERFACE_SES");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_ZNSDISK;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_ZNSDISK$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$2,"GUID_DEVINTERFACE_ZNSDISK");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_SERVICE_VOLUME;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_SERVICE_VOLUME$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$3,"GUID_DEVINTERFACE_SERVICE_VOLUME");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_HIDDEN_VOLUME;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$4,"GUID_DEVINTERFACE_HIDDEN_VOLUME");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2370.const$5,"GUID_DEVINTERFACE_UNIFIED_ACCESS_RPMB");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2371.const$0,"GUID_DEVINTERFACE_SCM_PHYSICAL_DEVICE");
    }
    /**
     * {@snippet :
     * const GUID GUID_SCM_PD_HEALTH_NOTIFICATION;
     * }
     */
    public static MemorySegment GUID_SCM_PD_HEALTH_NOTIFICATION$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2371.const$1,"GUID_SCM_PD_HEALTH_NOTIFICATION");
    }
    /**
     * {@snippet :
     * const GUID GUID_SCM_PD_PASSTHROUGH_INVDIMM;
     * }
     */
    public static MemorySegment GUID_SCM_PD_PASSTHROUGH_INVDIMM$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2371.const$2,"GUID_SCM_PD_PASSTHROUGH_INVDIMM");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_COMPORT;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_COMPORT$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2371.const$3,"GUID_DEVINTERFACE_COMPORT");
    }
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$2371.const$4,"GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR");
    }
    /**
     * {@snippet :
     * typedef struct _STORAGE_HOTPLUG_INFO* PSTORAGE_HOTPLUG_INFO;
     * }
     */
    public static final AddressLayout PSTORAGE_HOTPLUG_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_NUMBER* PSTORAGE_DEVICE_NUMBER;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_NUMBERS* PSTORAGE_DEVICE_NUMBERS;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_NUMBER_EX* PSTORAGE_DEVICE_NUMBER_EX;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMBER_EX = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_BUS_RESET_REQUEST* PSTORAGE_BUS_RESET_REQUEST;
     * }
     */
    public static final AddressLayout PSTORAGE_BUS_RESET_REQUEST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct STORAGE_BREAK_RESERVATION_REQUEST* PSTORAGE_BREAK_RESERVATION_REQUEST;
     * }
     */
    public static final AddressLayout PSTORAGE_BREAK_RESERVATION_REQUEST = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _PREVENT_MEDIA_REMOVAL* PPREVENT_MEDIA_REMOVAL;
     * }
     */
    public static final AddressLayout PPREVENT_MEDIA_REMOVAL = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _CLASS_MEDIA_CHANGE_CONTEXT* PCLASS_MEDIA_CHANGE_CONTEXT;
     * }
     */
    public static final AddressLayout PCLASS_MEDIA_CHANGE_CONTEXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _TAPE_STATISTICS* PTAPE_STATISTICS;
     * }
     */
    public static final AddressLayout PTAPE_STATISTICS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _TAPE_GET_STATISTICS* PTAPE_GET_STATISTICS;
     * }
     */
    public static final AddressLayout PTAPE_GET_STATISTICS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DDS_4mm = 32;
     * }
     */
    public static int DDS_4mm() {
        return (int)32L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MiniQic = 33;
     * }
     */
    public static int MiniQic() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.Travan = 34;
     * }
     */
    public static int Travan() {
        return (int)34L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.QIC = 35;
     * }
     */
    public static int QIC() {
        return (int)35L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MP_8mm = 36;
     * }
     */
    public static int MP_8mm() {
        return (int)36L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.AME_8mm = 37;
     * }
     */
    public static int AME_8mm() {
        return (int)37L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.AIT1_8mm = 38;
     * }
     */
    public static int AIT1_8mm() {
        return (int)38L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DLT = 39;
     * }
     */
    public static int DLT() {
        return (int)39L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.NCTP = 40;
     * }
     */
    public static int NCTP() {
        return (int)40L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IBM_3480 = 41;
     * }
     */
    public static int IBM_3480() {
        return (int)41L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IBM_3490E = 42;
     * }
     */
    public static int IBM_3490E() {
        return (int)42L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IBM_Magstar_3590 = 43;
     * }
     */
    public static int IBM_Magstar_3590() {
        return (int)43L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IBM_Magstar_MP = 44;
     * }
     */
    public static int IBM_Magstar_MP() {
        return (int)44L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.STK_DATA_D3 = 45;
     * }
     */
    public static int STK_DATA_D3() {
        return (int)45L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SONY_DTF = 46;
     * }
     */
    public static int SONY_DTF() {
        return (int)46L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DV_6mm = 47;
     * }
     */
    public static int DV_6mm() {
        return (int)47L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DMI = 48;
     * }
     */
    public static int DMI() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SONY_D2 = 49;
     * }
     */
    public static int SONY_D2() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.CLEANER_CARTRIDGE = 50;
     * }
     */
    public static int CLEANER_CARTRIDGE() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.CD_ROM = 51;
     * }
     */
    public static int CD_ROM() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.CD_R = 52;
     * }
     */
    public static int CD_R() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.CD_RW = 53;
     * }
     */
    public static int CD_RW() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DVD_ROM = 54;
     * }
     */
    public static int DVD_ROM() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DVD_R = 55;
     * }
     */
    public static int DVD_R() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DVD_RW = 56;
     * }
     */
    public static int DVD_RW() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MO_3_RW = 57;
     * }
     */
    public static int MO_3_RW() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MO_5_WO = 58;
     * }
     */
    public static int MO_5_WO() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MO_5_RW = 59;
     * }
     */
    public static int MO_5_RW() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MO_5_LIMDOW = 60;
     * }
     */
    public static int MO_5_LIMDOW() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.PC_5_WO = 61;
     * }
     */
    public static int PC_5_WO() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.PC_5_RW = 62;
     * }
     */
    public static int PC_5_RW() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.PD_5_RW = 63;
     * }
     */
    public static int PD_5_RW() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.ABL_5_WO = 64;
     * }
     */
    public static int ABL_5_WO() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.PINNACLE_APEX_5_RW = 65;
     * }
     */
    public static int PINNACLE_APEX_5_RW() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SONY_12_WO = 66;
     * }
     */
    public static int SONY_12_WO() {
        return (int)66L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.PHILIPS_12_WO = 67;
     * }
     */
    public static int PHILIPS_12_WO() {
        return (int)67L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.HITACHI_12_WO = 68;
     * }
     */
    public static int HITACHI_12_WO() {
        return (int)68L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.CYGNET_12_WO = 69;
     * }
     */
    public static int CYGNET_12_WO() {
        return (int)69L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.KODAK_14_WO = 70;
     * }
     */
    public static int KODAK_14_WO() {
        return (int)70L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MO_NFR_525 = 71;
     * }
     */
    public static int MO_NFR_525() {
        return (int)71L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.NIKON_12_RW = 72;
     * }
     */
    public static int NIKON_12_RW() {
        return (int)72L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IOMEGA_ZIP = 73;
     * }
     */
    public static int IOMEGA_ZIP() {
        return (int)73L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.IOMEGA_JAZ = 74;
     * }
     */
    public static int IOMEGA_JAZ() {
        return (int)74L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_EZ135 = 75;
     * }
     */
    public static int SYQUEST_EZ135() {
        return (int)75L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_EZFLYER = 76;
     * }
     */
    public static int SYQUEST_EZFLYER() {
        return (int)76L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SYQUEST_SYJET = 77;
     * }
     */
    public static int SYQUEST_SYJET() {
        return (int)77L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.AVATAR_F2 = 78;
     * }
     */
    public static int AVATAR_F2() {
        return (int)78L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.MP2_8mm = 79;
     * }
     */
    public static int MP2_8mm() {
        return (int)79L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DST_S = 80;
     * }
     */
    public static int DST_S() {
        return (int)80L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DST_M = 81;
     * }
     */
    public static int DST_M() {
        return (int)81L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DST_L = 82;
     * }
     */
    public static int DST_L() {
        return (int)82L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.VXATape_1 = 83;
     * }
     */
    public static int VXATape_1() {
        return (int)83L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.VXATape_2 = 84;
     * }
     */
    public static int VXATape_2() {
        return (int)84L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.STK_9840 = 85;
     * }
     */
    public static int STK_9840() {
        return (int)85L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.LTO_Ultrium = 86;
     * }
     */
    public static int LTO_Ultrium() {
        return (int)86L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.LTO_Accelis = 87;
     * }
     */
    public static int LTO_Accelis() {
        return (int)87L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.DVD_RAM = 88;
     * }
     */
    public static int DVD_RAM() {
        return (int)88L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.AIT_8mm = 89;
     * }
     */
    public static int AIT_8mm() {
        return (int)89L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.ADR_1 = 90;
     * }
     */
    public static int ADR_1() {
        return (int)90L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.ADR_2 = 91;
     * }
     */
    public static int ADR_2() {
        return (int)91L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.STK_9940 = 92;
     * }
     */
    public static int STK_9940() {
        return (int)92L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.SAIT = 93;
     * }
     */
    public static int SAIT() {
        return (int)93L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_MEDIA_TYPE.VXATape = 94;
     * }
     */
    public static int VXATape() {
        return (int)94L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_MEDIA_TYPE* PSTORAGE_MEDIA_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_MEDIA_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeUnknown = 0;
     * }
     */
    public static int BusTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeScsi = 1;
     * }
     */
    public static int BusTypeScsi() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeAtapi = 2;
     * }
     */
    public static int BusTypeAtapi() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeAta = 3;
     * }
     */
    public static int BusTypeAta() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusType1394 = 4;
     * }
     */
    public static int BusType1394() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSsa = 5;
     * }
     */
    public static int BusTypeSsa() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeFibre = 6;
     * }
     */
    public static int BusTypeFibre() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeUsb = 7;
     * }
     */
    public static int BusTypeUsb() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeRAID = 8;
     * }
     */
    public static int BusTypeRAID() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeiScsi = 9;
     * }
     */
    public static int BusTypeiScsi() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSas = 10;
     * }
     */
    public static int BusTypeSas() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSata = 11;
     * }
     */
    public static int BusTypeSata() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSd = 12;
     * }
     */
    public static int BusTypeSd() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeMmc = 13;
     * }
     */
    public static int BusTypeMmc() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeVirtual = 14;
     * }
     */
    public static int BusTypeVirtual() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeFileBackedVirtual = 15;
     * }
     */
    public static int BusTypeFileBackedVirtual() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSpaces = 16;
     * }
     */
    public static int BusTypeSpaces() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeNvme = 17;
     * }
     */
    public static int BusTypeNvme() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeSCM = 18;
     * }
     */
    public static int BusTypeSCM() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeUfs = 19;
     * }
     */
    public static int BusTypeUfs() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeMax = 20;
     * }
     */
    public static int BusTypeMax() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_BUS_TYPE.BusTypeMaxReserved = 127;
     * }
     */
    public static int BusTypeMaxReserved() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_BUS_TYPE* PSTORAGE_BUS_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_BUS_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MEDIA_INFO* PDEVICE_MEDIA_INFO;
     * }
     */
    public static final AddressLayout PDEVICE_MEDIA_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _GET_MEDIA_TYPES* PGET_MEDIA_TYPES;
     * }
     */
    public static final AddressLayout PGET_MEDIA_TYPES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PREDICT_FAILURE* PSTORAGE_PREDICT_FAILURE;
     * }
     */
    public static final AddressLayout PSTORAGE_PREDICT_FAILURE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_FAILURE_PREDICTION_CONFIG* PSTORAGE_FAILURE_PREDICTION_CONFIG;
     * }
     */
    public static final AddressLayout PSTORAGE_FAILURE_PREDICTION_CONFIG = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_QUERY_TYPE.PropertyStandardQuery = 0;
     * }
     */
    public static int PropertyStandardQuery() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_QUERY_TYPE.PropertyExistsQuery = 1;
     * }
     */
    public static int PropertyExistsQuery() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_QUERY_TYPE.PropertyMaskQuery = 2;
     * }
     */
    public static int PropertyMaskQuery() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_QUERY_TYPE.PropertyQueryMaxDefined = 3;
     * }
     */
    public static int PropertyQueryMaxDefined() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_QUERY_TYPE* PSTORAGE_QUERY_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_QUERY_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_SET_TYPE.PropertyStandardSet = 0;
     * }
     */
    public static int PropertyStandardSet() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_SET_TYPE.PropertyExistsSet = 1;
     * }
     */
    public static int PropertyExistsSet() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_SET_TYPE.PropertySetMaxDefined = 2;
     * }
     */
    public static int PropertySetMaxDefined() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_SET_TYPE* PSTORAGE_SET_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_SET_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceProperty = 0;
     * }
     */
    public static int StorageDeviceProperty() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterProperty = 1;
     * }
     */
    public static int StorageAdapterProperty() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceIdProperty = 2;
     * }
     */
    public static int StorageDeviceIdProperty() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceUniqueIdProperty = 3;
     * }
     */
    public static int StorageDeviceUniqueIdProperty() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceWriteCacheProperty = 4;
     * }
     */
    public static int StorageDeviceWriteCacheProperty() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageMiniportProperty = 5;
     * }
     */
    public static int StorageMiniportProperty() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAccessAlignmentProperty = 6;
     * }
     */
    public static int StorageAccessAlignmentProperty() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceSeekPenaltyProperty = 7;
     * }
     */
    public static int StorageDeviceSeekPenaltyProperty() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceTrimProperty = 8;
     * }
     */
    public static int StorageDeviceTrimProperty() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceWriteAggregationProperty = 9;
     * }
     */
    public static int StorageDeviceWriteAggregationProperty() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceDeviceTelemetryProperty = 10;
     * }
     */
    public static int StorageDeviceDeviceTelemetryProperty() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLBProvisioningProperty = 11;
     * }
     */
    public static int StorageDeviceLBProvisioningProperty() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDevicePowerProperty = 12;
     * }
     */
    public static int StorageDevicePowerProperty() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceCopyOffloadProperty = 13;
     * }
     */
    public static int StorageDeviceCopyOffloadProperty() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceResiliencyProperty = 14;
     * }
     */
    public static int StorageDeviceResiliencyProperty() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceMediumProductType = 15;
     * }
     */
    public static int StorageDeviceMediumProductType() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterRpmbProperty = 16;
     * }
     */
    public static int StorageAdapterRpmbProperty() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterCryptoProperty = 17;
     * }
     */
    public static int StorageAdapterCryptoProperty() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceIoCapabilityProperty = 48;
     * }
     */
    public static int StorageDeviceIoCapabilityProperty() {
        return (int)48L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterProtocolSpecificProperty = 49;
     * }
     */
    public static int StorageAdapterProtocolSpecificProperty() {
        return (int)49L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceProtocolSpecificProperty = 50;
     * }
     */
    public static int StorageDeviceProtocolSpecificProperty() {
        return (int)50L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterTemperatureProperty = 51;
     * }
     */
    public static int StorageAdapterTemperatureProperty() {
        return (int)51L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceTemperatureProperty = 52;
     * }
     */
    public static int StorageDeviceTemperatureProperty() {
        return (int)52L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterPhysicalTopologyProperty = 53;
     * }
     */
    public static int StorageAdapterPhysicalTopologyProperty() {
        return (int)53L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDevicePhysicalTopologyProperty = 54;
     * }
     */
    public static int StorageDevicePhysicalTopologyProperty() {
        return (int)54L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceAttributesProperty = 55;
     * }
     */
    public static int StorageDeviceAttributesProperty() {
        return (int)55L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceManagementStatus = 56;
     * }
     */
    public static int StorageDeviceManagementStatus() {
        return (int)56L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageAdapterSerialNumberProperty = 57;
     * }
     */
    public static int StorageAdapterSerialNumberProperty() {
        return (int)57L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLocationProperty = 58;
     * }
     */
    public static int StorageDeviceLocationProperty() {
        return (int)58L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceNumaProperty = 59;
     * }
     */
    public static int StorageDeviceNumaProperty() {
        return (int)59L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceZonedDeviceProperty = 60;
     * }
     */
    public static int StorageDeviceZonedDeviceProperty() {
        return (int)60L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceUnsafeShutdownCount = 61;
     * }
     */
    public static int StorageDeviceUnsafeShutdownCount() {
        return (int)61L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceEnduranceProperty = 62;
     * }
     */
    public static int StorageDeviceEnduranceProperty() {
        return (int)62L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceLedStateProperty = 63;
     * }
     */
    public static int StorageDeviceLedStateProperty() {
        return (int)63L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageDeviceSelfEncryptionProperty = 64;
     * }
     */
    public static int StorageDeviceSelfEncryptionProperty() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROPERTY_ID.StorageFruIdProperty = 65;
     * }
     */
    public static int StorageFruIdProperty() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PROPERTY_ID* PSTORAGE_PROPERTY_ID;
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_ID = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROPERTY_QUERY* PSTORAGE_PROPERTY_QUERY;
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_QUERY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROPERTY_SET* PSTORAGE_PROPERTY_SET;
     * }
     */
    public static final AddressLayout PSTORAGE_PROPERTY_SET = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DESCRIPTOR_HEADER* PSTORAGE_DESCRIPTOR_HEADER;
     * }
     */
    public static final AddressLayout PSTORAGE_DESCRIPTOR_HEADER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_DESCRIPTOR* PSTORAGE_DEVICE_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ADAPTER_DESCRIPTOR* PSTORAGE_ADAPTER_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_ADAPTER_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR* PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR* PSTORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_MEDIUM_PRODUCT_TYPE_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetReserved = 0;
     * }
     */
    public static int StoragePortCodeSetReserved() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetStorport = 1;
     * }
     */
    public static int StoragePortCodeSetStorport() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSCSIport = 2;
     * }
     */
    public static int StoragePortCodeSetSCSIport() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSpaceport = 3;
     * }
     */
    public static int StoragePortCodeSetSpaceport() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetATAport = 4;
     * }
     */
    public static int StoragePortCodeSetATAport() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetUSBport = 5;
     * }
     */
    public static int StoragePortCodeSetUSBport() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSBP2port = 6;
     * }
     */
    public static int StoragePortCodeSetSBP2port() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PORT_CODE_SET.StoragePortCodeSetSDport = 7;
     * }
     */
    public static int StoragePortCodeSetSDport() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PORT_CODE_SET* PSTORAGE_PORT_CODE_SET;
     * }
     */
    public static final AddressLayout PSTORAGE_PORT_CODE_SET = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_MINIPORT_DESCRIPTOR* PSTORAGE_MINIPORT_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_MINIPORT_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetReserved = 0;
     * }
     */
    public static int StorageIdCodeSetReserved() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetBinary = 1;
     * }
     */
    public static int StorageIdCodeSetBinary() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetAscii = 2;
     * }
     */
    public static int StorageIdCodeSetAscii() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_CODE_SET.StorageIdCodeSetUtf8 = 3;
     * }
     */
    public static int StorageIdCodeSetUtf8() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_IDENTIFIER_CODE_SET* PSTORAGE_IDENTIFIER_CODE_SET;
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER_CODE_SET = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeVendorSpecific = 0;
     * }
     */
    public static int StorageIdTypeVendorSpecific() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeVendorId = 1;
     * }
     */
    public static int StorageIdTypeVendorId() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeEUI64 = 2;
     * }
     */
    public static int StorageIdTypeEUI64() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeFCPHName = 3;
     * }
     */
    public static int StorageIdTypeFCPHName() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypePortRelative = 4;
     * }
     */
    public static int StorageIdTypePortRelative() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeTargetPortGroup = 5;
     * }
     */
    public static int StorageIdTypeTargetPortGroup() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeLogicalUnitGroup = 6;
     * }
     */
    public static int StorageIdTypeLogicalUnitGroup() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeMD5LogicalUnitIdentifier = 7;
     * }
     */
    public static int StorageIdTypeMD5LogicalUnitIdentifier() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_IDENTIFIER_TYPE.StorageIdTypeScsiNameString = 8;
     * }
     */
    public static int StorageIdTypeScsiNameString() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_IDENTIFIER_TYPE* PSTORAGE_IDENTIFIER_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEEExtended = 2;
     * }
     */
    public static int StorageIdNAAFormatIEEEExtended() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEERegistered = 3;
     * }
     */
    public static int StorageIdNAAFormatIEEERegistered() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ID_NAA_FORMAT.StorageIdNAAFormatIEEEERegisteredExtended = 5;
     * }
     */
    public static int StorageIdNAAFormatIEEEERegisteredExtended() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ID_NAA_FORMAT* PSTORAGE_ID_NAA_FORMAT;
     * }
     */
    public static final AddressLayout PSTORAGE_ID_NAA_FORMAT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocDevice = 0;
     * }
     */
    public static int StorageIdAssocDevice() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocPort = 1;
     * }
     */
    public static int StorageIdAssocPort() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ASSOCIATION_TYPE.StorageIdAssocTarget = 2;
     * }
     */
    public static int StorageIdAssocTarget() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ASSOCIATION_TYPE* PSTORAGE_ASSOCIATION_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_ASSOCIATION_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_IDENTIFIER* PSTORAGE_IDENTIFIER;
     * }
     */
    public static final AddressLayout PSTORAGE_IDENTIFIER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR* PSTORAGE_DEVICE_ID_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_ID_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR* PDEVICE_SEEK_PENALTY_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_SEEK_PENALTY_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR* PDEVICE_WRITE_AGGREGATION_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_WRITE_AGGREGATION_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_TRIM_DESCRIPTOR* PDEVICE_TRIM_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_TRIM_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR* PDEVICE_LB_PROVISIONING_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_LB_PROVISIONING_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES* PSTORAGE_LB_PROVISIONING_MAP_RESOURCES;
     * }
     */
    public static final AddressLayout PSTORAGE_LB_PROVISIONING_MAP_RESOURCES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_POWER_DESCRIPTOR* PDEVICE_POWER_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_POWER_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR* PDEVICE_COPY_OFFLOAD_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PDEVICE_COPY_OFFLOAD_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR* PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeUnknown = 0;
     * }
     */
    public static int StorageRpmbFrameTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeStandard = 1;
     * }
     */
    public static int StorageRpmbFrameTypeStandard() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_FRAME_TYPE.StorageRpmbFrameTypeMax = 2;
     * }
     */
    public static int StorageRpmbFrameTypeMax() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_RPMB_FRAME_TYPE* PSTORAGE_RPMB_FRAME_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_FRAME_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_RPMB_DESCRIPTOR* PSTORAGE_RPMB_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_RPMB_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmUnknown = 0;
     * }
     */
    public static int StorageCryptoAlgorithmUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmXTSAES = 1;
     * }
     */
    public static int StorageCryptoAlgorithmXTSAES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmBitlockerAESCBC = 2;
     * }
     */
    public static int StorageCryptoAlgorithmBitlockerAESCBC() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmAESECB = 3;
     * }
     */
    public static int StorageCryptoAlgorithmAESECB() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmESSIVAESCBC = 4;
     * }
     */
    public static int StorageCryptoAlgorithmESSIVAESCBC() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_ALGORITHM_ID.StorageCryptoAlgorithmMax = 5;
     * }
     */
    public static int StorageCryptoAlgorithmMax() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_CRYPTO_ALGORITHM_ID* PSTORAGE_CRYPTO_ALGORITHM_ID;
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_ALGORITHM_ID = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySizeUnknown = 0;
     * }
     */
    public static int StorageCryptoKeySizeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize128Bits = 1;
     * }
     */
    public static int StorageCryptoKeySize128Bits() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize192Bits = 2;
     * }
     */
    public static int StorageCryptoKeySize192Bits() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize256Bits = 3;
     * }
     */
    public static int StorageCryptoKeySize256Bits() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_CRYPTO_KEY_SIZE.StorageCryptoKeySize512Bits = 4;
     * }
     */
    public static int StorageCryptoKeySize512Bits() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_CRYPTO_KEY_SIZE* PSTORAGE_CRYPTO_KEY_SIZE;
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_KEY_SIZE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_CRYPTO_CAPABILITY* PSTORAGE_CRYPTO_CAPABILITY;
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_CAPABILITY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_CRYPTO_DESCRIPTOR* PSTORAGE_CRYPTO_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_CRYPTO_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeUnspecified = 0;
     * }
     */
    public static int StorageTierMediaTypeUnspecified() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeDisk = 1;
     * }
     */
    public static int StorageTierMediaTypeDisk() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeSsd = 2;
     * }
     */
    public static int StorageTierMediaTypeSsd() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeScm = 4;
     * }
     */
    public static int StorageTierMediaTypeScm() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_MEDIA_TYPE.StorageTierMediaTypeMax = 5;
     * }
     */
    public static int StorageTierMediaTypeMax() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_TIER_MEDIA_TYPE* PSTORAGE_TIER_MEDIA_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_TIER_MEDIA_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_TIER_CLASS.StorageTierClassUnspecified = 0;
     * }
     */
    public static int StorageTierClassUnspecified() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_CLASS.StorageTierClassCapacity = 1;
     * }
     */
    public static int StorageTierClassCapacity() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_CLASS.StorageTierClassPerformance = 2;
     * }
     */
    public static int StorageTierClassPerformance() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_TIER_CLASS.StorageTierClassMax = 3;
     * }
     */
    public static int StorageTierClassMax() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_TIER_CLASS* PSTORAGE_TIER_CLASS;
     * }
     */
    public static final AddressLayout PSTORAGE_TIER_CLASS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_TIER* PSTORAGE_TIER;
     * }
     */
    public static final AddressLayout PSTORAGE_TIER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_TIERING_DESCRIPTOR* PSTORAGE_DEVICE_TIERING_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_TIERING_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR* PSTORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_FAULT_DOMAIN_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeUnknown = 0;
     * }
     */
    public static int ProtocolTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeScsi = 1;
     * }
     */
    public static int ProtocolTypeScsi() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeAta = 2;
     * }
     */
    public static int ProtocolTypeAta() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeNvme = 3;
     * }
     */
    public static int ProtocolTypeNvme() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeSd = 4;
     * }
     */
    public static int ProtocolTypeSd() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeUfs = 5;
     * }
     */
    public static int ProtocolTypeUfs() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeProprietary = 126;
     * }
     */
    public static int ProtocolTypeProprietary() {
        return (int)126L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_TYPE.ProtocolTypeMaxReserved = 127;
     * }
     */
    public static int ProtocolTypeMaxReserved() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PROTOCOL_TYPE* PSTORAGE_PROTOCOL_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeUnknown = 0;
     * }
     */
    public static int NVMeDataTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeIdentify = 1;
     * }
     */
    public static int NVMeDataTypeIdentify() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeLogPage = 2;
     * }
     */
    public static int NVMeDataTypeLogPage() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_NVME_DATA_TYPE.NVMeDataTypeFeature = 3;
     * }
     */
    public static int NVMeDataTypeFeature() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PROTOCOL_NVME_DATA_TYPE* PSTORAGE_PROTOCOL_NVME_DATA_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_NVME_DATA_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeUnknown = 0;
     * }
     */
    public static int AtaDataTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeIdentify = 1;
     * }
     */
    public static int AtaDataTypeIdentify() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_ATA_DATA_TYPE.AtaDataTypeLogPage = 2;
     * }
     */
    public static int AtaDataTypeLogPage() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PROTOCOL_ATA_DATA_TYPE* PSTORAGE_PROTOCOL_ATA_DATA_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_ATA_DATA_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeUnknown = 0;
     * }
     */
    public static int UfsDataTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDescriptor = 1;
     * }
     */
    public static int UfsDataTypeQueryDescriptor() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryAttribute = 2;
     * }
     */
    public static int UfsDataTypeQueryAttribute() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryFlag = 3;
     * }
     */
    public static int UfsDataTypeQueryFlag() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDmeAttribute = 4;
     * }
     */
    public static int UfsDataTypeQueryDmeAttribute() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeQueryDmePeerAttribute = 5;
     * }
     */
    public static int UfsDataTypeQueryDmePeerAttribute() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_PROTOCOL_UFS_DATA_TYPE.UfsDataTypeMax = 6;
     * }
     */
    public static int UfsDataTypeMax() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_PROTOCOL_UFS_DATA_TYPE* PSTORAGE_PROTOCOL_UFS_DATA_TYPE;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_UFS_DATA_TYPE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef union _STORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE* PSTORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_SUBVALUE_GET_LOG_PAGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROTOCOL_SPECIFIC_DATA* PSTORAGE_PROTOCOL_SPECIFIC_DATA;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_SPECIFIC_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROTOCOL_SPECIFIC_DATA_EXT* PSTORAGE_PROTOCOL_SPECIFIC_DATA_EXT;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_SPECIFIC_DATA_EXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR* PSTORAGE_PROTOCOL_DATA_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT* PSTORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT;
     * }
     */
    public static final AddressLayout PSTORAGE_PROTOCOL_DATA_DESCRIPTOR_EXT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_TEMPERATURE_INFO* PSTORAGE_TEMPERATURE_INFO;
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_TEMPERATURE_DATA_DESCRIPTOR* PSTORAGE_TEMPERATURE_DATA_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_DATA_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_TEMPERATURE_THRESHOLD* PSTORAGE_TEMPERATURE_THRESHOLD;
     * }
     */
    public static final AddressLayout PSTORAGE_TEMPERATURE_THRESHOLD = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorUnknown = 0;
     * }
     */
    public static int FormFactorUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor3_5 = 1;
     * }
     */
    public static int FormFactor3_5() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor2_5 = 2;
     * }
     */
    public static int FormFactor2_5() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor1_8 = 3;
     * }
     */
    public static int FormFactor1_8() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactor1_8Less = 4;
     * }
     */
    public static int FormFactor1_8Less() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorEmbedded = 5;
     * }
     */
    public static int FormFactorEmbedded() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorMemoryCard = 6;
     * }
     */
    public static int FormFactorMemoryCard() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactormSata = 7;
     * }
     */
    public static int FormFactormSata() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorM_2 = 8;
     * }
     */
    public static int FormFactorM_2() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorPCIeBoard = 9;
     * }
     */
    public static int FormFactorPCIeBoard() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_FORM_FACTOR.FormFactorDimm = 10;
     * }
     */
    public static int FormFactorDimm() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DEVICE_FORM_FACTOR* PSTORAGE_DEVICE_FORM_FACTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_FORM_FACTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusUnknown = 0;
     * }
     */
    public static int HealthStatusUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusNormal = 1;
     * }
     */
    public static int HealthStatusNormal() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusThrottled = 2;
     * }
     */
    public static int HealthStatusThrottled() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusWarning = 3;
     * }
     */
    public static int HealthStatusWarning() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusDisabled = 4;
     * }
     */
    public static int HealthStatusDisabled() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COMPONENT_HEALTH_STATUS.HealthStatusFailed = 5;
     * }
     */
    public static int HealthStatusFailed() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_COMPONENT_HEALTH_STATUS* PSTORAGE_COMPONENT_HEALTH_STATUS;
     * }
     */
    public static final AddressLayout PSTORAGE_COMPONENT_HEALTH_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef union _STORAGE_SPEC_VERSION* PSTORAGE_SPEC_VERSION;
     * }
     */
    public static final AddressLayout PSTORAGE_SPEC_VERSION = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PHYSICAL_DEVICE_DATA* PSTORAGE_PHYSICAL_DEVICE_DATA;
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_DEVICE_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PHYSICAL_ADAPTER_DATA* PSTORAGE_PHYSICAL_ADAPTER_DATA;
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_ADAPTER_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PHYSICAL_NODE_DATA* PSTORAGE_PHYSICAL_NODE_DATA;
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_NODE_DATA = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR* PSTORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_PHYSICAL_TOPOLOGY_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR* PSTORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_IO_CAPABILITY_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR* PSTORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_ATTRIBUTES_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthUnknown = 0;
     * }
     */
    public static int DiskHealthUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthUnhealthy = 1;
     * }
     */
    public static int DiskHealthUnhealthy() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthWarning = 2;
     * }
     */
    public static int DiskHealthWarning() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthHealthy = 3;
     * }
     */
    public static int DiskHealthHealthy() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthMax = 4;
     * }
     */
    public static int DiskHealthMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DISK_HEALTH_STATUS* PSTORAGE_DISK_HEALTH_STATUS;
     * }
     */
    public static final AddressLayout PSTORAGE_DISK_HEALTH_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNone = 0;
     * }
     */
    public static int DiskOpStatusNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusUnknown = 1;
     * }
     */
    public static int DiskOpStatusUnknown() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusOk = 2;
     * }
     */
    public static int DiskOpStatusOk() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusPredictingFailure = 3;
     * }
     */
    public static int DiskOpStatusPredictingFailure() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusInService = 4;
     * }
     */
    public static int DiskOpStatusInService() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusHardwareError = 5;
     * }
     */
    public static int DiskOpStatusHardwareError() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNotUsable = 6;
     * }
     */
    public static int DiskOpStatusNotUsable() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusTransientError = 7;
     * }
     */
    public static int DiskOpStatusTransientError() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusMissing = 8;
     * }
     */
    public static int DiskOpStatusMissing() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DISK_OPERATIONAL_STATUS* PSTORAGE_DISK_OPERATIONAL_STATUS;
     * }
     */
    public static final AddressLayout PSTORAGE_DISK_OPERATIONAL_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonUnknown = 0;
     * }
     */
    public static int DiskOpReasonUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonScsiSenseCode = 1;
     * }
     */
    public static int DiskOpReasonScsiSenseCode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMedia = 2;
     * }
     */
    public static int DiskOpReasonMedia() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonIo = 3;
     * }
     */
    public static int DiskOpReasonIo() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonThresholdExceeded = 4;
     * }
     */
    public static int DiskOpReasonThresholdExceeded() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostData = 5;
     * }
     */
    public static int DiskOpReasonLostData() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonEnergySource = 6;
     * }
     */
    public static int DiskOpReasonEnergySource() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonConfiguration = 7;
     * }
     */
    public static int DiskOpReasonConfiguration() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDeviceController = 8;
     * }
     */
    public static int DiskOpReasonDeviceController() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMediaController = 9;
     * }
     */
    public static int DiskOpReasonMediaController() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonComponent = 10;
     * }
     */
    public static int DiskOpReasonComponent() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonNVDIMM_N = 11;
     * }
     */
    public static int DiskOpReasonNVDIMM_N() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonBackgroundOperation = 12;
     * }
     */
    public static int DiskOpReasonBackgroundOperation() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonInvalidFirmware = 13;
     * }
     */
    public static int DiskOpReasonInvalidFirmware() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonHealthCheck = 14;
     * }
     */
    public static int DiskOpReasonHealthCheck() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostDataPersistence = 15;
     * }
     */
    public static int DiskOpReasonLostDataPersistence() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDisabledByPlatform = 16;
     * }
     */
    public static int DiskOpReasonDisabledByPlatform() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostWritePersistence = 17;
     * }
     */
    public static int DiskOpReasonLostWritePersistence() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDataPersistenceLossImminent = 18;
     * }
     */
    public static int DiskOpReasonDataPersistenceLossImminent() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonWritePersistenceLossImminent = 19;
     * }
     */
    public static int DiskOpReasonWritePersistenceLossImminent() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMax = 20;
     * }
     */
    public static int DiskOpReasonMax() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_OPERATIONAL_STATUS_REASON* PSTORAGE_OPERATIONAL_STATUS_REASON;
     * }
     */
    public static final AddressLayout PSTORAGE_OPERATIONAL_STATUS_REASON = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OPERATIONAL_REASON* PSTORAGE_OPERATIONAL_REASON;
     * }
     */
    public static final AddressLayout PSTORAGE_OPERATIONAL_REASON = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_MANAGEMENT_STATUS* PSTORAGE_DEVICE_MANAGEMENT_STATUS;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_MANAGEMENT_STATUS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ADAPTER_SERIAL_NUMBER* PSTORAGE_ADAPTER_SERIAL_NUMBER;
     * }
     */
    public static final AddressLayout PSTORAGE_ADAPTER_SERIAL_NUMBER = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeUnknown = 0;
     * }
     */
    public static int ZonedDeviceTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostManaged = 1;
     * }
     */
    public static int ZonedDeviceTypeHostManaged() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostAware = 2;
     * }
     */
    public static int ZonedDeviceTypeHostAware() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeDeviceManaged = 3;
     * }
     */
    public static int ZonedDeviceTypeDeviceManaged() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONED_DEVICE_TYPES* PSTORAGE_ZONED_DEVICE_TYPES;
     * }
     */
    public static final AddressLayout PSTORAGE_ZONED_DEVICE_TYPES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeUnknown = 0;
     * }
     */
    public static int ZoneTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeConventional = 1;
     * }
     */
    public static int ZoneTypeConventional() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWriteRequired = 2;
     * }
     */
    public static int ZoneTypeSequentialWriteRequired() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWritePreferred = 3;
     * }
     */
    public static int ZoneTypeSequentialWritePreferred() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeMax = 4;
     * }
     */
    public static int ZoneTypeMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONE_TYPES* PSTORAGE_ZONE_TYPES;
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_TYPES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ZONE_GROUP* PSTORAGE_ZONE_GROUP;
     * }
     */
    public static final AddressLayout PSTORAGE_ZONE_GROUP = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ZONED_DEVICE_DESCRIPTOR* PSTORAGE_ZONED_DEVICE_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_ZONED_DEVICE_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_LOCATION* PDEVICE_LOCATION;
     * }
     */
    public static final AddressLayout PDEVICE_LOCATION = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_LOCATION_DESCRIPTOR* PSTORAGE_DEVICE_LOCATION_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_LOCATION_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_NUMA_PROPERTY* PSTORAGE_DEVICE_NUMA_PROPERTY;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_NUMA_PROPERTY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT* PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_ENDURANCE_INFO* PSTORAGE_HW_ENDURANCE_INFO;
     * }
     */
    public static final AddressLayout PSTORAGE_HW_ENDURANCE_INFO = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR* PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_LED_STATE_DESCRIPTOR* PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY* PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY;
     * }
     */
    public static final AddressLayout PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_FRU_ID_DESCRIPTOR* PSTORAGE_FRU_ID_DESCRIPTOR;
     * }
     */
    public static final AddressLayout PSTORAGE_FRU_ID_DESCRIPTOR = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned long DEVICE_DATA_MANAGEMENT_SET_ACTION;
     * }
     */
    public static final OfInt DEVICE_DATA_MANAGEMENT_SET_ACTION = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long DEVICE_DSM_ACTION;
     * }
     */
    public static final OfInt DEVICE_DSM_ACTION = JAVA_INT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_RANGE* PDEVICE_DATA_SET_RANGE;
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_RANGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_RANGE* PDEVICE_DSM_RANGE;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_RANGE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES* PDEVICE_MANAGE_DATA_SET_ATTRIBUTES;
     * }
     */
    public static final AddressLayout PDEVICE_MANAGE_DATA_SET_ATTRIBUTES = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES* PDEVICE_DSM_INPUT;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_INPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT* PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
     * }
     */
    public static final AddressLayout PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT* PDEVICE_DSM_OUTPUT;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OUTPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_DEFINITION* PDEVICE_DSM_DEFINITION;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_DEFINITION = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS* PDEVICE_DSM_NOTIFICATION_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_NOTIFICATION_PARAMETERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_TOKEN* PSTORAGE_OFFLOAD_TOKEN;
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_TOKEN = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS* PDEVICE_DSM_OFFLOAD_READ_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OFFLOAD_READ_PARAMETERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_READ_OUTPUT* PSTORAGE_OFFLOAD_READ_OUTPUT;
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_READ_OUTPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS* PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT* PSTORAGE_OFFLOAD_WRITE_OUTPUT;
     * }
     */
    public static final AddressLayout PSTORAGE_OFFLOAD_WRITE_OUTPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS* PDEVICE_DATA_SET_LBP_STATE_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LBP_STATE_PARAMETERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS* PDEVICE_DSM_ALLOCATION_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_PARAMETERS = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE* PDEVICE_DATA_SET_LB_PROVISIONING_STATE;
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LB_PROVISIONING_STATE = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE* PDEVICE_DSM_ALLOCATION_OUTPUT;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_OUTPUT = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2* PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2;
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2* PDEVICE_DSM_ALLOCATION_OUTPUT2;
     * }
     */
    public static final AddressLayout PDEVICE_DSM_ALLOCATION_OUTPUT2 = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS* PDEVICE_DATA_SET_REPAIR_PARAMETERS;
     * }
     */
    public static final AddressLayout PDEVICE_DATA_SET_REPAIR_PARAMETERS = RuntimeHelper.POINTER;
}


