// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct HDDEDATA__* (*PFNCALLBACK)(unsigned int wType,unsigned int wFmt,struct HCONV__* hConv,struct HSZ__* hsz1,struct HSZ__* hsz2,struct HDDEDATA__* hData,unsigned long long dwData1,unsigned long long dwData2);
 * }
 */
public interface PFNCALLBACK {

    java.lang.foreign.MemorySegment apply(int wType, int wFmt, java.lang.foreign.MemorySegment hConv, java.lang.foreign.MemorySegment hsz1, java.lang.foreign.MemorySegment hsz2, java.lang.foreign.MemorySegment hData, long dwData1, long dwData2);
    static MemorySegment allocate(PFNCALLBACK fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$1530.const$4, fi, constants$1530.const$1, scope);
    }
    static PFNCALLBACK ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int _wType, int _wFmt, java.lang.foreign.MemorySegment _hConv, java.lang.foreign.MemorySegment _hsz1, java.lang.foreign.MemorySegment _hsz2, java.lang.foreign.MemorySegment _hData, long _dwData1, long _dwData2) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$1530.const$3.invokeExact(symbol, _wType, _wFmt, _hConv, _hsz1, _hsz2, _hData, _dwData1, _dwData2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


