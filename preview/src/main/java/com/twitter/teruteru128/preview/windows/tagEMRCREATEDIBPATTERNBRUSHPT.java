// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagEMRCREATEDIBPATTERNBRUSHPT {
 *     EMR emr;
 *     DWORD ihBrush;
 *     DWORD iUsage;
 *     DWORD offBmi;
 *     DWORD cbBmi;
 *     DWORD offBits;
 *     DWORD cbBits;
 * };
 * }
 */
public class tagEMRCREATEDIBPATTERNBRUSHPT {

    public static MemoryLayout $LAYOUT() {
        return constants$1108.const$3;
    }
    public static MemorySegment emr$slice(MemorySegment seg) {
        return seg.asSlice(0, 8);
    }
    public static VarHandle ihBrush$VH() {
        return constants$1108.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ihBrush;
     * }
     */
    public static int ihBrush$get(MemorySegment seg) {
        return (int)constants$1108.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ihBrush;
     * }
     */
    public static void ihBrush$set(MemorySegment seg, int x) {
        constants$1108.const$4.set(seg, x);
    }
    public static int ihBrush$get(MemorySegment seg, long index) {
        return (int)constants$1108.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void ihBrush$set(MemorySegment seg, long index, int x) {
        constants$1108.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle iUsage$VH() {
        return constants$1108.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD iUsage;
     * }
     */
    public static int iUsage$get(MemorySegment seg) {
        return (int)constants$1108.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD iUsage;
     * }
     */
    public static void iUsage$set(MemorySegment seg, int x) {
        constants$1108.const$5.set(seg, x);
    }
    public static int iUsage$get(MemorySegment seg, long index) {
        return (int)constants$1108.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void iUsage$set(MemorySegment seg, long index, int x) {
        constants$1108.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offBmi$VH() {
        return constants$1109.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD offBmi;
     * }
     */
    public static int offBmi$get(MemorySegment seg) {
        return (int)constants$1109.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD offBmi;
     * }
     */
    public static void offBmi$set(MemorySegment seg, int x) {
        constants$1109.const$0.set(seg, x);
    }
    public static int offBmi$get(MemorySegment seg, long index) {
        return (int)constants$1109.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void offBmi$set(MemorySegment seg, long index, int x) {
        constants$1109.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbBmi$VH() {
        return constants$1109.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbBmi;
     * }
     */
    public static int cbBmi$get(MemorySegment seg) {
        return (int)constants$1109.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbBmi;
     * }
     */
    public static void cbBmi$set(MemorySegment seg, int x) {
        constants$1109.const$1.set(seg, x);
    }
    public static int cbBmi$get(MemorySegment seg, long index) {
        return (int)constants$1109.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void cbBmi$set(MemorySegment seg, long index, int x) {
        constants$1109.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle offBits$VH() {
        return constants$1109.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD offBits;
     * }
     */
    public static int offBits$get(MemorySegment seg) {
        return (int)constants$1109.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD offBits;
     * }
     */
    public static void offBits$set(MemorySegment seg, int x) {
        constants$1109.const$2.set(seg, x);
    }
    public static int offBits$get(MemorySegment seg, long index) {
        return (int)constants$1109.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void offBits$set(MemorySegment seg, long index, int x) {
        constants$1109.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cbBits$VH() {
        return constants$1109.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbBits;
     * }
     */
    public static int cbBits$get(MemorySegment seg) {
        return (int)constants$1109.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbBits;
     * }
     */
    public static void cbBits$set(MemorySegment seg, int x) {
        constants$1109.const$3.set(seg, x);
    }
    public static int cbBits$get(MemorySegment seg, long index) {
        return (int)constants$1109.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void cbBits$set(MemorySegment seg, long index, int x) {
        constants$1109.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


