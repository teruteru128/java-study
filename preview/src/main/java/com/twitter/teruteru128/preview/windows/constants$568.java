// Generated by jextract

package com.twitter.teruteru128.preview.windows;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$568 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$568() {}
    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_INT.withName("dwDebugEventCode"),
        JAVA_INT.withName("dwProcessId"),
        JAVA_INT.withName("dwThreadId"),
        MemoryLayout.paddingLayout(4),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    JAVA_INT.withName("ExceptionCode"),
                    JAVA_INT.withName("ExceptionFlags"),
                    RuntimeHelper.POINTER.withName("ExceptionRecord"),
                    RuntimeHelper.POINTER.withName("ExceptionAddress"),
                    JAVA_INT.withName("NumberParameters"),
                    MemoryLayout.paddingLayout(4),
                    MemoryLayout.sequenceLayout(15, JAVA_LONG).withName("ExceptionInformation")
                ).withName("ExceptionRecord"),
                JAVA_INT.withName("dwFirstChance"),
                MemoryLayout.paddingLayout(4)
            ).withName("Exception"),
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("hThread"),
                RuntimeHelper.POINTER.withName("lpThreadLocalBase"),
                RuntimeHelper.POINTER.withName("lpStartAddress")
            ).withName("CreateThread"),
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("hFile"),
                RuntimeHelper.POINTER.withName("hProcess"),
                RuntimeHelper.POINTER.withName("hThread"),
                RuntimeHelper.POINTER.withName("lpBaseOfImage"),
                JAVA_INT.withName("dwDebugInfoFileOffset"),
                JAVA_INT.withName("nDebugInfoSize"),
                RuntimeHelper.POINTER.withName("lpThreadLocalBase"),
                RuntimeHelper.POINTER.withName("lpStartAddress"),
                RuntimeHelper.POINTER.withName("lpImageName"),
                JAVA_SHORT.withName("fUnicode"),
                MemoryLayout.paddingLayout(6)
            ).withName("CreateProcessInfo"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("dwExitCode")
            ).withName("ExitThread"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("dwExitCode")
            ).withName("ExitProcess"),
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("hFile"),
                RuntimeHelper.POINTER.withName("lpBaseOfDll"),
                JAVA_INT.withName("dwDebugInfoFileOffset"),
                JAVA_INT.withName("nDebugInfoSize"),
                RuntimeHelper.POINTER.withName("lpImageName"),
                JAVA_SHORT.withName("fUnicode"),
                MemoryLayout.paddingLayout(6)
            ).withName("LoadDll"),
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("lpBaseOfDll")
            ).withName("UnloadDll"),
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("lpDebugStringData"),
                JAVA_SHORT.withName("fUnicode"),
                JAVA_SHORT.withName("nDebugStringLength"),
                MemoryLayout.paddingLayout(4)
            ).withName("DebugString"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("dwError"),
                JAVA_INT.withName("dwType")
            ).withName("RipInfo")
        ).withName("u")
    ).withName("_DEBUG_EVENT");
    static final VarHandle const$1 = constants$568.const$0.varHandle(MemoryLayout.PathElement.groupElement("dwDebugEventCode"));
    static final VarHandle const$2 = constants$568.const$0.varHandle(MemoryLayout.PathElement.groupElement("dwProcessId"));
    static final VarHandle const$3 = constants$568.const$0.varHandle(MemoryLayout.PathElement.groupElement("dwThreadId"));
    static final UnionLayout const$4 = MemoryLayout.unionLayout(
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                JAVA_INT.withName("ExceptionCode"),
                JAVA_INT.withName("ExceptionFlags"),
                RuntimeHelper.POINTER.withName("ExceptionRecord"),
                RuntimeHelper.POINTER.withName("ExceptionAddress"),
                JAVA_INT.withName("NumberParameters"),
                MemoryLayout.paddingLayout(4),
                MemoryLayout.sequenceLayout(15, JAVA_LONG).withName("ExceptionInformation")
            ).withName("ExceptionRecord"),
            JAVA_INT.withName("dwFirstChance"),
            MemoryLayout.paddingLayout(4)
        ).withName("Exception"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("hThread"),
            RuntimeHelper.POINTER.withName("lpThreadLocalBase"),
            RuntimeHelper.POINTER.withName("lpStartAddress")
        ).withName("CreateThread"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("hFile"),
            RuntimeHelper.POINTER.withName("hProcess"),
            RuntimeHelper.POINTER.withName("hThread"),
            RuntimeHelper.POINTER.withName("lpBaseOfImage"),
            JAVA_INT.withName("dwDebugInfoFileOffset"),
            JAVA_INT.withName("nDebugInfoSize"),
            RuntimeHelper.POINTER.withName("lpThreadLocalBase"),
            RuntimeHelper.POINTER.withName("lpStartAddress"),
            RuntimeHelper.POINTER.withName("lpImageName"),
            JAVA_SHORT.withName("fUnicode"),
            MemoryLayout.paddingLayout(6)
        ).withName("CreateProcessInfo"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("dwExitCode")
        ).withName("ExitThread"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("dwExitCode")
        ).withName("ExitProcess"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("hFile"),
            RuntimeHelper.POINTER.withName("lpBaseOfDll"),
            JAVA_INT.withName("dwDebugInfoFileOffset"),
            JAVA_INT.withName("nDebugInfoSize"),
            RuntimeHelper.POINTER.withName("lpImageName"),
            JAVA_SHORT.withName("fUnicode"),
            MemoryLayout.paddingLayout(6)
        ).withName("LoadDll"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("lpBaseOfDll")
        ).withName("UnloadDll"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("lpDebugStringData"),
            JAVA_SHORT.withName("fUnicode"),
            JAVA_SHORT.withName("nDebugStringLength"),
            MemoryLayout.paddingLayout(4)
        ).withName("DebugString"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("dwError"),
            JAVA_INT.withName("dwType")
        ).withName("RipInfo")
    ).withName("");
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "IsApiSetImplemented",
        constants$18.const$5
    );
}


